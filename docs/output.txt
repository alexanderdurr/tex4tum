bundle exec jekyll serve
Configuration file: /home/emareg/Dropbox/Projekte/LearningPlatform/tex4tum/_config.yml
            Source: /home/emareg/Dropbox/Projekte/LearningPlatform/tex4tum
       Destination: /home/emareg/Dropbox/Projekte/LearningPlatform/tex4tum/_site
 Incremental build: disabled. Enable with --incremental
      Generating... 
Add TeX Definitions...
Add Abbreviations...
Parsing TODOs...
Generating Table of Contents (TOC)...
Post Render Hook: replace abbreviation
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
I2C is serial bus used to attach lower-speed peripheral ICs to processors and microcontrollers in short-distance.
</p>
</div>
</div>
</div>
<h2 id="specification">Specification</h2>
<p>I2C uses only two bidirectional open collector or open drain lines, <em>SDA</em> and <em>SCK</em>, which are pulled up with resistors. Typical voltages used are +5 V or +3.3 V.</p>
<p>Transmission Speeds</p>
<table>
<thead>
<tr class="header">
<th>Mode</th>
<th>Speed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Standard Mode</td>
<td>100 kbit/s</td>
</tr>
<tr class="even">
<td>Fast Mode</td>
<td>400 kbit/s</td>
</tr>
<tr class="odd">
<td>Fast Mode Plus</td>
<td>1.0 Mbit/s</td>
</tr>
</tbody>
</table>
<h2 id="protocol">Protocol</h2>
<p>There is one master and several slaves (max 127). The MSB is transmitted first.</p>
<pre><code>      __    ___ ___ ___ ___ ___ ___ ___ ___        __
SDA --  \__/___X___X___X___X___X___X___X___\______/  --
      ____   _   _   _   _   _   _   _   _   _   ____
SCL --    \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/    --
        S    0   1   2   3   4   5   6   7  <abbr title="ACKnowledgement" >ACK</abbr>   P  

Full request: Address, Command, Data:
      __    _ _ _ _ ___     _ _ _ _     _ _ _ _        _ 
SDA --  \__/_X_X_X_X___\___/_ _ _ _\___/_ _ _ _\______/ 
      ____   _ _ _   _   _   _ _ _   _   _ _ _   _   ___
SCL --    \_/ 0-6 \_/7\_/8\_/ 0-7 \_/8\_/ 0-7 \_/8\_/   
        S     Addr  RW  <abbr title="ACKnowledgement" >ACK</abbr>   Cmd   <abbr title="ACKnowledgement" >ACK</abbr>   Data  <abbr title="ACKnowledgement" >ACK</abbr>   P </code></pre>
<h3 id="timing">Timing</h3>
<ul>
<li>Start (S): master pulls SDA low while SCL stays high.</li>
<li>Data Bits (0-7): Sampling starts when SCL rises. For a bit to be valid, SDA must not change between a rising and falling edge of SCL.</li>
<li>ACK: Each byte of data is followed by a 9th <abbr title="ACKnowledgement" >ACK</abbr> bit. This bit is controlled by the slave! The master releases SDA (pulled high). The byte is acknowledged iff the slaves pulls SDA bit low. 0 = ACK, 1 = NAK.</li>
<li>Stop (P): signaled when SCL rises, followed by SDA rising.</li>
</ul>
<h3 id="write-to-device">Write to Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends a command byte followed by any number of data bytes. Slave ACKs every byte.</li>
</ol>
<h3 id="read-from-device">Read from Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends the register address it wants to read from the Slave. Slave ACKs every byte.</li>
<li>Master resends Start bit.</li>
<li>Master sends 7 bit Address and R/W bit set to 1=read. Slave ACKs.</li>
<li>Master continues SCL but releases SDA. Slave sends requested data. Master ACKs every byte.</li>
<li>When the Master received the last expected byte, it sends a NAK instead of <abbr title="ACKnowledgement" >ACK</abbr> followed by the Stop (P).</li>
</ol>
<h2 id="references">References</h2>
<ul>
<li><a href="http://www.ti.com/lit/an/slva704/slva704.pdf">Texas Instruments: Understanding the I2C Bus</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Inter-Integrated Circuit" >I2C</abbr> is serial bus used to attach lower-speed peripheral ICs to processors and microcontrollers in short-distance.
</p>
</div>
</div>
</div>
<h2 id="specification">Specification</h2>
<p>I2C uses only two bidirectional open collector or open drain lines, <em>SDA</em> and <em>SCK</em>, which are pulled up with resistors. Typical voltages used are +5 V or +3.3 V.</p>
<p>Transmission Speeds</p>
<table>
<thead>
<tr class="header">
<th>Mode</th>
<th>Speed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Standard Mode</td>
<td>100 kbit/s</td>
</tr>
<tr class="even">
<td>Fast Mode</td>
<td>400 kbit/s</td>
</tr>
<tr class="odd">
<td>Fast Mode Plus</td>
<td>1.0 Mbit/s</td>
</tr>
</tbody>
</table>
<h2 id="protocol">Protocol</h2>
<p>There is one master and several slaves (max 127). The MSB is transmitted first.</p>
<pre><code>      __    ___ ___ ___ ___ ___ ___ ___ ___        __
SDA --  \__/___X___X___X___X___X___X___X___\______/  --
      ____   _   _   _   _   _   _   _   _   _   ____
SCL --    \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/    --
        S    0   1   2   3   4   5   6   7  <abbr title="ACKnowledgement" >ACK</abbr>   P  

Full request: Address, Command, Data:
      __    _ _ _ _ ___     _ _ _ _     _ _ _ _        _ 
SDA --  \__/_X_X_X_X___\___/_ _ _ _\___/_ _ _ _\______/ 
      ____   _ _ _   _   _   _ _ _   _   _ _ _   _   ___
SCL --    \_/ 0-6 \_/7\_/8\_/ 0-7 \_/8\_/ 0-7 \_/8\_/   
        S     Addr  RW  <abbr title="ACKnowledgement" >ACK</abbr>   Cmd   <abbr title="ACKnowledgement" >ACK</abbr>   Data  <abbr title="ACKnowledgement" >ACK</abbr>   P </code></pre>
<h3 id="timing">Timing</h3>
<ul>
<li>Start (S): master pulls SDA low while SCL stays high.</li>
<li>Data Bits (0-7): Sampling starts when SCL rises. For a bit to be valid, SDA must not change between a rising and falling edge of SCL.</li>
<li>ACK: Each byte of data is followed by a 9th <abbr title="ACKnowledgement" >ACK</abbr> bit. This bit is controlled by the slave! The master releases SDA (pulled high). The byte is acknowledged iff the slaves pulls SDA bit low. 0 = ACK, 1 = NAK.</li>
<li>Stop (P): signaled when SCL rises, followed by SDA rising.</li>
</ul>
<h3 id="write-to-device">Write to Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends a command byte followed by any number of data bytes. Slave ACKs every byte.</li>
</ol>
<h3 id="read-from-device">Read from Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends the register address it wants to read from the Slave. Slave ACKs every byte.</li>
<li>Master resends Start bit.</li>
<li>Master sends 7 bit Address and R/W bit set to 1=read. Slave ACKs.</li>
<li>Master continues SCL but releases SDA. Slave sends requested data. Master ACKs every byte.</li>
<li>When the Master received the last expected byte, it sends a NAK instead of <abbr title="ACKnowledgement" >ACK</abbr> followed by the Stop (P).</li>
</ol>
<h2 id="references">References</h2>
<ul>
<li><a href="http://www.ti.com/lit/an/slva704/slva704.pdf">Texas Instruments: Understanding the <abbr title="Inter-Integrated Circuit" >I2C</abbr> Bus</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Inter-Integrated Circuit" >I2C</abbr> is serial bus used to attach lower-speed peripheral ICs to processors and microcontrollers in short-distance.
</p>
</div>
</div>
</div>
<h2 id="specification">Specification</h2>
<p>I2C uses only two bidirectional open collector or open drain lines, <em>SDA</em> and <em>SCK</em>, which are pulled up with resistors. Typical voltages used are +5 V or +3.3 V.</p>
<p>Transmission Speeds</p>
<table>
<thead>
<tr class="header">
<th>Mode</th>
<th>Speed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Standard Mode</td>
<td>100 kbit/s</td>
</tr>
<tr class="even">
<td>Fast Mode</td>
<td>400 kbit/s</td>
</tr>
<tr class="odd">
<td>Fast Mode Plus</td>
<td>1.0 Mbit/s</td>
</tr>
</tbody>
</table>
<h2 id="protocol">Protocol</h2>
<p>There is one master and several slaves (max 127). The <abbr title="Most Significant Bit" >MSB</abbr> is transmitted first.</p>
<pre><code>      __    ___ ___ ___ ___ ___ ___ ___ ___        __
SDA --  \__/___X___X___X___X___X___X___X___\______/  --
      ____   _   _   _   _   _   _   _   _   _   ____
SCL --    \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/    --
        S    0   1   2   3   4   5   6   7  <abbr title="ACKnowledgement" >ACK</abbr>   P  

Full request: Address, Command, Data:
      __    _ _ _ _ ___     _ _ _ _     _ _ _ _        _ 
SDA --  \__/_X_X_X_X___\___/_ _ _ _\___/_ _ _ _\______/ 
      ____   _ _ _   _   _   _ _ _   _   _ _ _   _   ___
SCL --    \_/ 0-6 \_/7\_/8\_/ 0-7 \_/8\_/ 0-7 \_/8\_/   
        S     Addr  RW  <abbr title="ACKnowledgement" >ACK</abbr>   Cmd   <abbr title="ACKnowledgement" >ACK</abbr>   Data  <abbr title="ACKnowledgement" >ACK</abbr>   P </code></pre>
<h3 id="timing">Timing</h3>
<ul>
<li>Start (S): master pulls SDA low while SCL stays high.</li>
<li>Data Bits (0-7): Sampling starts when SCL rises. For a bit to be valid, SDA must not change between a rising and falling edge of SCL.</li>
<li>ACK: Each byte of data is followed by a 9th <abbr title="ACKnowledgement" >ACK</abbr> bit. This bit is controlled by the slave! The master releases SDA (pulled high). The byte is acknowledged iff the slaves pulls SDA bit low. 0 = ACK, 1 = NAK.</li>
<li>Stop (P): signaled when SCL rises, followed by SDA rising.</li>
</ul>
<h3 id="write-to-device">Write to Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends a command byte followed by any number of data bytes. Slave ACKs every byte.</li>
</ol>
<h3 id="read-from-device">Read from Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends the register address it wants to read from the Slave. Slave ACKs every byte.</li>
<li>Master resends Start bit.</li>
<li>Master sends 7 bit Address and R/W bit set to 1=read. Slave ACKs.</li>
<li>Master continues SCL but releases SDA. Slave sends requested data. Master ACKs every byte.</li>
<li>When the Master received the last expected byte, it sends a NAK instead of <abbr title="ACKnowledgement" >ACK</abbr> followed by the Stop (P).</li>
</ol>
<h2 id="references">References</h2>
<ul>
<li><a href="http://www.ti.com/lit/an/slva704/slva704.pdf">Texas Instruments: Understanding the <abbr title="Inter-Integrated Circuit" >I2C</abbr> Bus</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Inter-Integrated Circuit" >I2C</abbr> is serial bus used to attach lower-speed peripheral ICs to processors and microcontrollers in short-distance.
</p>
</div>
</div>
</div>
<h2 id="specification">Specification</h2>
<p>I2C uses only two bidirectional open collector or open drain lines, <em>SDA</em> and <em>SCK</em>, which are pulled up with resistors. Typical voltages used are +5 V or +3.3 V.</p>
<p>Transmission Speeds</p>
<table>
<thead>
<tr class="header">
<th>Mode</th>
<th>Speed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Standard Mode</td>
<td>100 kbit/s</td>
</tr>
<tr class="even">
<td>Fast Mode</td>
<td>400 kbit/s</td>
</tr>
<tr class="odd">
<td>Fast Mode Plus</td>
<td>1.0 Mbit/s</td>
</tr>
</tbody>
</table>
<h2 id="protocol">Protocol</h2>
<p>There is one master and several slaves (max 127). The <abbr title="Most Significant Bit" >MSB</abbr> is transmitted first.</p>
<pre><code>      __    ___ ___ ___ ___ ___ ___ ___ ___        __
SDA --  \__/___X___X___X___X___X___X___X___\______/  --
      ____   _   _   _   _   _   _   _   _   _   ____
SCL --    \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/    --
        S    0   1   2   3   4   5   6   7  <abbr title="ACKnowledgement" >ACK</abbr>   P  

Full request: Address, Command, Data:
      __    _ _ _ _ ___     _ _ _ _     _ _ _ _        _ 
SDA --  \__/_X_X_X_X___\___/_ _ _ _\___/_ _ _ _\______/ 
      ____   _ _ _   _   _   _ _ _   _   _ _ _   _   ___
SCL --    \_/ 0-6 \_/7\_/8\_/ 0-7 \_/8\_/ 0-7 \_/8\_/   
        S     Addr  RW  <abbr title="ACKnowledgement" >ACK</abbr>   Cmd   <abbr title="ACKnowledgement" >ACK</abbr>   Data  <abbr title="ACKnowledgement" >ACK</abbr>   P </code></pre>
<h3 id="timing">Timing</h3>
<ul>
<li>Start (S): master pulls SDA low while SCL stays high.</li>
<li>Data Bits (0-7): Sampling starts when SCL rises. For a bit to be valid, SDA must not change between a rising and falling edge of SCL.</li>
<li>ACK: Each byte of data is followed by a 9th <abbr title="ACKnowledgement" >ACK</abbr> bit. This bit is controlled by the slave! The master releases SDA (pulled high). The byte is acknowledged iff the slaves pulls SDA bit low. 0 = ACK, 1 = NAK.</li>
<li>Stop (P): signaled when SCL rises, followed by SDA rising.</li>
</ul>
<h3 id="write-to-device">Write to Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends a command byte followed by any number of data bytes. Slave ACKs every byte.</li>
</ol>
<h3 id="read-from-device">Read from Device</h3>
<ol type="1">
<li>Master sends Start bit.</li>
<li>Master sends Address+R/W: 7 bit slave address and one R/W bit (0=write). Slave ACKs.</li>
<li>Master sends the register address it wants to read from the Slave. Slave ACKs every byte.</li>
<li>Master resends Start bit.</li>
<li>Master sends 7 bit Address and R/W bit set to 1=read. Slave ACKs.</li>
<li>Master continues SCL but releases SDA. Slave sends requested data. Master ACKs every byte.</li>
<li>When the Master received the last expected byte, it sends a <abbr title="Negative AcKnowledge Character" >NAK</abbr> instead of <abbr title="ACKnowledgement" >ACK</abbr> followed by the Stop (P).</li>
</ol>
<h2 id="references">References</h2>
<ul>
<li><a href="http://www.ti.com/lit/an/slva704/slva704.pdf">Texas Instruments: Understanding the <abbr title="Inter-Integrated Circuit" >I2C</abbr> Bus</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Universal Asynchronous Receiver Transmitter" >UART</abbr> is serial bus.
</p>
</div>
</div>
</div>
<h2 id="specification">Specification</h2>
<table>
<thead>
<tr class="header">
<th>Signals</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>RX</td>
<td>Receiving Line (In)</td>
</tr>
<tr class="even">
<td>TX</td>
<td>Transmitting Line (Out)</td>
</tr>
<tr class="odd">
<td>(RTS)</td>
<td>Request to Send</td>
</tr>
<tr class="even">
<td>(CTS)</td>
<td>Clear to Send</td>
</tr>
</tbody>
</table>
<p>Note: TX signal of the sender is connected to the RX signal at the receiver!</p>
<h3 id="baudrate">Baudrate</h3>
<p>Baudrate is the same as frequency or bitrate in bit/s!</p>
<p><strong>Common Baudrates:</strong></p>
<ul>
<li>9'600 bit/s</li>
<li>38'400 bit/s</li>
<li>57'600 bit/s</li>
<li>115'200 bit/s</li>
</ul>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example2">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example2' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
If a baudrate of 9600 bits/s is used with one stop bit and no parity (10 bit per byte) then the datarate would be 960 byte/s.
<p>
</div>
</div>
</div>
<h2 id="protocol">Protocol</h2>
<p>UART uses serial transmission of 8 bits framed by start and stop bits.</p>
<pre><code>       ___     ___ ___ ___ ___ ___ ___ ___ ___ ________
RX ---    \___/___X___X___X___X___X___X___X___X___/    ---
            S  b0  b1  b2  b3  b4  b5  b6  b7  pr  sp

S: start bit,  b0-7: data,  pr: parity bit,  sp: stop bit</code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl2">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl2' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
All operations of the <abbr title="Universal Asynchronous Receiver Transmitter" >UART</abbr> hardware are controlled by an internal clock signal which runs at a multiple of the data rate, typically 8 or 16 times the bit rate. The receiver tests the state of the incoming signal on each clock pulse, looking for the beginning of the start bit. If the apparent start bit lasts at least one-half of the bit time, it is valid and signals the start of a new character. If not, it is considered a spurious pulse and is ignored.
<p>
</div>
</div>
</div>
<p><strong>Variants:</strong> Stop bits: 1, 1.5, 2</br> Parity: odd, even, none</p>
<h3 id="receiver-errors">Receiver Errors</h3>
<ul>
<li><strong>Overrun error:</strong> the receiver cannot process the character that just came in before the next one arrives.</li>
<li><strong>Underrun error</strong> the next character starts delayed which might be intepreted as the end of the transmission.</li>
<li><strong>Framing error:</strong> receiver does not see a &quot;stop&quot; bit at the expected &quot;stop&quot; bit time.</li>
<li><strong>Parity error:</strong> the calculated parity of the received data bits disagrees with the received parity bit.</li>
<li><strong>Break condition:</strong> receiver continuously reads 0 for longer than the full character time</li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The <abbr title="Universal Serial Bus" >USB</abbr> is serial bus commonly used in computers.
</p>
</div>
</div>
</div>
<h2 id="overview">Overview</h2>
<table>
<thead>
<tr class="header">
<th>Standard</th>
<th>Speed</th>
<th>Current</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>USB 1.0 (1996)</td>
<td>12 Mbit/s</td>
<td>100 mA</td>
</tr>
<tr class="even">
<td>USB 2.0 (2000)</td>
<td>480 Mbit/s</td>
<td>500 mA</td>
</tr>
<tr class="odd">
<td>USB 3.0 (2008)</td>
<td>5.0 Gbit/s</td>
<td>900 mA</td>
</tr>
<tr class="even">
<td>USB 3.1 (2013)</td>
<td>10 Gbit/s</td>
<td></td>
</tr>
<tr class="odd">
<td>USB 3.2 (2017)</td>
<td>20 Gbit/s</td>
<td></td>
</tr>
</tbody>
</table>
<p>Maximum devices: 127. Cable length: <span class="LaTeX">$\lt {5\,\mathrm{m}}$</span></p>
<!--<p> Filename="usb-connectors.svg", path="/res/img/content-images/connectors/usb-connectors.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 20em;" src="/res/img/content-images/connectors/usb-connectors.svg" alt="USB Connectors"/>
<figcaption class="figure-caption">
<abbr title="Universal Serial Bus" >USB</abbr> Connectors
</figcaption>
</figure>
<h2 id="usb-2.0">USB 2.0</h2>
<table>
<thead>
<tr class="header">
<th>Pin</th>
<th>Signal</th>
<th>Color</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>VBUS</td>
<td>Red</td>
<td>Vdd</td>
</tr>
<tr class="even">
<td>2</td>
<td>D-</td>
<td>White</td>
<td>Inverted Signal</td>
</tr>
<tr class="odd">
<td>3</td>
<td>D+</td>
<td>Green</td>
<td>Signal</td>
</tr>
<tr class="even">
<td>4</td>
<td>GND</td>
<td>Black</td>
<td>Ground</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th>Spec</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Speed</td>
<td>480 Mbit/s</td>
</tr>
<tr class="even">
<td>Voltage</td>
<td>5.0 ± 0.25 V</td>
</tr>
<tr class="odd">
<td>Current</td>
<td>100mA, 500mA, 5A</td>
</tr>
<tr class="even">
<td>Length</td>
<td>&lt; 5 m</td>
</tr>
</tbody>
</table>
<p>The practical speed is 280 Mbit/s due to bus access constraints.</p>
<h3 id="pinout">Pinout</h3>
<table style="text-align: center;">
<caption>
Standardstecker A / B
</caption>
<tbody>
<tr>
<th>
Pin
</th>
<th>
Color
</th>
<th>
Signal
</th>
<th>
Description
</th>
</tr>
<tr>
<td style="text-align: center;">
Shell
</td>
<td style="background: lightgray; color: black;">
n.a.
</td>
<td>
Shield
</td>
<td>
Schirmgeflecht
</td>
</tr>
<tr>
<td style="text-align: center;">
1
</td>
<td style="background: red; color: white;">
Red
</td>
<td>
VBUS
</td>
<td>
+5 V
</td>
</tr>
<tr>
<td style="text-align: center;">
2
</td>
<td style="background: white; color: black;">
White
</td>
<td>
D−
</td>
<td rowspan="2" style="text-align: left;">
Data USB 2.0, differential Pair −/+
</td>
</tr>
<tr>
<td style="text-align: center;">
3
</td>
<td style="background: green; color: white;">
Green
</td>
<td>
D+
</td>
</tr>
<tr>
<td style="text-align: center;">
4
</td>
<td style="background: black; color: white;">
Black
</td>
<td>
GND
</td>
<td>
Ground
</td>
</tr>
</tbody>
</table>
<h2 id="usb-3.0">USB 3.0</h2>
<!-- Wikipedia Table -->
<table>
<tbody style="text-align: center;">
<tr>
<th rowspan="2">
Pin
</th>
<th rowspan="2">
Color
</th>
<th colspan="2">
Signal name
</th>
<th rowspan="2">
Description
</th>
</tr>
<tr>
<th>
A connector
</th>
<th>
B connector
</th>
</tr>
<tr>
<td>
Shell
</td>
<td data-sort-value style="background: #ececec; color: #2C2C2C; vertical-align: middle; font-size: smaller; text-align: center;" class="table-na">
N/A
</td>
<td colspan="2">
Shield
</td>
<td style="text-align: left;">
Metal housing
</td>
</tr>
<tr>
<td>
1
</td>
<td style="background: red; color: white;">
Red
</td>
<td colspan="2">
VBUS
</td>
<td style="text-align: left;">
Power
</td>
</tr>
<tr>
<td>
2
</td>
<td style="background: grey;">
White
</td>
<td colspan="2">
D−
</td>
<td rowspan="2" style="text-align: left;">
USB 2.0 differential pair
</td>
</tr>
<tr>
<td>
3
</td>
<td style="background: green; color: white;">
Green
</td>
<td colspan="2">
D+
</td>
</tr>
<tr>
<td>
4
</td>
<td style="background: black; color: white;">
Black
</td>
<td colspan="2">
GND
</td>
<td style="text-align: left;">
Ground for power return
</td>
</tr>
<tr>
<td>
5
</td>
<td style="background: blue; color: white;">
Blue
</td>
<td>
StdA_SSRX−
</td>
<td>
StdB_SSTX−
</td>
<td rowspan="2" style="text-align: left;">
SuperSpeed transmitter differential pair
</td>
</tr>
<tr>
<td>
6
</td>
<td style="background: yellow;">
Yellow
</td>
<td>
StdA_SSRX+
</td>
<td>
StdB_SSTX+
</td>
</tr>
<tr>
<td>
7
</td>
<td data-sort-value style="background: #ececec; color: #2C2C2C; vertical-align: middle; font-size: smaller; text-align: center;" class="table-na">
N/A
</td>
<td colspan="2">
GND_DRAIN
</td>
<td style="text-align: left;">
Ground for signal return
</td>
</tr>
<tr>
<td>
8
</td>
<td style="background: purple; color: white;">
Purple
</td>
<td>
StdA_SSTX−
</td>
<td>
StdB_SSRX−
</td>
<td rowspan="2" style="text-align: left;">
SuperSpeed receiver differential pair
</td>
</tr>
<tr>
<td>
9
</td>
<td style="background: orange;">
Orange
</td>
<td>
StdA_SSTX+
</td>
<td>
StdB_SSRX+
</td>
</tr>
<tr>
<th style="background:none;" colspan="5">
The USB 3.0 <i>Powered-B</i> connector has two additional pins for power and ground supplied to the device.
</th>
</tr>
<tr>
<td>
10
</td>
<td colspan="2" rowspan="2" data-sort-value style="background: #ececec; color: #2C2C2C; vertical-align: middle; font-size: smaller; text-align: center;" class="table-na">
N/A
</td>
<td>
DPWR
</td>
<td style="text-align: left;">
Power provided to device (Powered-B only)
</td>
</tr>
<tr>
<td>
11
</td>
<td>
DGND
</td>
<td style="text-align: left;">
Ground for DPWR return (Powered-B only)
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
A Power Supply Unit (PSU) converts mains AC to low-voltage regulated DC power for the internal components of a computer.
</p>
</div>
</div>
</div>
<h2 id="color-codes-of-atx">Color Codes of ATX</h2>
<table>
<thead>
<tr class="header">
<th>Color</th>
<th>Voltage</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Yellow</td>
<td>+12.0V</td>
</tr>
<tr class="even">
<td>Red</td>
<td>+5.0V</td>
</tr>
<tr class="odd">
<td>Orange</td>
<td>+3.3V</td>
</tr>
<tr class="even">
<td>Black</td>
<td>Ground</td>
</tr>
<tr class="odd">
<td>White</td>
<td>-5.0V</td>
</tr>
<tr class="even">
<td>Blue</td>
<td>-12.0V</td>
</tr>
</tbody>
</table>
<p>Additional: Green is Power-On which can be shorted to ground to start PSU.</p>
<h2 id="efficiency-rating-80-plus">Efficiency Rating (80 PLUS)</h2>
<p>80 PLUS is voluntary certification program intended to promote the efficiency of PSUs. It certifies the energy effiency at different load levels</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example3">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example3' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
An efficiency of 90% at 50% load means that a <abbr title="Power Supply Unit" >PSU</abbr> rated at 180W (maximum delivery), will draw 100W from the wall plug in order to deliver 90W to the target device.
<p>
</div>
</div>
</div>
<h3 id="non-redundant-psu">Non-Redundant PSU</h3>
<table>
<thead>
<tr class="header">
<th>Cartificate</th>
<th>20% load</th>
<th>50% load</th>
<th>100% load</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>80 PLUS</td>
<td>82 %</td>
<td>85 %</td>
<td>82 %</td>
</tr>
<tr class="even">
<td>Bronze</td>
<td>85 %</td>
<td>88 %</td>
<td>85 %</td>
</tr>
<tr class="odd">
<td>Silver</td>
<td>87 %</td>
<td>90 %</td>
<td>87 %</td>
</tr>
<tr class="even">
<td>Gold</td>
<td>90 %</td>
<td>92 %</td>
<td>89 %</td>
</tr>
<tr class="odd">
<td>Platinum</td>
<td>92 %</td>
<td>94 %</td>
<td>90 %</td>
</tr>
<tr class="even">
<td>Titanium</td>
<td>90 %</td>
<td>94 %</td>
<td>96 %</td>
</tr>
</tbody>
</table>
<h3 id="redundant-psus">Redundant PSUs</h3>
<table>
<thead>
<tr class="header">
<th>Cartificate</th>
<th>20% load</th>
<th>50% load</th>
<th>100% load</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Bronze</td>
<td>81 %</td>
<td>85 %</td>
<td>81 %</td>
</tr>
<tr class="even">
<td>Silver</td>
<td>85 %</td>
<td>89 %</td>
<td>85 %</td>
</tr>
<tr class="odd">
<td>Gold</td>
<td>88 %</td>
<td>92 %</td>
<td>88 %</td>
</tr>
<tr class="even">
<td>Platinum</td>
<td>90 %</td>
<td>94 %</td>
<td>91 %</td>
</tr>
<tr class="odd">
<td>Titanium</td>
<td>94 %</td>
<td>96 %</td>
<td>91 %</td>
</tr>
</tbody>
</table>
<h2 id="references">References</h2>
<p>https://plugloadsolutions.com</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<h2 id="dram">DRAM</h2>
<!--<p> Filename="dram_diagram.svg", path="/res/img/content-images/computer/dram_diagram.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 30em;" src="/res/img/content-images/computer/dram_diagram.svg" alt="DRAM working principle"/>
<figcaption class="figure-caption">
DRAM working principle
</figcaption>
</figure>
<h2 id="sram">SRAM</h2>
<!--<p> Filename="sram_diagram.svg", path="/res/img/content-images/computer/sram_diagram.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 15em;" src="/res/img/content-images/computer/sram_diagram.svg" alt="SRAM working principle"/>
<figcaption class="figure-caption">
<abbr title="Static Random Access Memory" >SRAM</abbr> working principle
</figcaption>
</figure>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Advanced Encryption Standard (AES), (original name Rijndael) is a specification for the encryption of electronic data established by the U.S. National Institute of Standards and Technology (NIST) in 2001.
</p>
</div>
</div>
</div>
<p>AES operates on block sizes of <span class="LaTeX">$32 \times 32$</span> bits.</p>
<table>
<thead>
<tr class="header">
<th>Key-length</th>
<th>Number of Rounds</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>128 bit</td>
<td>10</td>
</tr>
<tr class="even">
<td>192 bit</td>
<td>12</td>
</tr>
<tr class="odd">
<td>256 bit</td>
<td>14</td>
</tr>
</tbody>
</table>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#algorithm">Algorithm</a></li>
<li><a href="#modes-of-operation">Modes of Operation</a></li>
<li><a href="#test-vectors">Test Vectors</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="algorithm">Algorithm</h2>
<!--<p> Filename="aes-128.svg", path="/res/img/content-images/informatics/security/aes-128.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 25em;" src="/res/img/content-images/informatics/security/aes-128.svg" alt="AES 128 High Level Overview"/>
<figcaption class="figure-caption">
<abbr title="Advanced Encryption Standard" >AES</abbr> 128 High Level Overview
</figcaption>
</figure>
<ol type="1">
<li><p><strong>Key Expansion:</strong> Create individual 128bit round keys from the cipher key</p></li>
<li><p><strong>AddRoundKey:</strong> each byte of the block is combined with a block of the round key using bitwise xor.</p></li>
<li><strong>Rounds:</strong>
<ol type="1">
<li>SubBytes: substitutes every byte of the state with an S-box entry</li>
<li>ShiftRows: cyclically left shift every row</li>
<li>MixColumns: takes the four bytes of each column as input and outputs four new bytes, where each input byte affects all four output bytes. Each column is transformed by multiplication with a fixed <span class="LaTeX">$4 \times 4$</span> Matrix.</li>
<li>AddRoundKey: XOR of the 128bit round key and the 128bit block.</li>
</ol></li>
<li><strong>Final Round:</strong> (no MixColumns)
<ol type="1">
<li>SubBytes</li>
<li>ShiftRows</li>
<li>AddRoundKey</li>
</ol></li>
</ol>
<!--
### MixColumns
<div data-toggle='collapse' href='#eq_0'>
$$\vect{ b_{0,j} \ b_{1,j} \ b_{2,j} \ b_{3,j} } = \mat{2&3&1&1 \\ 1&2&3&1 \ 1&1&2&3 \ 3&1&1&2} \cdot \vect{ a_{0,j} \ a_{1,j} \ a_{2,j} \ a_{3,j} }$$
</div> 
<div id='eq_0' class='legend collapse'><div class='card border-info w-75 mx-auto'><div class='p-1 small'>
with the columns $j \in \{0,1,2,3\}$
-->
</div>
</div>
</div>
<h2 id="modes-of-operation">Modes of Operation</h2>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-0" role="tab">ECB</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-1" role="tab">CBC</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-2" role="tab">CFB</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-3" role="tab">OFB</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-4" role="tab">CTR</a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">
<div id="checkboxid-0" class="tab-pane active" role="tabpanel">
<p><strong>Electronic Codebook (ECB)</strong></p>
<p>The message is divided into blocks, and each block is encrypted separately.</p>
<!--<p> Filename="encmode_ecb.svg", path="/res/img/content-images/informatics/security/encmode_ecb.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/encmode_ecb.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
<!--<p> Filename="decmode_ecb.svg", path="/res/img/content-images/informatics/security/decmode_ecb.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/decmode_ecb.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
</div>
<div id="checkboxid-1" class="tab-pane" role="tabpanel">
<p><strong>Cipher Block Chaining (CBC)</strong></p>
<p>Each block of plaintext is XORed with the previous ciphertext block before being encrypted.</p>
<!--<p> Filename="encmode_cbc.svg", path="/res/img/content-images/informatics/security/encmode_cbc.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/encmode_cbc.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
<!--<p> Filename="decmode_cbc.svg", path="/res/img/content-images/informatics/security/decmode_cbc.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/decmode_cbc.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
</div>
<div id="checkboxid-2" class="tab-pane" role="tabpanel">
<p><strong>Cipher Feedback (CFB)</strong></p>
<p>A close relative of CBC. Transforms a block cipher into a self-synchronizing stream cipher.</p>
<!--<p> Filename="encmode_cfb.svg", path="/res/img/content-images/informatics/security/encmode_cfb.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/encmode_cfb.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
<!--<p> Filename="decmode_cfb.svg", path="/res/img/content-images/informatics/security/decmode_cfb.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/decmode_cfb.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
</div>
<div id="checkboxid-3" class="tab-pane" role="tabpanel">
<p><strong>Output Feedback (OFB)</strong></p>
<p>Transforms a block cipher into a synchronous stream cipher. It generates keystream blocks, which are then XORed with the plaintext blocks to get the ciphertext.</p>
<!--<p> Filename="encmode_ofb.svg", path="/res/img/content-images/informatics/security/encmode_ofb.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/encmode_ofb.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
<!--<p> Filename="decmode_ofb.svg", path="/res/img/content-images/informatics/security/decmode_ofb.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/decmode_ofb.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
</div>
<div id="checkboxid-4" class="tab-pane" role="tabpanel">
<p><strong>Counter (CTR)</strong></p>
<p>Counter mode turns a block cipher into a stream cipher. It generates the next keystream block by encrypting successive values of a &quot;counter&quot;.</p>
<!--<p> Filename="encmode_ctr.svg", path="/res/img/content-images/informatics/security/encmode_ctr.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/encmode_ctr.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
<!--<p> Filename="decmode_ctr.svg", path="/res/img/content-images/informatics/security/decmode_ctr.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 40em;" src="/res/img/content-images/informatics/security/decmode_ctr.svg" alt=""/>
<figcaption class="figure-caption">
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p></br></p>
<h2 id="test-vectors">Test Vectors</h2>
<pre><code>mode = ECB-AES128.Encrypt 
in   = 6bc1bee22e409f96e93d7e117393172a
key  = 2b7e151628aed2a6abf7158809cf4f3c
out  = 3ad77bb40d7a3660a89ecaf32466ef97 

mode = CBC-AES128.Encrypt 
in   = 6bc1bee22e409f96e93d7e117393172a
key  = 2b7e151628aed2a6abf7158809cf4f3c
iv   = 000102030405060708090a0b0c0d0e0f
out  = 7649abac8119b246cee98e9b12e9197d</code></pre>
<h2 id="references">References</h2>
<ul>
<li><p><a href="https://csrc.nist.gov/csrc/media/publications/fips/197/final/documents/fips-197.pdf">NIST FIPS 197: Advanced Encryption Standard</a></p></li>
<li><p><a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38a.pdf">NIST Special Publication 800-38A: <abbr title="Advanced Encryption Standard" >AES</abbr> Test Vectors</a></p></li>
<li><p><a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation">Wikipedia: Block Cipher Modes</a></p></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Rivest, Shamir and Adleman" >RSA</abbr> is a public-key cryptosystems and is used for secure data transmission.
</p>
</div>
</div>
</div>
<p>The <abbr title="Rivest, Shamir and Adleman" >RSA</abbr> algorithm involves four steps: key generation, key distribution, encryption, and decryption.</p>
<p>Key sizes: 1024 b, 2048 b, 4096 b</p>
<h2 id="principle">Principle</h2>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$${\displaystyle (m^{e})^{d}\equiv m{\pmod {n}}}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with the message <span class="LaTeX">$m$</span>, private key <span class="LaTeX">$d$</span>, public key <span class="LaTeX">$e$</span>.</p>
</div>
</div>
</div>
<h3 id="key-generation">Key generation</h3>
<ol type="1">
<li>Choose two distinct prime numbers <span class="LaTeX">$p$</span> and <span class="LaTeX">$q$</span> with <span class="LaTeX">$n = pq$</span>.</li>
<li>choose random private key <span class="LaTeX">$d$</span> with <span class="LaTeX">$1 \lt d \lt n-1$</span></li>
<li>find public key <span class="LaTeX">$e$</span> with <span class="LaTeX">$de \equiv 1 (\mod (p-1)(q-1))$</span></li>
</ol>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example7">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example7' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<p>Here is an example of <abbr title="Rivest, Shamir and Adleman" >RSA</abbr> encryption and decryption. The parameters used here are artificially small.</p>
<p><strong>Generate Keypair</strong> <span class="LaTeX">$(d, e)$</span></p>
<ol type="1">
<li>Choose two distinct prime numbers, such as</br> <span class="LaTeX">$p=61$</span> and <span class="LaTeX">$q=53$</span></li>
<li>Compute <span class="LaTeX">$n = pq$</span> giving</br> <span class="LaTeX">$n=61\times 53=3233$</span></li>
<li>Compute the Carmichael's totient function of the product as <span class="LaTeX">$\lambda(n) = lcm(p -1, q - 1)$</span> giving</br> <span class="LaTeX">$\lambda (3233)={\mathop{lcm}} (60,52)=780$</span></li>
<li>Choose any number <span class="LaTeX">$1 \lt e \lt 780$</span> that is coprime to <span class="LaTeX">$780$</span>. Choosing a prime number for <span class="LaTeX">$e$</span> leaves us only to check that <span class="LaTeX">$e$</span> is not a divisor of 780.</br> Let <span class="LaTeX">$e=17$</span></li>
<li>Compute d, the modular multiplicative inverse of <span class="LaTeX">$e \mod \lambda(n)$</span> yielding, <span class="LaTeX">$d=413$</span></br> <span class="LaTeX">$d\times e=1{\mod {\lambda }}(n)$</span></br> <span class="LaTeX">$413\times 17=1{\mod {7}}80$</span></li>
</ol>
<p>The public key is <span class="LaTeX">$(n = 3233, e = 17)$</span>. Encryption function is <span class="LaTeX">$c(m)=m^{17}{\mod {3}}233$</span>.</p>
<p>The private key is <span class="LaTeX">$(n = 3233, d = 413)$</span>. Decryption function is <span class="LaTeX">$m(c)=c^{413}{\mod {3}}233$</span>.</p>
<p><strong>Encrypt message <span class="LaTeX">$m = 65$</span>:</strong></br> <span class="LaTeX">$c=65^{17}{\mod {3}}233=2790$</span></p>
<strong>Decrypt cipher <span class="LaTeX">$c = 2790$</span>:</strong></br> <span class="LaTeX">$m=2790^{413}{\mod {3}}233=65$</span>
<p>
</div>
</div>
</div>
<h2 id="attack-model">Attack Model</h2>
<ul>
<li><p>key-only attack: the attacker is only given the public verification key</p></li>
<li><p>known message attack: the attacker is given valid signatures for a variety of messages known by the attacker but not chosen by the attacker</p></li>
<li><p>adaptive chosen message attack: the attacker first learns signatures on arbitrary messages of the attacker's choice</p></li>
</ul>
<h2 id="homomorphic-multiplication">homomorphic multiplication</h2>
<p>RSA is multiplicatively homomorphic. That means you can exchange the order of operations without affecting the result. The product of the encryption of two messages is equal to the encryption of the product of the messages.</p>
<p><span class="LaTeX">$$E(x)E(y) \equiv x^ey^e \equiv (xy)^e \equiv E(xy) (\pmod n)$$</span></p>
<p>Thus, you can perform calculations on encrypted data, without knowing the data, which is used in zero-knowledge proofs.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem)">Wikipedia: RSA</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<h2 id="primitive-data-structures">Primitive Data Structures</h2>
<table>
<thead>
<tr class="header">
<th>Type</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Boolean</td>
<td>A binary logic values (true/false)</td>
<td>true</td>
</tr>
<tr class="even">
<td>Integer</td>
<td>A number without a fractional component</td>
<td>42</td>
</tr>
<tr class="odd">
<td>Float</td>
<td>A rational number</td>
<td>13.452</td>
</tr>
<tr class="even">
<td>Character</td>
<td>A single character</td>
<td>'a'</td>
</tr>
<tr class="odd">
<td>String</td>
<td>A sequence of characters</td>
<td>&quot;Hello&quot;</td>
</tr>
</tbody>
</table>
<p>Some languages include also complex numbers, sets, tuples.</p>
<h2 id="container-advanced-abstract-data-types">Container (Advanced abstract data types)</h2>
<p>A container is an abstrac data type which instances are collections of other objects. There are two types of containers:</p>
<ul>
<li>Single value containers: Each element is stored independently in the container and it is accessed directly or with an iterator.</li>
<li>Associative containers: The container is composed of (key,value) pairs, such that each key appears at most once in the container. The key is used to find the value (element), if it is stored in the container.</li>
</ul>
<h3 id="array">Array</h3>
<p>An array is a collection of equal sized elements. The elements are stored in sequence, thus given the size of one element it is possible to jump directly to a specific element.</p>
<h3 id="record-tuple-struct">Record = Tuple = Struct</h3>
<p>A record is a collection of fields, possibly of different data types, typically in fixed number and sequence.</p>
<h3 id="union">Union</h3>
<p>A union is a structure that may have any of several representations or formats within the same position in memory</p>
<h3 id="set">Set</h3>
<p>A set is an unordered collection with no duplicate elements.</p>
<h3 id="list-vector">List = Vector</h3>
<p>A list is a chain of elements. Each element has a pointer to the next element, thus it does not matter where elements are stored. Elements can be inserted and removed dynamically at each position in the list.</p>
<h3 id="stack">Stack</h3>
<p>A stack is a LIFO storage. Elements are added (push) and the latest added element is removed first (pop).</p>
<h3 id="queue">Queue</h3>
<p>A stack is a <abbr title="First In First Out" >FIFO</abbr> storage. Elements are added (push) and the oldest added element is removed first (po)</p>
<h3 id="hash-tables">Hash Tables</h3>
<p>A hash table can grow dynamically put performs better than a list. Elements are stored as key-value pair.</p>
<h3 id="associative-array-map-dictionary">Associative array = Map = Dictionary</h3>
<p>An associative array is an abstract data type composed of (key, value) pairs, such that each possible key appears at most once in the collection.</p>
<h3 id="tree">Tree</h3>
<p>A tree is a hierarchical data structure. It consists of nodes and each node can have one or more child nodes (recursion).</p>
<h3 id="graph">Graph</h3>
<p>A graph is an abstract data type that is meant to implement the undirected graph and directed graph concepts from mathematics.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<h2 id="primitive-data-structures">Primitive Data Structures</h2>
<table>
<thead>
<tr class="header">
<th>Type</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Boolean</td>
<td>A binary logic values (true/false)</td>
<td>true</td>
</tr>
<tr class="even">
<td>Integer</td>
<td>A number without a fractional component</td>
<td>42</td>
</tr>
<tr class="odd">
<td>Float</td>
<td>A rational number</td>
<td>13.452</td>
</tr>
<tr class="even">
<td>Character</td>
<td>A single character</td>
<td>'a'</td>
</tr>
<tr class="odd">
<td>String</td>
<td>A sequence of characters</td>
<td>&quot;Hello&quot;</td>
</tr>
</tbody>
</table>
<p>Some languages include also complex numbers, sets, tuples.</p>
<h2 id="container-advanced-abstract-data-types">Container (Advanced abstract data types)</h2>
<p>A container is an abstrac data type which instances are collections of other objects. There are two types of containers:</p>
<ul>
<li>Single value containers: Each element is stored independently in the container and it is accessed directly or with an iterator.</li>
<li>Associative containers: The container is composed of (key,value) pairs, such that each key appears at most once in the container. The key is used to find the value (element), if it is stored in the container.</li>
</ul>
<h3 id="array">Array</h3>
<p>An array is a collection of equal sized elements. The elements are stored in sequence, thus given the size of one element it is possible to jump directly to a specific element.</p>
<h3 id="record-tuple-struct">Record = Tuple = Struct</h3>
<p>A record is a collection of fields, possibly of different data types, typically in fixed number and sequence.</p>
<h3 id="union">Union</h3>
<p>A union is a structure that may have any of several representations or formats within the same position in memory</p>
<h3 id="set">Set</h3>
<p>A set is an unordered collection with no duplicate elements.</p>
<h3 id="list-vector">List = Vector</h3>
<p>A list is a chain of elements. Each element has a pointer to the next element, thus it does not matter where elements are stored. Elements can be inserted and removed dynamically at each position in the list.</p>
<h3 id="stack">Stack</h3>
<p>A stack is a <abbr title="Last In First Out" >LIFO</abbr> storage. Elements are added (push) and the latest added element is removed first (pop).</p>
<h3 id="queue">Queue</h3>
<p>A stack is a <abbr title="First In First Out" >FIFO</abbr> storage. Elements are added (push) and the oldest added element is removed first (po)</p>
<h3 id="hash-tables">Hash Tables</h3>
<p>A hash table can grow dynamically put performs better than a list. Elements are stored as key-value pair.</p>
<h3 id="associative-array-map-dictionary">Associative array = Map = Dictionary</h3>
<p>An associative array is an abstract data type composed of (key, value) pairs, such that each possible key appears at most once in the collection.</p>
<h3 id="tree">Tree</h3>
<p>A tree is a hierarchical data structure. It consists of nodes and each node can have one or more child nodes (recursion).</p>
<h3 id="graph">Graph</h3>
<p>A graph is an abstract data type that is meant to implement the undirected graph and directed graph concepts from mathematics.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Joint Photographic Experts Group developed the <abbr title="Joint Photographic Experts Group" >JPEG</abbr> standard ISO/IEC 10918-1 which is used to encode images.
</p>
</div>
</div>
</div>
<h2 id="encoding-process">Encoding Process</h2>
<ol type="1">
<li>colors are converted from RGB to <span class="LaTeX">$Y&#39;C_BC_R$</span>, where Y is the brigness and <span class="LaTeX">$C_B$</span> and <span class="LaTeX">$C_R$</span> are the chrominance components of red and blue.</li>
</ol>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl3">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl3' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
The color space conversion allows greater compression without a significant effect on perceptual image quality
<p>
</div>
</div>
</div>
<ol type="1">
<li>the resolution of the chroma data is reduced, usually by a factor of 2 or 3.</li>
</ol>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl4">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl4' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
Due to the densities of color- and brightness-sensitive receptors in the human eye, humans can see considerably more fine detail in the brightness of an image (the Y' component) than in the hue and color saturation of an image (the Cb and Cr components).
<p>
</div>
</div>
</div>
<ol type="1">
<li>The image is split into blocks of 8×8 pixels, and for each block, each of the Y, <span class="LaTeX">$C_B$</span>, and <span class="LaTeX">$C_R$</span> data undergoes the discrete cosine transform (DCT).</li>
</ol>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl5">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl5' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
If the data for a channel does not represent an integer number of blocks then the encoder repeats the edge pixels to complete the blocks with dummy data.
<p>
</div>
</div>
</div>
<ol type="1">
<li>The amplitudes of the frequency components are quantized.</li>
</ol>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl6">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl6' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
the magnitudes of the high-frequency components are stored with a lower accuracy than the low-frequency components. The quality setting of the encoder (for example 95 on a scale of 0–100 in the Independent <abbr title="Joint Photographic Experts Group" >JPEG</abbr> Group's library) affects to what extent the resolution of each frequency component is reduced.
<p>
</div>
</div>
</div>
<ol type="1">
<li>The resulting data for all 8×8 blocks is further compressed with a lossless algorithm, a variant of Huffman encoding.</li>
</ol>
<h2 id="decoding-process">Decoding Process</h2>
<p>Decoding to display the image consists of doing all the encoding steps in reverse.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
A Uniform Resource Identifier (URI) is a string of characters used to identify a resource.
</p>
</div>
</div>
</div>
<h2 id="syntax">Syntax</h2>
<pre><code>scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]</code></pre>
<ul>
<li>scheme: <code>http</code>, <code>ftp</code>, <code>file</code>, <code>coap</code>, etc.</li>
<li>query: a sequency of key-value pairs. E.g. <code>key1=value1&amp;key2=value2</code></li>
</ul>
<p><strong>Example</strong></p>
<pre><code>         user    host    port
         ┌┴─┐ ┌───┴───┐  ┌┴┐ 
 https://john@github.com:123/repo/master/?color=true&amp;mode=raw#L123
 └─┬─┘ └───────┬───────────┘└───┬───────┘└──────────┬───────┘└─┬─┘  
 scheme     authority          path               query      fragment</code></pre>
<h2 id="escape-characters">Escape Characters</h2>
<p>The characters <code>: / ? # [ ] @</code> are reserved for use as delimiters of the generic <abbr title="Uniform Resource Identifier" >URI</abbr> and must be percent-encoded (e.g. <code>%3F</code> for a <code>?</code>).</p>
<table>
<thead>
<tr class="header">
<th>Char</th>
<th>Escape</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>space</td>
<td><code>%20</code></td>
</tr>
<tr class="even">
<td><code>!</code></td>
<td><code>%21</code></td>
</tr>
<tr class="odd">
<td><code>#</code></td>
<td><code>%23</code></td>
</tr>
<tr class="even">
<td><code>$</code></td>
<td><code>%24</code></td>
</tr>
<tr class="odd">
<td><code>%</code></td>
<td><code>%25</code></td>
</tr>
<tr class="even">
<td><code>&amp;</code></td>
<td><code>%26</code></td>
</tr>
<tr class="odd">
<td><code>/</code></td>
<td><code>%2F</code></td>
</tr>
<tr class="even">
<td><code>:</code></td>
<td><code>%3A</code></td>
</tr>
<tr class="odd">
<td><code>?</code></td>
<td><code>%3F</code></td>
</tr>
<tr class="even">
<td><code>@</code></td>
<td><code>%40</code></td>
</tr>
<tr class="odd">
<td><code>[</code></td>
<td><code>%5B</code></td>
</tr>
<tr class="even">
<td><code>\</code></td>
<td><code>%5C</code></td>
</tr>
<tr class="odd">
<td><code>]</code></td>
<td><code>%5D</code></td>
</tr>
<tr class="even">
<td><code>ü</code></td>
<td><code>%C3%BC</code></td>
</tr>
</tbody>
</table>
<h2 id="relationship-to-urn-and-url">Relationship to URN and URL</h2>
<p>URN and URL are types of URIs. A Uniform Resource Name (URN) can be compared to a person's name, while a Uniform Resource Locator (URL) can be compared to their street address. In other words, a URN identifies an item and a URL provides a method for finding it.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
A Uniform Resource Identifier (URI) is a string of characters used to identify a resource.
</p>
</div>
</div>
</div>
<h2 id="syntax">Syntax</h2>
<pre><code>scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]</code></pre>
<ul>
<li>scheme: <code>http</code>, <code>ftp</code>, <code>file</code>, <code>coap</code>, etc.</li>
<li>query: a sequency of key-value pairs. E.g. <code>key1=value1&amp;key2=value2</code></li>
</ul>
<p><strong>Example</strong></p>
<pre><code>         user    host    port
         ┌┴─┐ ┌───┴───┐  ┌┴┐ 
 https://john@github.com:123/repo/master/?color=true&amp;mode=raw#L123
 └─┬─┘ └───────┬───────────┘└───┬───────┘└──────────┬───────┘└─┬─┘  
 scheme     authority          path               query      fragment</code></pre>
<h2 id="escape-characters">Escape Characters</h2>
<p>The characters <code>: / ? # [ ] @</code> are reserved for use as delimiters of the generic <abbr title="Uniform Resource Identifier" >URI</abbr> and must be percent-encoded (e.g. <code>%3F</code> for a <code>?</code>).</p>
<table>
<thead>
<tr class="header">
<th>Char</th>
<th>Escape</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>space</td>
<td><code>%20</code></td>
</tr>
<tr class="even">
<td><code>!</code></td>
<td><code>%21</code></td>
</tr>
<tr class="odd">
<td><code>#</code></td>
<td><code>%23</code></td>
</tr>
<tr class="even">
<td><code>$</code></td>
<td><code>%24</code></td>
</tr>
<tr class="odd">
<td><code>%</code></td>
<td><code>%25</code></td>
</tr>
<tr class="even">
<td><code>&amp;</code></td>
<td><code>%26</code></td>
</tr>
<tr class="odd">
<td><code>/</code></td>
<td><code>%2F</code></td>
</tr>
<tr class="even">
<td><code>:</code></td>
<td><code>%3A</code></td>
</tr>
<tr class="odd">
<td><code>?</code></td>
<td><code>%3F</code></td>
</tr>
<tr class="even">
<td><code>@</code></td>
<td><code>%40</code></td>
</tr>
<tr class="odd">
<td><code>[</code></td>
<td><code>%5B</code></td>
</tr>
<tr class="even">
<td><code>\</code></td>
<td><code>%5C</code></td>
</tr>
<tr class="odd">
<td><code>]</code></td>
<td><code>%5D</code></td>
</tr>
<tr class="even">
<td><code>ü</code></td>
<td><code>%C3%BC</code></td>
</tr>
</tbody>
</table>
<h2 id="relationship-to-urn-and-url">Relationship to URN and URL</h2>
<p>URN and <abbr title="Uniform Resource Locator" >URL</abbr> are types of URIs. A Uniform Resource Name (URN) can be compared to a person's name, while a Uniform Resource Locator (URL) can be compared to their street address. In other words, a URN identifies an item and a <abbr title="Uniform Resource Locator" >URL</abbr> provides a method for finding it.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The 6LoWPAN (IPv6 over Low-power Wireless Personal Area Networks) is an adaptation Layer that enables the use of IPv6 over low-power IEEE 802.15.4 radio links.
</p>
</div>
</div>
</div>
<p>The 6LoWPAN network is connected to the IPv6 network using an edge router.</p>
<!-- Fragmetns:
1280 byte IPv6 MTU → 127 byte 802.15.4 frames

Support for 64-bit/16-bit 802.15.4 addressing
 -->
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#header-compression">Header Compression</a></li>
<li><a href="#rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</a></li>
<li><a href="#rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</a></li>
<li><a href="#rpl">RPL</a></li>
<li><a href="#local-and-global-repair">Local and Global Repair</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="header-compression">Header Compression</h2>
<p>1 Byte Dispatch byte + variable</p>
<ul>
<li>Dispatch Byte:
<ul>
<li>2 bit:
<ul>
<li>00: not a 6LoWPAN frame</li>
<li>01: IPv6 addressing header</li>
<li>10: Mesh header</li>
</ul></li>
<li>6 bit: fixed 0b000010</li>
</ul></li>
</ul>
<h2 id="rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</h2>
<p>Possible to achieve 7 byte header for IPv6 + UDP.</p>
<h4 id="hc1-compression-byte">HC1 compression byte:</h4>
<pre><code>  0   1   2   3   4   5   6   7    
+---+---+---+---+---+---+---+---+ 
| IP-SA | IP-DA |TF |  NH   |HC2| 
+---+---+---+---+---+---+---+---+ </code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl7">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl7' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<dl>
<dt>IP-SA</dt>
<dd>IPv6 source address (bits 0 and 1): - 00: Prefix in-line, Interface identifier - 01: Prefix compressed (link-local prefix assumed). - 10: Interface identifier carried in-line - 11: Interface identifier elided
<p>
</div>
</div>
</div>
</dd>
</dl>
<ul>
<li>IPv6 destination address (bits 2 and 3):
<ul>
<li>00: Prefix carried in-line</li>
<li>01: Prefix compressed (link-local prefix assumed).</li>
<li>10: Interface identifier carried in-line</li>
<li>11: Interface identifier elided</li>
</ul></li>
<li>Traffic Class and Flow Label (bit 4):
<ul>
<li>0: not compressed; full 8 bits for TC and 20 bits for FL</li>
<li>1: Traffic Class and Flow Label are zero</li>
</ul></li>
<li>Next Header (bits 5 and 6):
<ul>
<li>00: not compressed; full 8 bits are sent</li>
<li>01: UDP</li>
<li>10: ICMP</li>
<li>11: TCP</li>
</ul></li>
<li>HC2 encoding(bit 7):
<ul>
<li>0: no more header compression bits</li>
<li>1: HC1 compression byte follows immediately</li>
</ul></li>
</ul>
<h4 id="hc2-compression-byte-for-udp">HC2 compression byte for UDP:</h4>
<pre><code>  0   1   2   3   4   5   6   7  
+---+---+---+---+---+---+---+---+
|SP |DP |LC | - | - | - | - | - |
+---+---+---+---+---+---+---+---+</code></pre>
<p>Explanation: * UDP source port (bit 0): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * UDP destination port (bit 1): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * Length (bit 2): - 0: Not compressed, carried &quot;in-line&quot; - 1: length computed from IPv6 header length * Reserved (bit 3 through 7)</p>
<h2 id="rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</h2>
<p>6LoWPAN frame: Dispatch (1 byte), IPHC (2-3 byte), payload</p>
<p>6LoWPAN structure:</p>
<pre><code>+-------------+-------------+-------------+-----------------+--------
| LOWPAN_IPHC | In-line     | LOWPAN_NHC  | In-line Next    | Payload
|   Encoding  |   <abbr title="Internet Protocol" >IP</abbr> Fields |   Encoding  |   Header Fields |
+-------------+-------------+-------------+-----------------+--------</code></pre>
<p>IPHC bytes:</p>
<pre><code>  0                                       1
  0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| 0 | 1 | 1 |  TF   |NH | HLIM  |CID|SAC|  SAM  | M |DAC|  DAM  |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</code></pre>
<p>NHC dispatch byte:</p>
<ul>
<li>Traffic Class and Flow Label (TF), 2 bit
<ul>
<li>00: Carried Inline (ECN+DSCP+Flow)</li>
<li>01: ECN+Flow</li>
<li>10: ECN+DSCP</li>
<li>11: Traffic Class and Flow Label are elided.</li>
</ul></li>
<li>Next Header compression (NH)
<ul>
<li>0: Carried Inline</li>
<li>1: next header is compressed using LOWPAN_NHC</li>
</ul></li>
<li>Hop Limit (HLIM)
<ul>
<li>00: Carried Inline,</li>
<li>01: 1,</li>
<li>10: 64</li>
<li>11: 255</li>
</ul></li>
<li>Context Identifier Extension (CID)
<ul>
<li>0: No 1-byte CID identifier</li>
<li>1: 1-byte identifier follows</li>
</ul></li>
<li>SAC/DAC (Source/Destination Address Compression)
<ul>
<li>0: Stateless</li>
<li>1: Context-based</li>
</ul></li>
<li>SAM/DAM (Source/Destination Address Mode)
<ul>
<li>00: 16 bytes inline</li>
<li>01: 8 bytes inline</li>
<li>10: 2 bytes inline</li>
<li>11: elided</li>
</ul></li>
<li>Multicast Destination (M)
<ul>
<li>0: Destination is not multicast</li>
<li>1: Destination is multicast</li>
</ul></li>
</ul>
<h3 id="routing">Routing</h3>
<p>6LoWPAN supports two routing methods on different layers.</p>
<ul>
<li>Route-over: on layer 3 with <abbr title="Internet Protocol" >IP</abbr> addresses (RPL protocol)</li>
<li>Mesh-under: on layer 2 with MAC addresses</li>
</ul>
<h2 id="rpl">RPL</h2>
<p>Routing Protocol for Low-Power and Lossy Networks (RPL) (pronounced &quot;ripple&quot;), is a protocol based on DODAG with expensive bits and dynamically formed topology.</p>
<h3 id="neighbor-discovery">Neighbor Discovery</h3>
<p>ND for 6LoWPAN has been specified in draft-ietf-6lowpan-nd (work in progress)</p>
<h3 id="dodag">DODAG</h3>
<p>An RPL Instance consists of multiple Destination Oriented Directed Acyclic Graphs (DODAGs). Traffic moves either up towards the DODAG root or down towards the DODAG leafs.</p>
<p>Rank: the node’s individual position relative to other nodes with respect to a DODAG root.</p>
<p>RPL Control Messages: DIO, DIS, DAO</p>
<p>DODAG construction: * Nodes periodically send link-local multicast DIO messages * Based on information in the DIOs the node chooses parents that minimize path cost to the DODAG root</p>
<p>Error Detection: * No route further down * Rank and direction do not match</p>
<h2 id="local-and-global-repair">Local and Global Repair</h2>
<h3 id="local-repair">local repair</h3>
<p>When a link or neighboring node failure is detected and the node has no other router in the ‘up’ direction,</p>
<h3 id="global-repair">Global repair</h3>
<p>Can be triggered only from the root and has a cost of additional control traffic in the network.</p>
<h2 id="references">References</h2>
<ul>
<li>https://tools.ietf.org/html/rfc4944</li>
<li>http://www.mdpi.com/2224-2708/2/2/235/htm</li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The 6LoWPAN (IPv6 over Low-power Wireless Personal Area Networks) is an adaptation Layer that enables the use of <abbr title="Internet Protocol version 6" >IPv6</abbr> over low-power IEEE 802.15.4 radio links.
</p>
</div>
</div>
</div>
<p>The 6LoWPAN network is connected to the <abbr title="Internet Protocol version 6" >IPv6</abbr> network using an edge router.</p>
<!-- Fragmetns:
1280 byte <abbr title="Internet Protocol version 6" >IPv6</abbr> MTU → 127 byte 802.15.4 frames

Support for 64-bit/16-bit 802.15.4 addressing
 -->
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#header-compression">Header Compression</a></li>
<li><a href="#rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</a></li>
<li><a href="#rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</a></li>
<li><a href="#rpl">RPL</a></li>
<li><a href="#local-and-global-repair">Local and Global Repair</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="header-compression">Header Compression</h2>
<p>1 Byte Dispatch byte + variable</p>
<ul>
<li>Dispatch Byte:
<ul>
<li>2 bit:
<ul>
<li>00: not a 6LoWPAN frame</li>
<li>01: <abbr title="Internet Protocol version 6" >IPv6</abbr> addressing header</li>
<li>10: Mesh header</li>
</ul></li>
<li>6 bit: fixed 0b000010</li>
</ul></li>
</ul>
<h2 id="rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</h2>
<p>Possible to achieve 7 byte header for <abbr title="Internet Protocol version 6" >IPv6</abbr> + UDP.</p>
<h4 id="hc1-compression-byte">HC1 compression byte:</h4>
<pre><code>  0   1   2   3   4   5   6   7    
+---+---+---+---+---+---+---+---+ 
| IP-SA | IP-DA |TF |  NH   |HC2| 
+---+---+---+---+---+---+---+---+ </code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl7">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl7' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<dl>
<dt>IP-SA</dt>
<dd>IPv6 source address (bits 0 and 1): - 00: Prefix in-line, Interface identifier - 01: Prefix compressed (link-local prefix assumed). - 10: Interface identifier carried in-line - 11: Interface identifier elided
<p>
</div>
</div>
</div>
</dd>
</dl>
<ul>
<li>IPv6 destination address (bits 2 and 3):
<ul>
<li>00: Prefix carried in-line</li>
<li>01: Prefix compressed (link-local prefix assumed).</li>
<li>10: Interface identifier carried in-line</li>
<li>11: Interface identifier elided</li>
</ul></li>
<li>Traffic Class and Flow Label (bit 4):
<ul>
<li>0: not compressed; full 8 bits for TC and 20 bits for FL</li>
<li>1: Traffic Class and Flow Label are zero</li>
</ul></li>
<li>Next Header (bits 5 and 6):
<ul>
<li>00: not compressed; full 8 bits are sent</li>
<li>01: UDP</li>
<li>10: ICMP</li>
<li>11: TCP</li>
</ul></li>
<li>HC2 encoding(bit 7):
<ul>
<li>0: no more header compression bits</li>
<li>1: HC1 compression byte follows immediately</li>
</ul></li>
</ul>
<h4 id="hc2-compression-byte-for-udp">HC2 compression byte for UDP:</h4>
<pre><code>  0   1   2   3   4   5   6   7  
+---+---+---+---+---+---+---+---+
|SP |DP |LC | - | - | - | - | - |
+---+---+---+---+---+---+---+---+</code></pre>
<p>Explanation: * UDP source port (bit 0): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * UDP destination port (bit 1): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * Length (bit 2): - 0: Not compressed, carried &quot;in-line&quot; - 1: length computed from <abbr title="Internet Protocol version 6" >IPv6</abbr> header length * Reserved (bit 3 through 7)</p>
<h2 id="rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</h2>
<p>6LoWPAN frame: Dispatch (1 byte), IPHC (2-3 byte), payload</p>
<p>6LoWPAN structure:</p>
<pre><code>+-------------+-------------+-------------+-----------------+--------
| LOWPAN_IPHC | In-line     | LOWPAN_NHC  | In-line Next    | Payload
|   Encoding  |   <abbr title="Internet Protocol" >IP</abbr> Fields |   Encoding  |   Header Fields |
+-------------+-------------+-------------+-----------------+--------</code></pre>
<p>IPHC bytes:</p>
<pre><code>  0                                       1
  0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| 0 | 1 | 1 |  TF   |NH | HLIM  |CID|SAC|  SAM  | M |DAC|  DAM  |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</code></pre>
<p>NHC dispatch byte:</p>
<ul>
<li>Traffic Class and Flow Label (TF), 2 bit
<ul>
<li>00: Carried Inline (ECN+DSCP+Flow)</li>
<li>01: ECN+Flow</li>
<li>10: ECN+DSCP</li>
<li>11: Traffic Class and Flow Label are elided.</li>
</ul></li>
<li>Next Header compression (NH)
<ul>
<li>0: Carried Inline</li>
<li>1: next header is compressed using LOWPAN_NHC</li>
</ul></li>
<li>Hop Limit (HLIM)
<ul>
<li>00: Carried Inline,</li>
<li>01: 1,</li>
<li>10: 64</li>
<li>11: 255</li>
</ul></li>
<li>Context Identifier Extension (CID)
<ul>
<li>0: No 1-byte CID identifier</li>
<li>1: 1-byte identifier follows</li>
</ul></li>
<li>SAC/DAC (Source/Destination Address Compression)
<ul>
<li>0: Stateless</li>
<li>1: Context-based</li>
</ul></li>
<li>SAM/DAM (Source/Destination Address Mode)
<ul>
<li>00: 16 bytes inline</li>
<li>01: 8 bytes inline</li>
<li>10: 2 bytes inline</li>
<li>11: elided</li>
</ul></li>
<li>Multicast Destination (M)
<ul>
<li>0: Destination is not multicast</li>
<li>1: Destination is multicast</li>
</ul></li>
</ul>
<h3 id="routing">Routing</h3>
<p>6LoWPAN supports two routing methods on different layers.</p>
<ul>
<li>Route-over: on layer 3 with <abbr title="Internet Protocol" >IP</abbr> addresses (RPL protocol)</li>
<li>Mesh-under: on layer 2 with MAC addresses</li>
</ul>
<h2 id="rpl">RPL</h2>
<p>Routing Protocol for Low-Power and Lossy Networks (RPL) (pronounced &quot;ripple&quot;), is a protocol based on DODAG with expensive bits and dynamically formed topology.</p>
<h3 id="neighbor-discovery">Neighbor Discovery</h3>
<p>ND for 6LoWPAN has been specified in draft-ietf-6lowpan-nd (work in progress)</p>
<h3 id="dodag">DODAG</h3>
<p>An RPL Instance consists of multiple Destination Oriented Directed Acyclic Graphs (DODAGs). Traffic moves either up towards the DODAG root or down towards the DODAG leafs.</p>
<p>Rank: the node’s individual position relative to other nodes with respect to a DODAG root.</p>
<p>RPL Control Messages: DIO, DIS, DAO</p>
<p>DODAG construction: * Nodes periodically send link-local multicast DIO messages * Based on information in the DIOs the node chooses parents that minimize path cost to the DODAG root</p>
<p>Error Detection: * No route further down * Rank and direction do not match</p>
<h2 id="local-and-global-repair">Local and Global Repair</h2>
<h3 id="local-repair">local repair</h3>
<p>When a link or neighboring node failure is detected and the node has no other router in the ‘up’ direction,</p>
<h3 id="global-repair">Global repair</h3>
<p>Can be triggered only from the root and has a cost of additional control traffic in the network.</p>
<h2 id="references">References</h2>
<ul>
<li>https://tools.ietf.org/html/rfc4944</li>
<li>http://www.mdpi.com/2224-2708/2/2/235/htm</li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The 6LoWPAN (IPv6 over Low-power Wireless Personal Area Networks) is an adaptation Layer that enables the use of <abbr title="Internet Protocol version 6" >IPv6</abbr> over low-power IEEE 802.15.4 radio links.
</p>
</div>
</div>
</div>
<p>The 6LoWPAN network is connected to the <abbr title="Internet Protocol version 6" >IPv6</abbr> network using an edge router.</p>
<!-- Fragmetns:
1280 byte <abbr title="Internet Protocol version 6" >IPv6</abbr> MTU → 127 byte 802.15.4 frames

Support for 64-bit/16-bit 802.15.4 addressing
 -->
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#header-compression">Header Compression</a></li>
<li><a href="#rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</a></li>
<li><a href="#rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</a></li>
<li><a href="#rpl">RPL</a></li>
<li><a href="#local-and-global-repair">Local and Global Repair</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="header-compression">Header Compression</h2>
<p>1 Byte Dispatch byte + variable</p>
<ul>
<li>Dispatch Byte:
<ul>
<li>2 bit:
<ul>
<li>00: not a 6LoWPAN frame</li>
<li>01: <abbr title="Internet Protocol version 6" >IPv6</abbr> addressing header</li>
<li>10: Mesh header</li>
</ul></li>
<li>6 bit: fixed 0b000010</li>
</ul></li>
</ul>
<h2 id="rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</h2>
<p>Possible to achieve 7 byte header for <abbr title="Internet Protocol version 6" >IPv6</abbr> + UDP.</p>
<h4 id="hc1-compression-byte">HC1 compression byte:</h4>
<pre><code>  0   1   2   3   4   5   6   7    
+---+---+---+---+---+---+---+---+ 
| IP-SA | IP-DA |TF |  NH   |HC2| 
+---+---+---+---+---+---+---+---+ </code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl7">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl7' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<dl>
<dt>IP-SA</dt>
<dd>IPv6 source address (bits 0 and 1): - 00: Prefix in-line, Interface identifier - 01: Prefix compressed (link-local prefix assumed). - 10: Interface identifier carried in-line - 11: Interface identifier elided
<p>
</div>
</div>
</div>
</dd>
</dl>
<ul>
<li>IPv6 destination address (bits 2 and 3):
<ul>
<li>00: Prefix carried in-line</li>
<li>01: Prefix compressed (link-local prefix assumed).</li>
<li>10: Interface identifier carried in-line</li>
<li>11: Interface identifier elided</li>
</ul></li>
<li>Traffic Class and Flow Label (bit 4):
<ul>
<li>0: not compressed; full 8 bits for TC and 20 bits for FL</li>
<li>1: Traffic Class and Flow Label are zero</li>
</ul></li>
<li>Next Header (bits 5 and 6):
<ul>
<li>00: not compressed; full 8 bits are sent</li>
<li>01: UDP</li>
<li>10: ICMP</li>
<li>11: TCP</li>
</ul></li>
<li>HC2 encoding(bit 7):
<ul>
<li>0: no more header compression bits</li>
<li>1: HC1 compression byte follows immediately</li>
</ul></li>
</ul>
<h4 id="hc2-compression-byte-for-udp">HC2 compression byte for UDP:</h4>
<pre><code>  0   1   2   3   4   5   6   7  
+---+---+---+---+---+---+---+---+
|SP |DP |LC | - | - | - | - | - |
+---+---+---+---+---+---+---+---+</code></pre>
<p>Explanation: * UDP source port (bit 0): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * UDP destination port (bit 1): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * Length (bit 2): - 0: Not compressed, carried &quot;in-line&quot; - 1: length computed from <abbr title="Internet Protocol version 6" >IPv6</abbr> header length * Reserved (bit 3 through 7)</p>
<h2 id="rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</h2>
<p>6LoWPAN frame: Dispatch (1 byte), IPHC (2-3 byte), payload</p>
<p>6LoWPAN structure:</p>
<pre><code>+-------------+-------------+-------------+-----------------+--------
| LOWPAN_IPHC | In-line     | LOWPAN_NHC  | In-line Next    | Payload
|   Encoding  |   <abbr title="Internet Protocol" >IP</abbr> Fields |   Encoding  |   Header Fields |
+-------------+-------------+-------------+-----------------+--------</code></pre>
<p>IPHC bytes:</p>
<pre><code>  0                                       1
  0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| 0 | 1 | 1 |  TF   |NH | HLIM  |CID|SAC|  SAM  | M |DAC|  DAM  |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</code></pre>
<p>NHC dispatch byte:</p>
<ul>
<li>Traffic Class and Flow Label (TF), 2 bit
<ul>
<li>00: Carried Inline (ECN+DSCP+Flow)</li>
<li>01: ECN+Flow</li>
<li>10: ECN+DSCP</li>
<li>11: Traffic Class and Flow Label are elided.</li>
</ul></li>
<li>Next Header compression (NH)
<ul>
<li>0: Carried Inline</li>
<li>1: next header is compressed using LOWPAN_NHC</li>
</ul></li>
<li>Hop Limit (HLIM)
<ul>
<li>00: Carried Inline,</li>
<li>01: 1,</li>
<li>10: 64</li>
<li>11: 255</li>
</ul></li>
<li>Context Identifier Extension (CID)
<ul>
<li>0: No 1-byte CID identifier</li>
<li>1: 1-byte identifier follows</li>
</ul></li>
<li>SAC/DAC (Source/Destination Address Compression)
<ul>
<li>0: Stateless</li>
<li>1: Context-based</li>
</ul></li>
<li>SAM/DAM (Source/Destination Address Mode)
<ul>
<li>00: 16 bytes inline</li>
<li>01: 8 bytes inline</li>
<li>10: 2 bytes inline</li>
<li>11: elided</li>
</ul></li>
<li>Multicast Destination (M)
<ul>
<li>0: Destination is not multicast</li>
<li>1: Destination is multicast</li>
</ul></li>
</ul>
<h3 id="routing">Routing</h3>
<p>6LoWPAN supports two routing methods on different layers.</p>
<ul>
<li>Route-over: on layer 3 with <abbr title="Internet Protocol" >IP</abbr> addresses (RPL protocol)</li>
<li>Mesh-under: on layer 2 with <abbr title="Media Access Control" >MAC</abbr> addresses</li>
</ul>
<h2 id="rpl">RPL</h2>
<p>Routing Protocol for Low-Power and Lossy Networks (RPL) (pronounced &quot;ripple&quot;), is a protocol based on DODAG with expensive bits and dynamically formed topology.</p>
<h3 id="neighbor-discovery">Neighbor Discovery</h3>
<p>ND for 6LoWPAN has been specified in draft-ietf-6lowpan-nd (work in progress)</p>
<h3 id="dodag">DODAG</h3>
<p>An RPL Instance consists of multiple Destination Oriented Directed Acyclic Graphs (DODAGs). Traffic moves either up towards the DODAG root or down towards the DODAG leafs.</p>
<p>Rank: the node’s individual position relative to other nodes with respect to a DODAG root.</p>
<p>RPL Control Messages: DIO, DIS, DAO</p>
<p>DODAG construction: * Nodes periodically send link-local multicast DIO messages * Based on information in the DIOs the node chooses parents that minimize path cost to the DODAG root</p>
<p>Error Detection: * No route further down * Rank and direction do not match</p>
<h2 id="local-and-global-repair">Local and Global Repair</h2>
<h3 id="local-repair">local repair</h3>
<p>When a link or neighboring node failure is detected and the node has no other router in the ‘up’ direction,</p>
<h3 id="global-repair">Global repair</h3>
<p>Can be triggered only from the root and has a cost of additional control traffic in the network.</p>
<h2 id="references">References</h2>
<ul>
<li>https://tools.ietf.org/html/rfc4944</li>
<li>http://www.mdpi.com/2224-2708/2/2/235/htm</li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The 6LoWPAN (IPv6 over Low-power Wireless Personal Area Networks) is an adaptation Layer that enables the use of <abbr title="Internet Protocol version 6" >IPv6</abbr> over low-power IEEE 802.15.4 radio links.
</p>
</div>
</div>
</div>
<p>The 6LoWPAN network is connected to the <abbr title="Internet Protocol version 6" >IPv6</abbr> network using an edge router.</p>
<!-- Fragmetns:
1280 byte <abbr title="Internet Protocol version 6" >IPv6</abbr> <abbr title="Maximum Transmission Unit" >MTU</abbr> → 127 byte 802.15.4 frames

Support for 64-bit/16-bit 802.15.4 addressing
 -->
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#header-compression">Header Compression</a></li>
<li><a href="#rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</a></li>
<li><a href="#rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</a></li>
<li><a href="#rpl">RPL</a></li>
<li><a href="#local-and-global-repair">Local and Global Repair</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="header-compression">Header Compression</h2>
<p>1 Byte Dispatch byte + variable</p>
<ul>
<li>Dispatch Byte:
<ul>
<li>2 bit:
<ul>
<li>00: not a 6LoWPAN frame</li>
<li>01: <abbr title="Internet Protocol version 6" >IPv6</abbr> addressing header</li>
<li>10: Mesh header</li>
</ul></li>
<li>6 bit: fixed 0b000010</li>
</ul></li>
</ul>
<h2 id="rfc-4944-hc1-and-hc2-compression">RFC 4944: HC1 and HC2 compression</h2>
<p>Possible to achieve 7 byte header for <abbr title="Internet Protocol version 6" >IPv6</abbr> + UDP.</p>
<h4 id="hc1-compression-byte">HC1 compression byte:</h4>
<pre><code>  0   1   2   3   4   5   6   7    
+---+---+---+---+---+---+---+---+ 
| IP-SA | IP-DA |TF |  NH   |HC2| 
+---+---+---+---+---+---+---+---+ </code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl7">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl7' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<dl>
<dt>IP-SA</dt>
<dd>IPv6 source address (bits 0 and 1): - 00: Prefix in-line, Interface identifier - 01: Prefix compressed (link-local prefix assumed). - 10: Interface identifier carried in-line - 11: Interface identifier elided
<p>
</div>
</div>
</div>
</dd>
</dl>
<ul>
<li>IPv6 destination address (bits 2 and 3):
<ul>
<li>00: Prefix carried in-line</li>
<li>01: Prefix compressed (link-local prefix assumed).</li>
<li>10: Interface identifier carried in-line</li>
<li>11: Interface identifier elided</li>
</ul></li>
<li>Traffic Class and Flow Label (bit 4):
<ul>
<li>0: not compressed; full 8 bits for TC and 20 bits for FL</li>
<li>1: Traffic Class and Flow Label are zero</li>
</ul></li>
<li>Next Header (bits 5 and 6):
<ul>
<li>00: not compressed; full 8 bits are sent</li>
<li>01: UDP</li>
<li>10: ICMP</li>
<li>11: TCP</li>
</ul></li>
<li>HC2 encoding(bit 7):
<ul>
<li>0: no more header compression bits</li>
<li>1: HC1 compression byte follows immediately</li>
</ul></li>
</ul>
<h4 id="hc2-compression-byte-for-udp">HC2 compression byte for UDP:</h4>
<pre><code>  0   1   2   3   4   5   6   7  
+---+---+---+---+---+---+---+---+
|SP |DP |LC | - | - | - | - | - |
+---+---+---+---+---+---+---+---+</code></pre>
<p>Explanation: * UDP source port (bit 0): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * UDP destination port (bit 1): - 0: Not compressed, carried &quot;in-line&quot; - 1: Compressed to 4 bits. * Length (bit 2): - 0: Not compressed, carried &quot;in-line&quot; - 1: length computed from <abbr title="Internet Protocol version 6" >IPv6</abbr> header length * Reserved (bit 3 through 7)</p>
<h2 id="rfc-6282-iphc-and-nhc-compression">RFC 6282: IPHC and NHC compression</h2>
<p>6LoWPAN frame: Dispatch (1 byte), IPHC (2-3 byte), payload</p>
<p>6LoWPAN structure:</p>
<pre><code>+-------------+-------------+-------------+-----------------+--------
| LOWPAN_IPHC | In-line     | LOWPAN_NHC  | In-line Next    | Payload
|   Encoding  |   <abbr title="Internet Protocol" >IP</abbr> Fields |   Encoding  |   Header Fields |
+-------------+-------------+-------------+-----------------+--------</code></pre>
<p>IPHC bytes:</p>
<pre><code>  0                                       1
  0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| 0 | 1 | 1 |  TF   |NH | HLIM  |CID|SAC|  SAM  | M |DAC|  DAM  |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</code></pre>
<p>NHC dispatch byte:</p>
<ul>
<li>Traffic Class and Flow Label (TF), 2 bit
<ul>
<li>00: Carried Inline (ECN+DSCP+Flow)</li>
<li>01: ECN+Flow</li>
<li>10: ECN+DSCP</li>
<li>11: Traffic Class and Flow Label are elided.</li>
</ul></li>
<li>Next Header compression (NH)
<ul>
<li>0: Carried Inline</li>
<li>1: next header is compressed using LOWPAN_NHC</li>
</ul></li>
<li>Hop Limit (HLIM)
<ul>
<li>00: Carried Inline,</li>
<li>01: 1,</li>
<li>10: 64</li>
<li>11: 255</li>
</ul></li>
<li>Context Identifier Extension (CID)
<ul>
<li>0: No 1-byte CID identifier</li>
<li>1: 1-byte identifier follows</li>
</ul></li>
<li>SAC/DAC (Source/Destination Address Compression)
<ul>
<li>0: Stateless</li>
<li>1: Context-based</li>
</ul></li>
<li>SAM/DAM (Source/Destination Address Mode)
<ul>
<li>00: 16 bytes inline</li>
<li>01: 8 bytes inline</li>
<li>10: 2 bytes inline</li>
<li>11: elided</li>
</ul></li>
<li>Multicast Destination (M)
<ul>
<li>0: Destination is not multicast</li>
<li>1: Destination is multicast</li>
</ul></li>
</ul>
<h3 id="routing">Routing</h3>
<p>6LoWPAN supports two routing methods on different layers.</p>
<ul>
<li>Route-over: on layer 3 with <abbr title="Internet Protocol" >IP</abbr> addresses (RPL protocol)</li>
<li>Mesh-under: on layer 2 with <abbr title="Media Access Control" >MAC</abbr> addresses</li>
</ul>
<h2 id="rpl">RPL</h2>
<p>Routing Protocol for Low-Power and Lossy Networks (RPL) (pronounced &quot;ripple&quot;), is a protocol based on DODAG with expensive bits and dynamically formed topology.</p>
<h3 id="neighbor-discovery">Neighbor Discovery</h3>
<p>ND for 6LoWPAN has been specified in draft-ietf-6lowpan-nd (work in progress)</p>
<h3 id="dodag">DODAG</h3>
<p>An RPL Instance consists of multiple Destination Oriented Directed Acyclic Graphs (DODAGs). Traffic moves either up towards the DODAG root or down towards the DODAG leafs.</p>
<p>Rank: the node’s individual position relative to other nodes with respect to a DODAG root.</p>
<p>RPL Control Messages: DIO, DIS, DAO</p>
<p>DODAG construction: * Nodes periodically send link-local multicast DIO messages * Based on information in the DIOs the node chooses parents that minimize path cost to the DODAG root</p>
<p>Error Detection: * No route further down * Rank and direction do not match</p>
<h2 id="local-and-global-repair">Local and Global Repair</h2>
<h3 id="local-repair">local repair</h3>
<p>When a link or neighboring node failure is detected and the node has no other router in the ‘up’ direction,</p>
<h3 id="global-repair">Global repair</h3>
<p>Can be triggered only from the root and has a cost of additional control traffic in the network.</p>
<h2 id="references">References</h2>
<ul>
<li>https://tools.ietf.org/html/rfc4944</li>
<li>http://www.mdpi.com/2224-2708/2/2/235/htm</li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
IEEE 802.15.4 is the standard for “Wireless Medium AccessControl (MAC) and Physical Layer (PHY) Specifications for Low-Rate Wireless Personal Area Networks (LR-WPANs)”
</p>
</div>
</div>
</div>
<h2 id="maximum-values">Maximum Values</h2>
<ul>
<li>Raw data rate: 250 kbps</li>
<li>Transmission Power: 1 mW</li>
<li>PHY payload: 127 bytes Reason: to ensure low packet and bit error rates in a lossy RF environment</li>
<li>Address: 16 bit or 64 bit</li>
</ul>
<h2 id="physical-layer-1-phy">Physical Layer 1 (PHY)</h2>
<h3 id="features">Features</h3>
<ul>
<li>Link quality indicator (LQI) for received packets</li>
<li>Channel frequency selection</li>
</ul>
<table>
<thead>
<tr class="header">
<th></th>
<th>868 MHz</th>
<th>2.4 GHz</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Modulation</td>
<td>BPSK</td>
<td>O-QPSK</td>
</tr>
<tr class="even">
<td>Bit Rate</td>
<td>20 kbps</td>
<td>250 kbps</td>
</tr>
<tr class="odd">
<td>Symbols</td>
<td>1 bit/smyb</td>
<td>4 bit/symb</td>
</tr>
<tr class="even">
<td>Chips/Symbol</td>
<td>15</td>
<td>32</td>
</tr>
</tbody>
</table>
<h3 id="phy-header-6-byte">PHY Header (6 byte)</h3>
<ul>
<li>Preamble: 4 byte all zero</li>
<li>Start-of-frame delimiter: 1 byte (0b11100101)</li>
<li>Length: 1 byte (bits 0-6, bit 7 reserved)</li>
</ul>
<h3 id="channels">Channels</h3>
<ul>
<li>3 channels available in 868MHz bands</li>
<li>30 channels available in the 915MHz bands</li>
<li>16 channels available in the 2.4GHz bands</li>
</ul>
<h2 id="medium-access-layer-2-mac">Medium Access Layer 2 (MAC)</h2>
<ul>
<li>4 types of <abbr title="Media Access Control" >MAC</abbr> frames: Data, Beacon, Ack, Command</li>
<li>typically 25 bytes <abbr title="Media Access Control" >MAC</abbr> header</li>
</ul>
<h3 id="beacon-enabled">Beacon Enabled</h3>
<ul>
<li>PAN Coordinator sends beacons. The beacon interval defines one superframe. Each superframe is divided into 16 time slots.</li>
</ul>
<p>Slots: * Contention Access Period: random, collisions possible * Contention Free Period: slots are asigned to individual devices</p>
<ul>
<li>Access Management:
<ul>
<li>Scheduled access (“I Tell You when to Talk”) with beacons</li>
<li>Random access (“You Decide when to Talk but prepare for Collisions”)</li>
</ul></li>
<li>CSMA/CA
<ol type="1">
<li>Carrier Sense: prior to transmitting, a node first listens to the shared medium to determine whether another node is transmitting or not.</li>
<li>Collision Avoidance: if another node was heard, we wait for a period of time (usually random) for the node to stop transmitting before listening again for a free communications channel.</li>
</ol></li>
</ul>
<h2 id="link-layer-security">Link layer security</h2>
<ul>
<li>AES-128</li>
</ul>
<h2 id="references">References</h2>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained networks in the Internet of Things. The protocol is designed for machine-to-machine (M2M) applications such as smart energy and building automation.
</p>
</div>
</div>
</div>
<p>Based on Representational State Transfer (REST).</p>
<h2 id="header-format">Header Format:</h2>
<pre><code> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Ver| T |  TKL  |      Code     |          Message ID           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Token (if any, TKL bytes) ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Options (if any) ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|1 1 1 1 1 1 1 1|    Payload (if any) ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
<ul>
<li>Ver: Version Number (currently 0b01)</li>
<li>T: Type (0: Confirmable, 1: Non-confirmable, 2: Acknowledgement, 3: Reset)</li>
<li>Code: Upper 3 MSBs: Class, 5 LSBs: Class details</li>
<li>Message ID: used to prevent duplicates, same for the ACK</li>
<li>Token: used to correlate request and response</li>
<li>Payload Marker:</li>
</ul>
<h3 id="options">Options</h3>
<pre><code>0 1 2 3 4 5 6 7</code></pre>
<p>+-+-+-+-+-+-+-+-+ | delta |length | 1 byte +---------------+  delta ext.   0-2 byte +---------------+  length ext.   0-2 byte +---------------+   value   0 or more bytes +---------------+</p>
<h2 id="features">Features</h2>
<ul>
<li>Embedded web transfer protocol (<code>coap://</code>)</li>
<li>UDP binding with reliability and multicast support</li>
<li>GET, POST, PUT, DELETE methods</li>
<li>URI support</li>
<li>4 byte header</li>
<li>Subset of MIME types and <abbr title="Hypertext Transfer Protocol" >HTTP</abbr> response codes</li>
</ul>
<p>REST request: <code>CON GET /light</code></p>
<ul>
<li>Problem: REST paradigm is often “PULL” type Solution: COAP observation Fragmentation at application layer to avoid fragmentation at IPv6 layer.</li>
</ul>
<h2 id="references">References</h2>
<p><a href="https://tools.ietf.org/html/rfc7252">RFC 7252</a></p>
<p><a href="http://coap.technology/spec.html">CoAP Specs</a></p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained networks in the Internet of Things. The protocol is designed for machine-to-machine (M2M) applications such as smart energy and building automation.
</p>
</div>
</div>
</div>
<p>Based on Representational State Transfer (REST).</p>
<h2 id="header-format">Header Format:</h2>
<pre><code> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Ver| T |  TKL  |      Code     |          Message ID           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Token (if any, TKL bytes) ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Options (if any) ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|1 1 1 1 1 1 1 1|    Payload (if any) ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
<ul>
<li>Ver: Version Number (currently 0b01)</li>
<li>T: Type (0: Confirmable, 1: Non-confirmable, 2: Acknowledgement, 3: Reset)</li>
<li>Code: Upper 3 MSBs: Class, 5 LSBs: Class details</li>
<li>Message ID: used to prevent duplicates, same for the ACK</li>
<li>Token: used to correlate request and response</li>
<li>Payload Marker:</li>
</ul>
<h3 id="options">Options</h3>
<pre><code>0 1 2 3 4 5 6 7</code></pre>
<p>+-+-+-+-+-+-+-+-+ | delta |length | 1 byte +---------------+  delta ext.   0-2 byte +---------------+  length ext.   0-2 byte +---------------+   value   0 or more bytes +---------------+</p>
<h2 id="features">Features</h2>
<ul>
<li>Embedded web transfer protocol (<code>coap://</code>)</li>
<li>UDP binding with reliability and multicast support</li>
<li>GET, POST, PUT, DELETE methods</li>
<li>URI support</li>
<li>4 byte header</li>
<li>Subset of MIME types and <abbr title="Hypertext Transfer Protocol" >HTTP</abbr> response codes</li>
</ul>
<p>REST request: <code>CON GET /light</code></p>
<ul>
<li>Problem: REST paradigm is often “PULL” type Solution: COAP observation Fragmentation at application layer to avoid fragmentation at <abbr title="Internet Protocol version 6" >IPv6</abbr> layer.</li>
</ul>
<h2 id="references">References</h2>
<p><a href="https://tools.ietf.org/html/rfc7252">RFC 7252</a></p>
<p><a href="http://coap.technology/spec.html">CoAP Specs</a></p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Domain Name System (DNS) is a hierarchical decentralized naming system for computers connected to the Internet <a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>. It allows to access servers by name instead of an IP address which is hard to remember.
</p>
</div>
</div>
</div>
<h2 id="public-dns">Public DNS</h2>
<p>Google DNS: <code>8.8.8.8</code> or <code>2001:4860:4860::8888</code></p>
<h2 id="resource-record-format">Resource Record Format</h2>
<p>All RRs have the same top level format shown below:</p>
<p><code>&lt;NAME&gt; &lt;TTL&gt; &lt;CLASS&gt; &lt;TYPE&gt; &lt;RDLENGTH&gt; &lt;RDATA&gt;</code></p>
<p>with</p>
<ul>
<li>NAME: the name of the node</li>
<li>TTL: a 32 bit signed integer that specifies the time interval that the resource record may be cached</li>
<li>CLASS: two octets containing one of the RR CLASS codes.</li>
<li>TYPE: two octets containing one of the RR TYPE codes.</li>
<li>RDLENGTH: an unsigned 16 bit integer that specifies the length in octets of the RDATA field.</li>
<li>RDATA: a variable length string of octets that describes the resource.</li>
</ul>
<h2 id="resource-record-types">Resource Record Types</h2>
<table>
<thead>
<tr class="header">
<th>DNS Type</th>
<th>Return Type</th>
<th>Application</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>A</code></td>
<td>IPv4 address</td>
<td>map domain to 1 static IP</td>
</tr>
<tr class="even">
<td><code>AAAA</code></td>
<td>IPv6 address</td>
<td>map domain to 1 static IP</td>
</tr>
<tr class="odd">
<td><code>ALIAS</code></td>
<td>Domain name</td>
<td>map domain to domain</td>
</tr>
<tr class="even">
<td><code>CNAME</code></td>
<td>Canonical name</td>
<td>map 1 domain to 1 domain</td>
</tr>
<tr class="odd">
<td><code>DNAME</code></td>
<td>Delegation name</td>
<td>map domain + subdomains to domain</td>
</tr>
<tr class="even">
<td><code>NS</code></td>
<td>Name server</td>
<td>delegate to other DNS</td>
</tr>
<tr class="odd">
<td><code>SSHFP</code></td>
<td>Public key</td>
<td>provide authentication</td>
</tr>
<tr class="even">
<td><code>MX</code></td>
<td>URL</td>
<td>Mail exchange server</td>
</tr>
<tr class="odd">
<td><code>URL</code></td>
<td>URL</td>
<td>redirect (HTTP 301) domain to URL</td>
</tr>
</tbody>
</table>
<h3 id="dname">DNAME</h3>
<p>The DNAME record provides redirection for a subtree of the domain name tree in the <abbr title="Domain Name System" >DNS</abbr> <a href="#fn2" class="footnoteRef" id="fnref2"><sup>2</sup></a>. Note that a <code>DNAME</code> entry that maps <code>mydomain.com</code> to <code>public.com</code> will also map <code>sub.mydomain.com</code> to <code>sub.public.com</code>.</p>
<h3 id="alias">ALIAS</h3>
<p>The <code>ALIAS</code> type is not part of the <abbr title="Domain Name System" >DNS</abbr> standard and should only be used to map an Apex domain to another domain because <code>CNAME</code> cannot be used for this task.</p>
<h2 id="rules-for-setting-up-a-dns-entry">Rules for setting up a <abbr title="Domain Name System" >DNS</abbr> entry</h2>
<ul>
<li>use an <code>A</code> and <code>AAAA</code> record if your destination is a server with one static and fixed IP address (this is the most common case)</li>
<li>use a <code>CNAME</code> record if you want to alias a name to another name, and you don’t need other records (such as <code>MX</code> records for emails) for the same name</li>
<li>use an <code>ALIAS</code> record if you are trying to alias the root domain or if you need other records for the same name</li>
</ul>
<h2 id="propagation-time">Propagation Time</h2>
<p>Changes propagate within the network in about 24 hours. TTL of records: 5 minutes to 24 hours.</p>
<h2 id="dns-softwre">DNS Softwre</h2>
<p>Linux: <code>dig DOMAIN</code>, <code>host DOMAIN</code>, <code>nslookup DOMAIN</code></p>
<h2 id="references">References</h2>
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p><a href="https://tools.ietf.org/html/rfc1035">RFC 1035</a>, <em>Domain Names - Implementation and Specification</em> , 1987<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="https://tools.ietf.org/html/rfc6672">RFC 6672</a>, <em>DNAME Redirection in the DNS</em>, 2012<a href="#fnref2">↩</a></p></li>
</ol>
</section>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Domain Name System (DNS) is a hierarchical decentralized naming system for computers connected to the Internet <a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>. It allows to access servers by name instead of an <abbr title="Internet Protocol" >IP</abbr> address which is hard to remember.
</p>
</div>
</div>
</div>
<h2 id="public-dns">Public DNS</h2>
<p>Google DNS: <code>8.8.8.8</code> or <code>2001:4860:4860::8888</code></p>
<h2 id="resource-record-format">Resource Record Format</h2>
<p>All RRs have the same top level format shown below:</p>
<p><code>&lt;NAME&gt; &lt;TTL&gt; &lt;CLASS&gt; &lt;TYPE&gt; &lt;RDLENGTH&gt; &lt;RDATA&gt;</code></p>
<p>with</p>
<ul>
<li>NAME: the name of the node</li>
<li>TTL: a 32 bit signed integer that specifies the time interval that the resource record may be cached</li>
<li>CLASS: two octets containing one of the RR CLASS codes.</li>
<li>TYPE: two octets containing one of the RR TYPE codes.</li>
<li>RDLENGTH: an unsigned 16 bit integer that specifies the length in octets of the RDATA field.</li>
<li>RDATA: a variable length string of octets that describes the resource.</li>
</ul>
<h2 id="resource-record-types">Resource Record Types</h2>
<table>
<thead>
<tr class="header">
<th>DNS Type</th>
<th>Return Type</th>
<th>Application</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>A</code></td>
<td>IPv4 address</td>
<td>map domain to 1 static IP</td>
</tr>
<tr class="even">
<td><code>AAAA</code></td>
<td>IPv6 address</td>
<td>map domain to 1 static IP</td>
</tr>
<tr class="odd">
<td><code>ALIAS</code></td>
<td>Domain name</td>
<td>map domain to domain</td>
</tr>
<tr class="even">
<td><code>CNAME</code></td>
<td>Canonical name</td>
<td>map 1 domain to 1 domain</td>
</tr>
<tr class="odd">
<td><code>DNAME</code></td>
<td>Delegation name</td>
<td>map domain + subdomains to domain</td>
</tr>
<tr class="even">
<td><code>NS</code></td>
<td>Name server</td>
<td>delegate to other DNS</td>
</tr>
<tr class="odd">
<td><code>SSHFP</code></td>
<td>Public key</td>
<td>provide authentication</td>
</tr>
<tr class="even">
<td><code>MX</code></td>
<td>URL</td>
<td>Mail exchange server</td>
</tr>
<tr class="odd">
<td><code>URL</code></td>
<td>URL</td>
<td>redirect (HTTP 301) domain to URL</td>
</tr>
</tbody>
</table>
<h3 id="dname">DNAME</h3>
<p>The DNAME record provides redirection for a subtree of the domain name tree in the <abbr title="Domain Name System" >DNS</abbr> <a href="#fn2" class="footnoteRef" id="fnref2"><sup>2</sup></a>. Note that a <code>DNAME</code> entry that maps <code>mydomain.com</code> to <code>public.com</code> will also map <code>sub.mydomain.com</code> to <code>sub.public.com</code>.</p>
<h3 id="alias">ALIAS</h3>
<p>The <code>ALIAS</code> type is not part of the <abbr title="Domain Name System" >DNS</abbr> standard and should only be used to map an Apex domain to another domain because <code>CNAME</code> cannot be used for this task.</p>
<h2 id="rules-for-setting-up-a-dns-entry">Rules for setting up a <abbr title="Domain Name System" >DNS</abbr> entry</h2>
<ul>
<li>use an <code>A</code> and <code>AAAA</code> record if your destination is a server with one static and fixed <abbr title="Internet Protocol" >IP</abbr> address (this is the most common case)</li>
<li>use a <code>CNAME</code> record if you want to alias a name to another name, and you don’t need other records (such as <code>MX</code> records for emails) for the same name</li>
<li>use an <code>ALIAS</code> record if you are trying to alias the root domain or if you need other records for the same name</li>
</ul>
<h2 id="propagation-time">Propagation Time</h2>
<p>Changes propagate within the network in about 24 hours. TTL of records: 5 minutes to 24 hours.</p>
<h2 id="dns-softwre">DNS Softwre</h2>
<p>Linux: <code>dig DOMAIN</code>, <code>host DOMAIN</code>, <code>nslookup DOMAIN</code></p>
<h2 id="references">References</h2>
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p><a href="https://tools.ietf.org/html/rfc1035">RFC 1035</a>, <em>Domain Names - Implementation and Specification</em> , 1987<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="https://tools.ietf.org/html/rfc6672">RFC 6672</a>, <em>DNAME Redirection in the DNS</em>, 2012<a href="#fnref2">↩</a></p></li>
</ol>
</section>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Domain Name System (DNS) is a hierarchical decentralized naming system for computers connected to the Internet <a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>. It allows to access servers by name instead of an <abbr title="Internet Protocol" >IP</abbr> address which is hard to remember.
</p>
</div>
</div>
</div>
<h2 id="public-dns">Public DNS</h2>
<p>Google DNS: <code>8.8.8.8</code> or <code>2001:4860:4860::8888</code></p>
<h2 id="resource-record-format">Resource Record Format</h2>
<p>All RRs have the same top level format shown below:</p>
<p><code>&lt;NAME&gt; &lt;TTL&gt; &lt;CLASS&gt; &lt;TYPE&gt; &lt;RDLENGTH&gt; &lt;RDATA&gt;</code></p>
<p>with</p>
<ul>
<li>NAME: the name of the node</li>
<li>TTL: a 32 bit signed integer that specifies the time interval that the resource record may be cached</li>
<li>CLASS: two octets containing one of the RR CLASS codes.</li>
<li>TYPE: two octets containing one of the RR TYPE codes.</li>
<li>RDLENGTH: an unsigned 16 bit integer that specifies the length in octets of the RDATA field.</li>
<li>RDATA: a variable length string of octets that describes the resource.</li>
</ul>
<h2 id="resource-record-types">Resource Record Types</h2>
<table>
<thead>
<tr class="header">
<th>DNS Type</th>
<th>Return Type</th>
<th>Application</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>A</code></td>
<td>IPv4 address</td>
<td>map domain to 1 static IP</td>
</tr>
<tr class="even">
<td><code>AAAA</code></td>
<td>IPv6 address</td>
<td>map domain to 1 static IP</td>
</tr>
<tr class="odd">
<td><code>ALIAS</code></td>
<td>Domain name</td>
<td>map domain to domain</td>
</tr>
<tr class="even">
<td><code>CNAME</code></td>
<td>Canonical name</td>
<td>map 1 domain to 1 domain</td>
</tr>
<tr class="odd">
<td><code>DNAME</code></td>
<td>Delegation name</td>
<td>map domain + subdomains to domain</td>
</tr>
<tr class="even">
<td><code>NS</code></td>
<td>Name server</td>
<td>delegate to other DNS</td>
</tr>
<tr class="odd">
<td><code>SSHFP</code></td>
<td>Public key</td>
<td>provide authentication</td>
</tr>
<tr class="even">
<td><code>MX</code></td>
<td>URL</td>
<td>Mail exchange server</td>
</tr>
<tr class="odd">
<td><code>URL</code></td>
<td>URL</td>
<td>redirect (HTTP 301) domain to URL</td>
</tr>
</tbody>
</table>
<h3 id="dname">DNAME</h3>
<p>The DNAME record provides redirection for a subtree of the domain name tree in the <abbr title="Domain Name System" >DNS</abbr> <a href="#fn2" class="footnoteRef" id="fnref2"><sup>2</sup></a>. Note that a <code>DNAME</code> entry that maps <code>mydomain.com</code> to <code>public.com</code> will also map <code>sub.mydomain.com</code> to <code>sub.public.com</code>.</p>
<h3 id="alias">ALIAS</h3>
<p>The <code>ALIAS</code> type is not part of the <abbr title="Domain Name System" >DNS</abbr> standard and should only be used to map an Apex domain to another domain because <code>CNAME</code> cannot be used for this task.</p>
<h2 id="rules-for-setting-up-a-dns-entry">Rules for setting up a <abbr title="Domain Name System" >DNS</abbr> entry</h2>
<ul>
<li>use an <code>A</code> and <code>AAAA</code> record if your destination is a server with one static and fixed <abbr title="Internet Protocol" >IP</abbr> address (this is the most common case)</li>
<li>use a <code>CNAME</code> record if you want to alias a name to another name, and you don’t need other records (such as <code>MX</code> records for emails) for the same name</li>
<li>use an <code>ALIAS</code> record if you are trying to alias the root domain or if you need other records for the same name</li>
</ul>
<h2 id="propagation-time">Propagation Time</h2>
<p>Changes propagate within the network in about 24 hours. <abbr title="Time To Live" >TTL</abbr> of records: 5 minutes to 24 hours.</p>
<h2 id="dns-softwre">DNS Softwre</h2>
<p>Linux: <code>dig DOMAIN</code>, <code>host DOMAIN</code>, <code>nslookup DOMAIN</code></p>
<h2 id="references">References</h2>
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p><a href="https://tools.ietf.org/html/rfc1035">RFC 1035</a>, <em>Domain Names - Implementation and Specification</em> , 1987<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="https://tools.ietf.org/html/rfc6672">RFC 6672</a>, <em>DNAME Redirection in the DNS</em>, 2012<a href="#fnref2">↩</a></p></li>
</ol>
</section>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Internet Protocol (IP) is the basic communication protocol in the Internet layer. <abbr title="Internet Protocol" >IP</abbr> has the task of delivering packets from the source host to the destination host solely based on the <abbr title="Internet Protocol" >IP</abbr> addresses in the packet headers.
</p>
</div>
</div>
</div>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#ip-address">IP-Address</a></li>
<li><a href="#header-format">Header Format</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="ip-address">IP-Address</h2>
<table>
<thead>
<tr class="header">
<th>Version</th>
<th>Length</th>
<th>Addresses</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>IPv4</td>
<td>32 b = 4 B</td>
<td>4.3e9</td>
<td>192.168.1.1</td>
</tr>
<tr class="even">
<td>IPv6</td>
<td>128 b = 16 B</td>
<td>3.4e38</td>
<td>2001:0db8:85a3:0042:0000:8a2e:0370:7334</td>
</tr>
</tbody>
</table>
<h3 id="address-notation">Address Notation</h3>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-0" role="tab">IPv6 </a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-1" role="tab">IPv4 </a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">

<div class="tab-pane active" id="checkboxid-0" role="tabpanel">
<p>16 byte written as 8 groups of 4 hexadecimal characters.</p>
<ul>
<li>leading zeros within a group may be omitted</li>
<li>consecutive groups of only zeros may be replace by <code>::</code>. This replacement is only allowed once within an address.</li>
</ul>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example13">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example13' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
Initial address: <code>2001:0db8:0000:0000:0000:ff00:0042:8329</code></br> Removing leading zeroes: <code>2001:db8:0:0:0:ff00:42:8329</code></br> Omitting consecutive groups of zeroes: <code>2001:db8::ff00:42:8329</code>
<p>
</div>
</div>
</div>
</div>
<div id="checkboxid-1" class="tab-pane" role="tabpanel">
<p>4 byte written as 4 groups of integers between 0 and 255.</p>
<p><code>192.168.0.0</code></p>
</div>
</div>
</div>
</div>
<p></br></p>
<h3 id="subnets">Subnets</h3>
<p>Subnets share a certain number of identical most-significant bits in their <abbr title="Internet Protocol" >IP</abbr> addresses (net prefix). The number <span class="LaTeX">$n$</span> of these bits is either noted as <code>/n</code> behind an <abbr title="Internet Protocol" >IP</abbr> address or as a subnet mask.</p>
<ul>
<li>Prefix: <code>x.x.x.x/24</code>: 24 bits for the network, 8 bits for the host</li>
<li>Subnetmask: <code>255.255.255.0</code>: 24 bits for the network, 8 bits for the host</li>
</ul>
<h3 id="special-address-ranges">Special Address Ranges</h3>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-2" role="tab">IPv6</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-3" role="tab">IPv4 </a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">
<div id="checkboxid-2" class="tab-pane active" role="tabpanel">
<ul>
<li><code>2000::/4</code> (global)</li>
<li><code>2002::/16</code> (global 6to4 tunnel)</li>
<li><code>fd00::/7</code>: Unique Local Addresses - ULA for LAN</li>
<li><code>fe80::/10</code>: Link Local Addresses. Created by interfaces for status communication</li>
</ul>
</div>
<div id="checkboxid-3" class="tab-pane" role="tabpanel">
<ul>
<li><code>0.0.0.0/8</code> (broadcast)</li>
<li><code>10.0.0.0/8</code> (private network)</li>
<li><code>100.64.0.0/10</code></li>
<li><code>127.0.0.0/8</code> (local net)</li>
<li><code>172.16.0.0/12</code> (private network)</li>
<li><code>192.168.0.0/16</code> (private network)</li>
<li><code>224.0.0.0</code> – <code>255.255.255.254</code> (future use)</li>
<li><code>255.255.255.255</code> (limited broadcast)</li>
</ul>
</div>
</div>
</div>
</div>
<p></br></p>
<h2 id="header-format">Header Format</h2>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-4" role="tab">IPv6 </a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-5" role="tab">IPv4 </a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">

<div class="tab-pane active" id="checkboxid-4" role="tabpanel">
<p>IPv6 header has a fixed size of 40 bytes.</p>
<pre><code> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version| Traffic Class |           Flow Label                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Payload Length        |  Next Header  |   Hop Limit   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                         Source Address                        +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                      Destination Address                      +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl8">
<i class='fa fa-comment-dots'></i> Explanation of the Header Fields
</h5>
<div id='expl8' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<dl>
<dt>Version</dt>
<dd>4-bit Internet Protocol version number = 6 (<code>0b1010</code>).
</dd>
<dt>Traffic Class</dt>
<dd>8-bit Traffic Class field.
</dd>
<dt>Flow Label</dt>
<dd>20-bit flow label.
</dd>
<dt>Payload Length</dt>
<dd>16-bit unsigned integer. Length of the IPv6 payload, i.e., the rest of the packet following this IPv6 header, in octets.
</dd>
<dt>Next Header</dt>
<dd>8-bit selector. Identifies the type of header immediately following the IPv6 header. Uses the same values as the IPv4 Protocol field.
</dd>
<dt>Hop Limit</dt>
<dd>8-bit unsigned integer. Decremented by 1 by each node that forwards the packet. When forwarding, the packet is discarded if Hop Limit was zero when received or is decremented to zero. A node that is the destination of a packet should not discard a packet with Hop Limit equal to zero; it should process the packet normally.
</dd>
<dt>Source Address</dt>
<dd>128-bit address of the originator of the packet.
</dd>
<dt>Destination Address</dt>
<dd>128-bit address of the intended recipient of the packet.
<p>
</div>
</div>
</div>
</dd>
</dl>
</div>
<div id="checkboxid-5" class="tab-pane" role="tabpanel">
<pre><code> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version|  IHL  |Type of Service|          Total Length         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Identification        |Flags|      Fragment Offset    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Time to Live |    Protocol   |         Header Checksum       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Source Address                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Destination Address                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Options                    |    Padding    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
</div>
</div>
</div>
</div>
<p></br></p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://tools.ietf.org/html/rfc791">IETF: RFC 791 - Internet Protocol</a></li>
<li><a href="https://tools.ietf.org/html/rfc2460">IETF: RFC 2460 - Internet Protocol, Version 6 (IPv6)</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Internet Protocol (IP) is the basic communication protocol in the Internet layer. <abbr title="Internet Protocol" >IP</abbr> has the task of delivering packets from the source host to the destination host solely based on the <abbr title="Internet Protocol" >IP</abbr> addresses in the packet headers.
</p>
</div>
</div>
</div>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#ip-address">IP-Address</a></li>
<li><a href="#header-format">Header Format</a></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="ip-address">IP-Address</h2>
<table>
<thead>
<tr class="header">
<th>Version</th>
<th>Length</th>
<th>Addresses</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>IPv4</td>
<td>32 b = 4 B</td>
<td>4.3e9</td>
<td>192.168.1.1</td>
</tr>
<tr class="even">
<td>IPv6</td>
<td>128 b = 16 B</td>
<td>3.4e38</td>
<td>2001:0db8:85a3:0042:0000:8a2e:0370:7334</td>
</tr>
</tbody>
</table>
<h3 id="address-notation">Address Notation</h3>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-0" role="tab">IPv6 </a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-1" role="tab">IPv4 </a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">

<div class="tab-pane active" id="checkboxid-0" role="tabpanel">
<p>16 byte written as 8 groups of 4 hexadecimal characters.</p>
<ul>
<li>leading zeros within a group may be omitted</li>
<li>consecutive groups of only zeros may be replace by <code>::</code>. This replacement is only allowed once within an address.</li>
</ul>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example13">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example13' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
Initial address: <code>2001:0db8:0000:0000:0000:ff00:0042:8329</code></br> Removing leading zeroes: <code>2001:db8:0:0:0:ff00:42:8329</code></br> Omitting consecutive groups of zeroes: <code>2001:db8::ff00:42:8329</code>
<p>
</div>
</div>
</div>
</div>
<div id="checkboxid-1" class="tab-pane" role="tabpanel">
<p>4 byte written as 4 groups of integers between 0 and 255.</p>
<p><code>192.168.0.0</code></p>
</div>
</div>
</div>
</div>
<p></br></p>
<h3 id="subnets">Subnets</h3>
<p>Subnets share a certain number of identical most-significant bits in their <abbr title="Internet Protocol" >IP</abbr> addresses (net prefix). The number <span class="LaTeX">$n$</span> of these bits is either noted as <code>/n</code> behind an <abbr title="Internet Protocol" >IP</abbr> address or as a subnet mask.</p>
<ul>
<li>Prefix: <code>x.x.x.x/24</code>: 24 bits for the network, 8 bits for the host</li>
<li>Subnetmask: <code>255.255.255.0</code>: 24 bits for the network, 8 bits for the host</li>
</ul>
<h3 id="special-address-ranges">Special Address Ranges</h3>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-2" role="tab">IPv6</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-3" role="tab">IPv4 </a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">
<div id="checkboxid-2" class="tab-pane active" role="tabpanel">
<ul>
<li><code>2000::/4</code> (global)</li>
<li><code>2002::/16</code> (global 6to4 tunnel)</li>
<li><code>fd00::/7</code>: Unique Local Addresses - ULA for LAN</li>
<li><code>fe80::/10</code>: Link Local Addresses. Created by interfaces for status communication</li>
</ul>
</div>
<div id="checkboxid-3" class="tab-pane" role="tabpanel">
<ul>
<li><code>0.0.0.0/8</code> (broadcast)</li>
<li><code>10.0.0.0/8</code> (private network)</li>
<li><code>100.64.0.0/10</code></li>
<li><code>127.0.0.0/8</code> (local net)</li>
<li><code>172.16.0.0/12</code> (private network)</li>
<li><code>192.168.0.0/16</code> (private network)</li>
<li><code>224.0.0.0</code> – <code>255.255.255.254</code> (future use)</li>
<li><code>255.255.255.255</code> (limited broadcast)</li>
</ul>
</div>
</div>
</div>
</div>
<p></br></p>
<h2 id="header-format">Header Format</h2>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-4" role="tab">IPv6 </a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-5" role="tab">IPv4 </a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">

<div class="tab-pane active" id="checkboxid-4" role="tabpanel">
<p>IPv6 header has a fixed size of 40 bytes.</p>
<pre><code> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version| Traffic Class |           Flow Label                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Payload Length        |  Next Header  |   Hop Limit   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                         Source Address                        +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                      Destination Address                      +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl8">
<i class='fa fa-comment-dots'></i> Explanation of the Header Fields
</h5>
<div id='expl8' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<dl>
<dt>Version</dt>
<dd>4-bit Internet Protocol version number = 6 (<code>0b1010</code>).
</dd>
<dt>Traffic Class</dt>
<dd>8-bit Traffic Class field.
</dd>
<dt>Flow Label</dt>
<dd>20-bit flow label.
</dd>
<dt>Payload Length</dt>
<dd>16-bit unsigned integer. Length of the <abbr title="Internet Protocol version 6" >IPv6</abbr> payload, i.e., the rest of the packet following this <abbr title="Internet Protocol version 6" >IPv6</abbr> header, in octets.
</dd>
<dt>Next Header</dt>
<dd>8-bit selector. Identifies the type of header immediately following the <abbr title="Internet Protocol version 6" >IPv6</abbr> header. Uses the same values as the IPv4 Protocol field.
</dd>
<dt>Hop Limit</dt>
<dd>8-bit unsigned integer. Decremented by 1 by each node that forwards the packet. When forwarding, the packet is discarded if Hop Limit was zero when received or is decremented to zero. A node that is the destination of a packet should not discard a packet with Hop Limit equal to zero; it should process the packet normally.
</dd>
<dt>Source Address</dt>
<dd>128-bit address of the originator of the packet.
</dd>
<dt>Destination Address</dt>
<dd>128-bit address of the intended recipient of the packet.
<p>
</div>
</div>
</div>
</dd>
</dl>
</div>
<div id="checkboxid-5" class="tab-pane" role="tabpanel">
<pre><code> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version|  IHL  |Type of Service|          Total Length         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Identification        |Flags|      Fragment Offset    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Time to Live |    Protocol   |         Header Checksum       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Source Address                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Destination Address                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Options                    |    Padding    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
</div>
</div>
</div>
</div>
<p></br></p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://tools.ietf.org/html/rfc791">IETF: RFC 791 - Internet Protocol</a></li>
<li><a href="https://tools.ietf.org/html/rfc2460">IETF: RFC 2460 - Internet Protocol, Version 6 (IPv6)</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
A MAC-Address is a 48-bit number, usually written as six groups of hexadecimal digits.
</p>
</div>
</div>
</div>
<p>Most <abbr title="Media Access Control" >MAC</abbr> addresses are burned into Ethernet controller chips.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The Routing Protocol for Low-Power and Lossy Networks (RPL, pronounced “ripple”), is an <abbr title="Internet Protocol version 6" >IPv6</abbr> Routing Protocol that provides point-to-point, multipoint-to-point and point-to-multipoint traffic.
</p>
</div>
</div>
</div>
<h2 id="dodag">DODAG</h2>
<p>RPL organizes the network topology as a Destination Oriented Directed Acyclic Graph (DODAG)<sup>[1]</sup>. The DODAG is a hierarchical construction based on the ranks of each node. The rank is a measure for a certain routing metric (e.g. link quality) to a selected root node.</p>
<h3 id="control-messages">Control Messages</h3>
<ul>
<li>DODAG Information Solicitation (DIS)</li>
<li>DODAG Information Object (DIO)</li>
<li>Destination Advertisement Object (DAO)</li>
<li>Destination Advertisement Object Acknowledgement (DAO-ACK)</li>
</ul>
<h2 id="mechanisms">Mechanisms</h2>
<h3 id="dodag-formation">DODAG Formation</h3>
<p>The root node periodically broadcasts DIO messages. All receiving nodes calculate their rank based on the received DIO messages. When the rank is known, a node sends a DAO message to its determined parent. A node that has selected a parant will also broadcast DIO messages including its own rank.</p>
<figure>
<object class="img-fluid" id="dodag" data="res/img/dynamic-images/rpl-ani.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="dodag-join">DODAG Join</h3>
<p>An isolated node that wants to join an existing DODAG broadcasts DIS messages. When a DODAG node receives a DIS message it will reply with a unicast DIO message.</p>
<h3 id="dodag-repair">DODAG Repair</h3>
<ul>
<li>Global Repair</li>
<li>Local Repair</li>
</ul>
<h2 id="references">References</h2>
<p>[1]: <a href="https://tools.ietf.org/html/rfc6550">RFC 6550: RPL</a></p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The User Datagram Protocol is an <abbr title="Open Systems Interconnection" >OSI</abbr> layer 4 transport protocol.
</p>
</div>
</div>
</div>
<h2 id="header-structure">Header Structure</h2>
<p>The header has a fixed size of 8 bytes. The maximum size of the payload is <span class="LaTeX">$2^{16} - 1$</span></p>
<pre><code>0      7 8     15 16    23 24      31
+--------+--------+--------+--------+
|     Source      |   Destination   |
|      Port       |      Port       |
+--------+--------+--------+--------+
|                 |                 |
|     Length      |    Checksum     |
+--------+--------+--------+--------+
|
|          data octets ...
+---------------- ...</code></pre>
<p>In contrast to TCP, UDP does not provide sequence numbers to detect the order of the packets.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://tools.ietf.org/html/rfc768">RFC 768</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<h2 id="stack">Stack</h2>
<ul>
<li>IEEE 802.15.4 defines PHY and <abbr title="Media Access Control" >MAC</abbr> layer
<ul>
<li>PHY header uses 6 bytes</li>
<li>4 types of <abbr title="Media Access Control" >MAC</abbr> frames: Data, Beacon, Ack, Command</li>
</ul></li>
<li>ZigBee build on top: NWK and a framework for the APP layer
<ul>
<li>Application Support Layer (APS)</li>
</ul></li>
</ul>
<h2 id="devices">Devices</h2>
<ul>
<li>PAN coordinator:
<ul>
<li>Exactly one (required) for each ZigBee network.</li>
<li>Initiates network formation.</li>
</ul></li>
<li>Full Function Device (FFD)
<ul>
<li>Participates in multihop routing of messages</li>
<li>Can act as PAN coordinator</li>
</ul></li>
<li>Reduced Function Device (RFD)
<ul>
<li>Cannot route frames, can only only communicate with FFDs</li>
</ul></li>
</ul>
<h2 id="topologies">Topologies</h2>
<ul>
<li>Mesh</li>
<li>Star</li>
<li>Cluster Tree</li>
</ul>
<h2 id="security">Security</h2>
<ul>
<li>AES 128-bit encryption, uses link and network keys</li>
<li>Trust Center: stores the keys for the network
<ul>
<li>network key is used for broadcast messages and shared by all devices</li>
<li>ZigBee Coordinator is usually designated the Trust Center</li>
</ul></li>
</ul>
<h2 id="joining">Joining</h2>
<ul>
<li>RFD joins: Coordinator or a router assign a unique 16 bit address</li>
<li>FFD joins: Coordinator assigns a unique 16 bit address</li>
</ul>
<h2 id="rounting">Rounting</h2>
<p>Two general approaches: * Source (“path”) routing - Source specifies entire route: places complete path to destination in message header: A – D – F – G * Destination (“hop-by-hop”) routing - Source specifies only destination address in the header</p>
<h2 id="ad-hoc-on-demand-distance-vector-aodv-routing">Ad-hoc On-demand Distance Vector (AODV) routing</h2>
<ol type="1">
<li>Source node A sends route request (RREQ) with target node E</li>
<li>RREQ messages are flooded by receiving nodes</li>
<li>When an intermediate node re-broadcasts a Route Request, it sets up a reverse path pointing towards the source</li>
<li>When RREQ reches target node, target node sends a route reply (RREP) back on the reverse path.</li>
</ol>
<p>Furthermore: An intermediate node (not the destination) may also send a Route Reply (RREP) provided that it knows a more recent path than the one previously known to sender S. To determine whether the path known to an intermediate node is more recent, destination sequence numbers are used.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<h2 id="stack">Stack</h2>
<ul>
<li>IEEE 802.15.4 defines PHY and <abbr title="Media Access Control" >MAC</abbr> layer
<ul>
<li>PHY header uses 6 bytes</li>
<li>4 types of <abbr title="Media Access Control" >MAC</abbr> frames: Data, Beacon, Ack, Command</li>
</ul></li>
<li>ZigBee build on top: NWK and a framework for the APP layer
<ul>
<li>Application Support Layer (APS)</li>
</ul></li>
</ul>
<h2 id="devices">Devices</h2>
<ul>
<li>PAN coordinator:
<ul>
<li>Exactly one (required) for each ZigBee network.</li>
<li>Initiates network formation.</li>
</ul></li>
<li>Full Function Device (FFD)
<ul>
<li>Participates in multihop routing of messages</li>
<li>Can act as <abbr title="Personal Area Network" >PAN</abbr> coordinator</li>
</ul></li>
<li>Reduced Function Device (RFD)
<ul>
<li>Cannot route frames, can only only communicate with FFDs</li>
</ul></li>
</ul>
<h2 id="topologies">Topologies</h2>
<ul>
<li>Mesh</li>
<li>Star</li>
<li>Cluster Tree</li>
</ul>
<h2 id="security">Security</h2>
<ul>
<li>AES 128-bit encryption, uses link and network keys</li>
<li>Trust Center: stores the keys for the network
<ul>
<li>network key is used for broadcast messages and shared by all devices</li>
<li>ZigBee Coordinator is usually designated the Trust Center</li>
</ul></li>
</ul>
<h2 id="joining">Joining</h2>
<ul>
<li>RFD joins: Coordinator or a router assign a unique 16 bit address</li>
<li>FFD joins: Coordinator assigns a unique 16 bit address</li>
</ul>
<h2 id="rounting">Rounting</h2>
<p>Two general approaches: * Source (“path”) routing - Source specifies entire route: places complete path to destination in message header: A – D – F – G * Destination (“hop-by-hop”) routing - Source specifies only destination address in the header</p>
<h2 id="ad-hoc-on-demand-distance-vector-aodv-routing">Ad-hoc On-demand Distance Vector (AODV) routing</h2>
<ol type="1">
<li>Source node A sends route request (RREQ) with target node E</li>
<li>RREQ messages are flooded by receiving nodes</li>
<li>When an intermediate node re-broadcasts a Route Request, it sets up a reverse path pointing towards the source</li>
<li>When RREQ reches target node, target node sends a route reply (RREP) back on the reverse path.</li>
</ol>
<p>Furthermore: An intermediate node (not the destination) may also send a Route Reply (RREP) provided that it knows a more recent path than the one previously known to sender S. To determine whether the path known to an intermediate node is more recent, destination sequence numbers are used.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
A file system manages the abstraction of grouped data blocks that belong to a single file.
</p>
</div>
</div>
</div>
<p>Common file systems</p>
<table>
<thead>
<tr class="header">
<th>Name</th>
<th>OS</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>FAT</td>
<td>all</td>
<td>simple</td>
</tr>
<tr class="even">
<td>NTFS</td>
<td>Windows</td>
<td>Journaling</td>
</tr>
<tr class="odd">
<td>Ext 2/3/4</td>
<td>Linux</td>
<td>Journaling</td>
</tr>
</tbody>
</table>
<h2 id="file-allocation-table-fat">File Allocation Table (FAT)</h2>
<p>The <abbr title="File Allocation Table" >FAT</abbr> is table that stores information about each Block. The information can be: * the block is defect * the block is free * pointer to the next block of a file * last block of a file</p>
<h2 id="index-nodes-i-nodes">Index Nodes (I-Nodes)</h2>
<p>Each file has an I-Node that stores: * Counter of references (links) to that file</p>
<!--<p> Filename="filesystem-inode.svg", path="/res/img/content-images/filesystem-inode.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: auto;" src="/res/img/content-images/filesystem-inode.svg" alt="I-Nodes"/>
<figcaption class="figure-caption">
I-Nodes
</figcaption>
</figure>
<h2 id="journaling">Journaling</h2>
<p>Journaling helps to avoid corruption of the file system. Before actually performing changes to the file system, the action is written to a Journal and then executed. If the operating system crashes during the execution of the action, the action can be repeated from the Journal (after reboot).</p>
<h2 id="fragmentation">Fragmentation</h2>
<p>Fragmentation means unusable memory because of inexact alignment of used memory blocks.</p>
<h3 id="internal-fragmentation">Internal Fragmentation</h3>
<p>Unused bytes within a memory block. Files reserve complete blocks of memory. Therefore, the last block is most likely only partly used.</p>
<h3 id="external-fragmentation">External Fragmentation</h3>
<p>Unused blocks between Files. Happens if files are resized and become smaller or if a sequence of free blocks is slightly larger than the size of a new file.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
Paging is used to map the virtual address space to the physical address space.
</p>
</div>
</div>
</div>
<div style="white-space: pre-line;">Address | Segmented in | Offset |
virtual <span class="LaTeX">$v = (s, wv)$</span> | <span class="LaTeX">$s$</span> pages | <span class="LaTeX">$wv$</span> bytes |
physical <span class="LaTeX">$p = (k, wp)$</span> | <span class="LaTeX">$k$</span> frames | <span class="LaTeX">$wp$</span> bytes |</div>
<p>with <span class="LaTeX">$wv = n \cdot wp, n \in {\mathop{\mathbb N}}$</span> (default <span class="LaTeX">$n=1$</span>)</p>
<h2 id="page-table">Page Table</h2>
<p>One entry per page. Entry:</p>
<div style="white-space: pre-line;">Frame number | physical frame |
P-Bit | is page present in frame |
R-Bit | is page referenced |
M-Bit | is page modified (dirty) |
X-Bit | is page data executable |</div>
<h2 id="page-fault">Page Fault</h2>
<p>Event that occurs when a program tries to reference a page not currently present in RAM.</p>
<h3 id="page-replacement-algorithm">Page Replacement Algorithm</h3>
<ul>
<li>First-In-First-Out (FIFO):</li>
<li>Second-chance: <abbr title="First In First Out" >FIFO</abbr> variant, where a page is only replaced if the R-Bit is not set.</li>
<li>Clock: <abbr title="First In First Out" >FIFO</abbr> variant, circular list of pages</li>
<li>Least recently used (LRU) Cons: expensive to implement</li>
<li>Least frequently used (LFU)</li>
</ul>
<h2 id="working-set-concept">Working Set Concept</h2>
<p>The working set of a process is the set of pages expected to be used by that process during some time interval. It can be used to determine pages for replacement that do not belong to the working set.</p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<h2 id="security-properties">Security Properties</h2>
<ul>
<li><strong>Confidentiality:</strong> data should not be revealed to unintended recipients.</li>
<li><strong>Authentication:</strong> data must originate from the correct source</li>
<li><strong>Inegrity:</strong> Data should not be changed during transmission.</li>
<li><strong>Freshness:</strong> Old data should not be used as new (replay attacks)</li>
<li><strong>Availability:</strong> data/services should be available despite <abbr title="Denial-of-Service" >DoS</abbr> attacks</li>
<li><strong>Robustness:</strong> ensure continuous operation despite abnormalities</li>
<li><strong>Resiliency:</strong> maintain security despite compromised nodes</li>
</ul>
<h2 id="types-of-attacks">Types of Attacks</h2>
<h3 id="denial-of-service-dos">Denial-of-Service (DOS)</h3>
<p>A DOS attack sends more requests to a node than it can process (flooding). Due to the unability of the node to process all requests it has to drop requests. If all requests are treated equal, normal request might be dropped.</p>
<h3 id="replay-attack">Replay Attack</h3>
<p>A replay attack targets the authentication of a system. A node listens to an encrypted communication. Even it can not understand the message, it can simply send the same message (replay) to the target node in the hope that it will trigger a certain event.</p>
<h3 id="sybil-attack">Sybil Attack</h3>
<p>A single attacker pretends to have several identities which subvert the election in a voting network and inject faulty information.</p>
<h2 id="crypto-primitives">Crypto Primitives</h2>
<ul>
<li>One-way hash: SHA-256, MD5, RIPEMD-160</li>
<li>Symmetric encryption: AES</li>
<li>Asymmetric encryption: RSA</li>
<li>Digital Signature Algorithm: FIPS, ECDSA</li>
</ul>
<h2 id="subfolders-and-articles"><i class="fa fa-list-ul"></i> Subfolders and Articles</h2>
<ul>
<li><a href="certificate.html">Certificate</a></li>
<li><a href="cryptography.html">Cryptography</a></li>
<li><a href="hash.html"><strong>Hash</strong></a>
<ul>
<li><a href="sha-2.html">Secure Hash Algorithm 2 (SHA-2)</a></li>
<li><a href="sha-3.html">Secure Hash Algorithm 3 (SHA-3)</a></li>
</ul></li>
<li><a href="multivariate-cryptography.html">Multivariate Cryptography</a></li>
<li><a href="signature.html">Signature</a></li>
<li><a href="symmetric-encryption.html">Symmetric Encryption</a></li>
<li><a href="zksnark.html">zkSNARK</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Cascading Style Sheets" >CSS</abbr> offers a number of different units for expressing length. Some have their history in typography, such as point (pt) and pica (pc), others are known from everyday use, such as centimeter (cm) and inch (in).
</p>
</div>
</div>
</div>
<table>
<thead>
<tr class="header">
<th>Unit</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Points (<code>pt</code>)</td>
<td>6pt</td>
<td>12pt</td>
</tr>
<tr class="even">
<td>Pixel (<code>px</code>)</td>
<td>8px</td>
<td>16px</td>
</tr>
<tr class="odd">
<td>Pica (<code>pc</code>)</td>
<td>0.5pc</td>
<td>1.0pc</td>
</tr>
<tr class="even">
<td>Inch (<code>in</code>)</td>
<td>1/16 in</td>
<td>1/8 in</td>
</tr>
<tr class="odd">
<td>Milli Meter (<code>mm</code>)</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>The Dots per Inch (DPI) refers to the <code>pt</code> per <code>in</code>. The default is DPI=96.</p>
<h2 id="relative-lengths">Relative Lengths</h2>
<table>
<thead>
<tr class="header">
<th>Relative Lengths</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>quad-width</td>
<td><code>em</code></td>
</tr>
<tr class="even">
<td>x-height</td>
<td><code>ex</code></td>
</tr>
<tr class="odd">
<td>Viewport width</td>
<td><code>vw</code></td>
</tr>
<tr class="even">
<td>Viewport height</td>
<td><code>vh</code></td>
</tr>
</tbody>
</table>
<h2 id="references">References</h2>
<ul>
<li><a href="https://www.w3.org/Style/Examples/007/units.en.html">CSS Units</a></li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
Floats represents a
</p>
</div>
</div>
</div>
<p><span class="LaTeX">$$ (-1)^s \cdot 1.m \cdot 2^{e-127} $$</span></p>
<table>
<thead>
<tr class="header">
<th>Precision</th>
<th>Width</th>
<th>Exp.</th>
<th>Bias</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Half</td>
<td>16 bit</td>
<td>5 bit</td>
<td>15</td>
</tr>
<tr class="even">
<td>Single</td>
<td>32 bit</td>
<td>8 bit</td>
<td>127</td>
</tr>
<tr class="odd">
<td>Double</td>
<td>64 bit</td>
<td>11bit</td>
<td>1023</td>
</tr>
</tbody>
</table>
<p>Example -7 = 1.11 * 2^2</p>
<h2 id="special-numbers">Special Numbers</h2>
<p>Floats can also represent signed zeros (<span class="LaTeX">$\pm 0$</span>), infinity <span class="LaTeX">$\pm \infty$</span>, and Not-A-Number (NaN).</p>
<table>
<thead>
<tr class="header">
<th>Num</th>
<th>Sign</th>
<th>Exp.</th>
<th>Mant.</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Normal</td>
<td>[0,1]</td>
<td>[-127,126]</td>
<td><span class="LaTeX">$[0,2^{23}]$</span></td>
</tr>
<tr class="even">
<td><span class="LaTeX">$\pm 0$</span></td>
<td>[0,1]</td>
<td>-128</td>
<td>0</td>
</tr>
<tr class="odd">
<td><span class="LaTeX">$\pm \infty$</span></td>
<td>[0,1]</td>
<td>127</td>
<td>0</td>
</tr>
<tr class="even">
<td>Subnormal</td>
<td>[0,1]</td>
<td>-128</td>
<td>!= 0</td>
</tr>
<tr class="odd">
<td>QNaN</td>
<td>[0,1]</td>
<td>127</td>
<td>!=0 &amp; MSB=1</td>
</tr>
<tr class="even">
<td>SNaN</td>
<td>[0,1]</td>
<td>127</td>
<td>!=0 &amp; MSB=0</td>
</tr>
</tbody>
</table>
<h2 id="exceptions">Exceptions</h2>
<p>5 exceptions are supported: • Invalid operation: the result of the operation is a <abbr title="Not a Number" >NaN</abbr> • Division by zero • Overflow: the result of the operation is ±∞ or ±Max depending on the rounding mode • Underflow: the result of the operation is a denormalized number • Inexact result: caused by rounding</p>
<h2 id="subnormal-numbers">Subnormal Numbers</h2>
<p>If the result of a calculation is smaller than the smallest normal number there are two option:</p>
<ul>
<li>hard underflow: directly assign zero</li>
<li>gradual underflow: subnormal number</li>
</ul>
<p>To prevent unwanted behavior by jumping directly to zero, subnormal numbers fill the gap between zero and the smallest normal number.</p>
<h2 id="not-a-number-nan">Not-A-Number (NaN)</h2>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="Object-Oriented Programming" >OOP</abbr> is attractive to handle complexity and achieve modularity and maintainability of large programs.
</p>
</div>
</div>
</div>
<p>Class: A specification of an object Object: The instance of a class</p>
<p>Classes/Objects consist of attributes and methods.</p>
<h2 id="concepts">Concepts</h2>
<p>There are four main concepts in OOP:</p>
<ul>
<li>Encapsulation: Grouping of related attributes and methods</li>
<li>Inheritance: Derive classes (hierarchy)</li>
<li>Polymorphism: overwrite derived methods; dynamic dispatching</li>
<li>Abstraction: Force overwriting</li>
</ul>
<h3 id="encapsulation">Encapsulation</h3>
<p>Related data and subprograms are grouped together</p>
<h3 id="inheritance">Inheritance</h3>
<p>Class can be derived from base classes and inherit their methods and attributes</p>
<h3 id="polymorphism">Polymorphism</h3>
<p>Methods of derived types are overwritten. Class wide calls are dynamically dispatched during runtime.</p>
<h3 id="abstraction">Abstraction</h3>
<p>Specification of abstract interface that must be implemented by objects.</p>
<h2 id="likov-substitution-principle">Likov Substitution Principle</h2>
<p>Methods of a base type must be applicable and behave the same for derived types of that base type.</p>
<p>The LSP is important to avoid problems with polymorphism.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example15">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example15' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<p>For example, if a type wombat is derived from a type animal, then every behavior that applies class-wide to an animal must also apply in the same way to a wombat.</p>
A typical example of a violation of the principle is a square type derived from a rectangle type. A possible precondition of a rectangle type would be that width and height must be positive, however, for a square type the precondition is strengthened because width and height must be the same.
<p>
</div>
</div>
</div>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
<abbr title="GNU Debugger" >GDB</abbr> is a tool for debugging programs. It consists of a server and a client. The <abbr title="GNU Debugger" >GDB</abbr> server runs, controls, and monitors the debugged program. The client can send commands such as setting breakpoints or performing single instruction steps.
</p>
</div>
</div>
</div>
<h2 id="usage">Usage</h2>
<ol type="1">
<li>start gdb <code>gdb</code></li>
<li>Connect to gdb server:</li>
<li></li>
</ol>
<h2 id="commands">Commands</h2>
<table>
<thead>
<tr class="header">
<th>Program Flow</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>continue</code></td>
<td>continiues program execution</td>
</tr>
<tr class="even">
<td><code>finish</code></td>
<td>executes the current subprogram (step out)</td>
</tr>
<tr class="odd">
<td><code>next</code></td>
<td>execute on line of code (step over)</td>
</tr>
<tr class="even">
<td><code>step</code></td>
<td>execute a single instruction (step into)</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
Git is an open-source version control system. It is used to manage a set of files, as they change over time.
</p>
</div>
</div>
</div>
<h2 id="concepts">Concepts</h2>
<p>https://www.sbf5.com/~cduan/technical/git/</p>
<p>Repository: It is stored in the same directory as the project itself, in a subdirectory called <code>.git</code>.</p>
<p>Working Directory: simply the files</p>
<h3 id="commit-object">Commit Object</h3>
<p>A Commit Object is a set files. It can be referred by its partial or full SHA1 name or relative to a head. The postfix <code>^</code> refers to the parent of a head.</p>
<p>Head: simply a named reference to a commit object. By default, there is a head in every repository called <em>master</em>.</p>
<h3 id="branch">Branch:</h3>
<h3 id="index">Index</h3>
<p>The index (= Stage = Cache)</p>
<h3 id="tag">Tag</h3>
<p>Tags are pointers to a certain commit. They use a name which is more memorizeable than the hash of the commit.</p>
<h2 id="commands">Commands</h2>
<table>
<thead>
<tr class="header">
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>git init</code></td>
<td>creates a new repository in the current directory</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th>Changes</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>git status</code></td>
<td>lists modified and untracked files</td>
</tr>
<tr class="even">
<td><code>git diff HEAD</code></td>
<td>shows changes between working dir and HEAD</td>
</tr>
</tbody>
</table>
<h3 id="undo-local-changes">Undo local changes</h3>
<p>To undo local changes use <code>git checkout -- &lt;FILE&gt;</code>. If <code>&lt;FILE&gt;</code> is already staged (happens if you do <code>git add</code>), you can use <code>git reset HEAD &lt;FILE&gt;</code> and then <code>git checkout -- &lt;FILE&gt;</code></p>
<h3 id="link-code-lines-in-issues">Link code lines in issues</h3>
<ul>
<li>view file, click on start line number</li>
<li>hold shift, click on end line</li>
<li>press <code>y</code> to create permanent <abbr title="Uniform Resource Locator" >URL</abbr> (hash)</li>
</ul>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
Reflection and Refraction are two wave phenomena that cause a change in direction of a wavefront at an interface between two different media. In general, a light wave is partially refracted and partially reflected when it passes from one medium to another at any angle other than 0° from the normal.
</p>
</div>
</div>
</div>
<!--* **Reflection** causes the wavefront to return into the medium from which it originated. The angle at which the wave is incident on the surface equals the angle at which it is reflected. -->
<!--* **Refraction** changes the direction of the wave propagating into another medium. During refraction, the phase velocity of the wave is changed but its frequency remains constant.-->
<strong>Reflection</strong>: The angle at which the wave is incident on the surface equals the angle at which it is reflected.<br />

<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$\alpha_1 = - \alpha_2$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with the angle of incidence <span class="LaTeX">$\alpha_1$</span> and the angle of reflection <span class="LaTeX">$\alpha_2$</span>.</p>
</div>
</div>
</div>
<p><strong>Refraction</strong>: The direction of the propagating wave changes according to the refractive indices.</p>
<div data-toggle="collapse" href="#eq_1">
<p><span class="LaTeX">$$\frac{\sin(\alpha)}{\sin(\beta)}=\frac{n_2}{n_1}=\frac{c_1}{c_2}=\frac{\lambda_1}{\lambda_2}$$</span></p>
</div>
<div id="eq_1" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with the angle of incidence <span class="LaTeX">$\alpha$</span>, the angle of refraction <span class="LaTeX">$\beta$</span>, the refractive indices <span class="LaTeX">$n_1$</span> and <span class="LaTeX">$n_2$</span>.</p>
</div>
</div>
</div>
<figure>
<object class="img-fluid" id="fraction" data="res/img/dynamic-images/fraction.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<p>Reflection angle <span class="LaTeX">$\alpha_2 = - \alpha_1 =$</span> <tspan id="Refl_val">-30</tspan> <span class="LaTeX">${}^\circ$</span><br> Refraction angle <span class="LaTeX">$\beta = \arcsin\left( \frac{n_1}{n_2} \sin(\alpha_1) \right) =$</span> <tspan id="Refr_val">-30</tspan> <span class="LaTeX">${}^\circ$</span></p>
<p>The refractive index <span class="LaTeX">$n$</span> of a material</p>
<div data-toggle="collapse" href="#eq_2">
<p><span class="LaTeX">$$n = \sqrt{\mu_r \epsilon_r}$$</span></p>
</div>
<div id="eq_2" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with <span class="LaTeX">$\epsilon_r$</span> is the material's relative permittivity, and <span class="LaTeX">$\mu_r$</span> is its relative permeability.</p>
</div>
</div>
</div>
<!--
 --------------- --------------
 **Reflexion:**  $\alpha_1 = \alpha_2$
 **Fraction:**   $\frac{\sin(\alpha)}{\sin(\beta)}=\frac{n_2}{n_1}=\frac{c_1}{c_2}=\frac{\lambda_1}{\lambda_2}$
 ------------------------------
-->
<h3 id="total-internal-reflection">Total Internal Reflection</h3>
<p>The total reflection will happen at the critical angle</p>
<div data-toggle="collapse" href="#eq_3">
<p><span class="LaTeX">$$\alpha_C = \arcsin\left( \frac{n_2}{n_1} \right)$$</span></p>
</div>
<div id="eq_3" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>where <span class="LaTeX">$\alpha_C$</span> is the critical angle, <span class="LaTeX">$n_1$</span> and <span class="LaTeX">$n_2$</span> are the refractive index.</p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl17">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl17' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<ul>
<li>If <span class="LaTeX">$\alpha \le \alpha_C$</span>, the ray will split; some of the ray will reflect</li>
<li>If <span class="LaTeX">$\alpha \gt \alpha_C$</span>, the entire ray reflects from the boundary.</li>
</ul>
<p>
</div>
</div>
</div>
<h3 id="polarization-angle">Polarization Angle</h3>
<p>Light that is reflected at Brewster's angle</p>
<p><span class="LaTeX">$$\alpha_G = \arctan\left( \frac{n_2}{n_1} \right)$$</span></p>
<script type="text/javascript">
var R_obj

R_el = document.getElementById("fraction");
R_el.addEventListener("load",function(){
    R_obj = R_el.contentDocument;  // get inner DOM
}, false);

function RC_calcReflection() {
 R_obj  = document.getElementById("fraction").contentDocument;

 // from <abbr title="Scalable Vector Graphics" >SVG</abbr>
 var angle = getValue( R_obj.getElementById("alpha").textContent );
 var n1_val = getValue( R_obj.getElementById("n1_val").textContent );
 var n2_val = getValue( R_obj.getElementById("n2_val").textContent );

 // here
 var refl_text = document.getElementById("Refl_val");
 var refr_text = document.getElementById("Refr_val");

 // calc
 Degree = 1.0/360.0 * 2.0 * Math.PI;
 var alpha2 = (-angle)
 
 var beta


    if( Math.abs(angle) > 90 ){ 
        beta = 180 - (Math.asin( n2_val/n1_val * Math.sin(angle * Degree) ) / Degree);
        console.log(beta)
    } else {
        beta = (Math.asin( n1_val/n2_val * Math.sin(angle * Degree) )) / Degree;
    }
    // total reflection?
    if (isNaN(beta) ){ beta = 180 - angle; }
 

 // write
refl_text.textContent=alpha2+"";
refr_text.textContent=Math.round(beta)

}




function syncValues(id, value){
    RC_calcReflection()
}
</script>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<p class="lead">
<p>TeX4TUM is an Interactive Knowledge Platform for Engineers covering the following topics:</p>
<ul>
<li><i class="fa fa-calculator"></i> math</li>
<li><i class="fa fa-flask"></i> physics</li>
<li><i class="fa fa-microchip"></i> electrical engineering</li>
<li><i class="fa fa-code"></i> information theory</li>
<li><i class="fa fa-cogs"></i> mechanical engineering</li>
</ul>
</p>
<h2 id="our-philosophy">Our Philosophy</h2>
<p>With TeX4TUM, we offer an interactive knowledge platform that adjusts the content to your individual needs. In contrast to all the forums, blogs, and wikis out there, we focus on the most important aspects first and only optionally offer you the details if you need them. Our articles are short, consistent and well structured making them ideal for efficiently looking up your study topics. Using interactive diagrams, you are not limited to static examples but can play around with different parameters and observe their effect on the result. This direct feedback will enable more intuitive understanding and helps to quickly learn or lookup even complex topics, reducing cognitive overload and letting you stay focused. Experience it for yourself. Hit <code>tab</code> and type a term that you want to look up.</p>
<h2 id="article-processing">Article Processing</h2>
<p>Intuitive design does not stop when it comes to writing an article. Our goal is that authors do not need to bother about learning any complex markup or programming language. As an author you simply write the article following some format guidelines. Afterwards, our smart scripts will process the article and figure out which content is visible by default and which content will appear on demand. For example, symbol explanations only appear when you click on the corresponding equation.</p>
<h2 id="under-the-hood">Under the Hood</h2>
<p>TeX4TUM uses many different frameworks to achieve its goals.</p>
<ul>
<li>Content Management: <a href="https://jekyllrb.com/">Jekyll</a></li>
<li>Version Control: <a href="https://github.com/latex4ei/tex4tum">GitHub</a></li>
<li>Markup Language: <a href="http://markdown.de/">Markdown</a></li>
<li>Math: <a href="https://khan.github.io/KaTeX/">KaTeX</a></li>
<li>Responsive Design: <a href="http://getbootstrap.com/">Bootstrap 4.0</a></li>
<li>Fuzzy Search: <a href="http://fusejs.io/">Fuse.js</a></li>
<li>Interactive Images: <abbr title="Scalable Vector Graphics" >SVG</abbr> images</li>
</ul>
<h2 id="roadmap">Roadmap</h2>
<p>Tex4TUM should eveolve to be your swiss knive of engineering knowledge. That is, we will focus on a few (<span class="LaTeX">$\approx 200$</span>) high-quality articles instead of having thousands of “OK” articles. First, we are completely open to any suggestions, new articles, and improvements from anyone in order to generate the content that matters most for the students. After a few years when the articles are quite complete, the content should be maintained by trusted student groups, tutors, or researches of the university.</p>
<h2 id="quality">Quality</h2>
<p>To improve the quality of this platform your feedback is important. Please report errors, bugs or improvements to our <a href="https://github.com/latex4ei/tex4tum/issues"><i class="fa fa-bug"></i> issue tracker</a> or send an email to <a href="mailto:info@latex4ei.de"><i class="fa fa-envelope"></i> info@latex4ei.de</a></p>
<p>The content of this page is based on the cheatsheets from <a href="http://latex4ei.de"><i class="fa fa-globe"></i> latex4ei.de</a></p>
<p>Find the source code for this Page at: <!-- Dont put these Liquid statements into a new line to ensure the correct output format --> <a href="https://github.com/latex4ei"> <i class="fab fa-github"></i> <span class="username">latex4ei</span> </a></p>
<p>Join our rooms on Gitter to discuss about further improvements of this page or our cheatsheets: <!-- Dont put these Liquid statements into a new line to ensure the correct output format --> <a href="https://gitter.im/LaTeX4Ei"> <i class="fab fa-gitter"></i> <span class="username">LaTeX4Ei</span> </a></p>
<p>Like our page on facebook to get the latest news about cheatsheets releases or this page: <!-- Dont put these Liquid statements into a new line to ensure the correct output format --> <a href="https://facebook.com/LaTeX4Ei"> <i class="fab fa-facebook-square"></i> <span class="username">LaTeX4Ei</span> </a></p>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This is a powerful, client-side JS calculator based on <a href="http://mathjs.org/docs/index.html">mathjs</a>.
</p>
</div>
</div>
</div>
<p>Try it. Full expression syntax on <a href="http://mathjs.org/docs/expressions/syntax.html">mathjs</a>.</p>
<div id="commandline">
loading...
</div>
<p>Shortcuts: <code>s</code>: set focus, <code>Ctrl+F11</code>: toggle fullscreen.</p>
<h2 id="what-you-can-do">What you can do:</h2>
<ul>
<li>Algebraic calculations</li>
<li>Define functions, calculate derivative, simplify</li>
<li>Vector / Matrix calculations (determinant, etc.)</li>
</ul>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl18">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl18' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<strong>Data Types:</strong> Bool <code>true</code>/<code>false</code> , Num <code>7, 1.5e-9</code>, Complex <code>2+3i</code>, Units <code>3.0 cm, 2.7 kg</code></br> <strong>Vector / Matrix:</strong> <code>v = [1, 2, 3]</code>, <code>M = [11, 12; 21, 22]</code></br> <strong>Predefined Functions:</strong> <code>abs()</code>, <code>sqrt()</code>, <code>sin()</code>, <code>log()</code> </br> <strong>Own Functions:</strong> <code>f(x) = x^2 - 5</code>, then call <code>f(3)</code>,
<p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example21">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example21' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<code>f(x) = x^2 + 3x -1</code></br> <code>fdev = derivative(&quot;x^2 + 3x -1&quot;, &quot;x&quot;)</code> // 2x + 3</br> <code>A = [2, 1; 0, 2]</code></br> <code>d = det(A)</code>
<p>
</div>
</div>
</div>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/4.4.2/math.min.js"></script>
<style type="text/css">

.cle .input,
.cle .results .expr,
.cle .results .res {
  font-family: monospace;
  font-size: 1em;
  color: #333333;
}

.cle {
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 3px;
  border: 1px solid #e5e5e5;
  background-color: #f5f5f5;
  border-radius: 2px;

  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

.cle.fullscreen {
  position: fixed;
  left: 0;
  top: 0;
  padding-top: 4em;
  height: 100%;
  z-index: 999;
}

.cle .top-panel {
  width: 100%;
  height: 100%;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0 0 -30px 0;
  padding: 0 0 30px 0;
}

.cle .bottom-panel {
  position: relative;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 100%;
  height: 30px;
}

.cle button.fullscreen {
  position: absolute;
  top: 8px;
  right: 8px;
  padding: 0;
  width: 24px;
  height: 20px;
  z-index: 1;
  border: none;
  cursor: pointer;
}

.cle.fullscreen button.fullscreen {
  top: 5em;  /* +1 em more than normal for navbar */
}


.cle button.fullscreen:hover {
  opacity: 0.5;
  filter: alpha(opacity=50); /* For IE8 and earlier */
}


.cle .results {
  width: 100%;
  height: 100%;
  min-height: 5rem;
  position: relative;
  overflow: auto;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 4px;

  border: 1px solid #e5e5e5;
  background-color: white;
  box-shadow: inset 2px 2px 5px rgba(192, 192, 192, 0.1);
  line-height: 1.5;
}

.cle .results .expr {
  padding: 0;
  margin: 0;
}

.cle .results .res {
  padding: 0;
  margin: 0 0 5px 30px;
  color: #005293;
}

.cle .results .expr,
.cle .results .res {
  background: none;
  border: none;

  /* http://css-tricks.com/snippets/css/make-pre-text-wrap/ */
  white-space: pre-wrap;       /* css-3 */
  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
  white-space: -pre-wrap;      /* Opera 4-6 */
  white-space: -o-pre-wrap;    /* Opera 7 */
  word-wrap: break-word;       /* Internet Explorer 5.5+ */
}

.cle .input-left {
  width: 100%;
  height: 100%;
  margin: 0 -80px 0 0;
  padding: 0 80px 4px 0;
  float: left;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.cle .input-right {
  width: 80px;
  height: 100%;
  margin: 0;
  padding: 0 0 4px 4px;
  float: right;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.cle .input {
  width: 100%;
  height: 100%;
  margin: 4px 0 0 0;
  padding: 2px 4px;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;

  border: 1px solid #e5e5e5;
  background-color: white;
  box-shadow: inset 2px 2px 5px rgba(192, 192, 192, 0.1);
}

.cle button.eval {
  color: #363636;
  width: 100%;
  height: 100%;
  margin: 4px 0;
  padding: 0;
}

.result-info-icon {
  color: white;
  background: lightgray;

  border-radius: 3px;

  display: inline-block;
  text-align: center;
  margin: 0 6px;
  padding: 0 3px;

  cursor: pointer;
  transition: 0.1s all;
}

.result-info-icon:hover {
  background: darkgray;
  transition: 0.3s all;
}


</style>
<script type="text/javascript">
/**
 * A small command line editor to demonstrate the math.js parser.
 * @param {Object} params    Configuration parameter. Available:
 *                           {HTMLElement} container DOM Element to contain
 *                                                   the editor
 *                           {Object} [math]         An instance of math.js
 *                           {String} [id]           Optional id for the editor,
 *                                                   used to persist data.
 *                                                   "default" by default.
 */
function CommandLineEditor (params) {
  // get instance of math.js from params, or create one
  var math = params.math || mathjs();

  // object with utility methods
  var util = {};

  /**
   * Returns the version of Internet Explorer or a -1
   * (indicating the use of another browser).
   * Source: http://msdn.microsoft.com/en-us/library/ms537509(v=vs.85).aspx
   * @return {Number} Internet Explorer version, or -1 in case of an other browser
   */
  util.getInternetExplorerVersion = function getInternetExplorerVersion () {
    var rv = -1; // Return value assumes failure.
    if (navigator.appName == 'Microsoft Internet Explorer')
    {
      var ua = navigator.userAgent;
      var re  = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
      if (re.exec(ua) != null) {
        rv = parseFloat( RegExp.$1 );
      }
    }
    return rv;
  };

  /**
   * Add and event listener
   * @param {Element}  element       An html element
   * @param {string}   action        The action, for example "click",
   *                                 without the prefix "on"
   * @param {function}    listener   The callback function to be executed
   */
  util.addEventListener = function addEventListener(element, action, listener) {
    if (element.addEventListener) {
      element.addEventListener(action, listener, false);
    } else {
      element.attachEvent('on' + action, listener);  // IE browsers
    }
  };

  /**
   * Remove an event listener from an element
   * @param {Element}  element   An html dom element
   * @param {string}   action    The name of the event, for example "mousedown"
   * @param {function} listener  The listener function
   */
  util.removeEventListener = function removeEventListener (element, action, listener) {
    if (element.removeEventListener) {
      element.removeEventListener(action, listener, false);
    } else {
      element.detachEvent('on' + action, listener);  // IE browsers
    }
  };

  /**
   * Stop event propagation
   */
  util.stopPropagation = function stopPropagation (event) {
    if (event.stopPropagation) {
      event.stopPropagation();  // non-IE browsers
    }
    else {
      event.cancelBubble = true;  // IE browsers
    }
  };

  /**
   * Cancels the event if it is cancelable, without stopping further propagation of the event.
   */
  util.preventDefault = function preventDefault (event) {
    if (event.preventDefault) {
      event.preventDefault();  // non-IE browsers
    }
    else {
      event.returnValue = false;  // IE browsers
    }
  };

  /**
   * Clear all DOM childs from an element
   * @param {HTMLElement} element
   */
  util.clearDOM = function clearDOM (element) {
    while (element.firstChild) {
      element.removeChild(element.firstChild);
    }
  };

  // read the parameters
  var container = (params && params.container) ? params.container : undefined;
  if (!container) {
    throw new Error('Required parameter "container" missing in configuration parameters');
  }
  var id = (params && params.id) ? String(params.id) : 'default';

  // clear the container
  util.clearDOM(container);

  // validate if math.js is loaded.
  var error;
  if (typeof math === 'undefined' || !math.parser) {
    error = document.createElement('div');
    error.appendChild(document.createTextNode(
        'Cannot create parser, math.js not loaded.'));
    error.style.color = 'red';
    container.appendChild(error);
    return;
  }

  // validate browser
  // the editor does not work well on IE7
  // TODO: make the demo working on IE7
  var ieVersion = util.getInternetExplorerVersion();
  if (ieVersion == 6 || ieVersion == 7) {
    error = document.createElement('div');
    error.appendChild(document.createTextNode(
        'Sorry, this demo is not available on IE7 and older. The math.js ' +
            'library itself works fine on every version of IE though.'));
    error.style.color = 'red';
    container.appendChild(error);
    return;
  }

  // define parameters
  var dom = {},
      fullscreen = false,
      history = [],
      historyIndex = -1,
      parser = math.parser();

  function resize() {
    // position the full screen button in the top right
    // var top = 8;
    // var right = (dom.topPanel.clientWidth - dom.results.clientWidth) + 6;
    // dom.fullscreen.style.top = top + 'px';
    // dom.fullscreen.style.right = right + 'px';
  }

  function toggleFullscreen() {
    if (fullscreen) {
      exitFullscreen();
    }
    else {
      showFullscreen()
    }
  }

  function showFullscreen() {
    dom.frame.className = 'cle fullscreen';
    document.body.style.overflow = 'hidden'; // (works only if body.style.height is defined)
    fullscreen = true;
    resize();
    scrollDown();
    dom.input.focus();
  }

  function exitFullscreen() {
    dom.frame.className = 'cle';
    document.body.style.overflow = '';
    fullscreen = false;
    resize();
    scrollDown();
  }

  function scrollDown() {
    dom.results.scrollTop = dom.results.scrollHeight;
  }

  // Auto complete current input
  function autoComplete () {
    var name;
    var text = dom.input.value;
    var end = /[a-zA-Z_0-9]+$/.exec(text);
    if (end) {
      var keyword = end[0];
      var matches = [];

      // scope variables
      // TODO: not nice to read the (private) defs inside the scope
      for (var def in parser.scope) {
        if (parser.scope.hasOwnProperty(def)) {
          if (def.indexOf(keyword) == 0) {
            matches.push(def);
          }
        }
      }

      // commandline keywords
      if ('clear'.indexOf(keyword) == 0) {
        matches.push('clear');
      }

      // math functions and constants
      var ignore = ['expr', 'type'];
      for (var func in math) {
        if (math.hasOwnProperty(func)) {
          if (func.indexOf(keyword) == 0 && ignore.indexOf(func) == -1) {
            matches.push(func);
          }
        }
      }

      // units
      var Unit = math.type.Unit;
      for (name in Unit.UNITS) {
        if (Unit.UNITS.hasOwnProperty(name)) {
          if (name.indexOf(keyword) == 0) {
            matches.push(name);
          }
        }
      }
      for (name in Unit.PREFIXES) {
        if (Unit.PREFIXES.hasOwnProperty(name)) {
          var prefixes = Unit.PREFIXES[name];
          for (var prefix in prefixes) {
            if (prefixes.hasOwnProperty(prefix)) {
              if (prefix.indexOf(keyword) == 0) {
                matches.push(prefix);
              }
              else if (keyword.indexOf(prefix) == 0) {
                var unitKeyword = keyword.substring(prefix.length);

                for (var n in Unit.UNITS) {
                  if (Unit.UNITS.hasOwnProperty(n)) {
                    if (n.indexOf(unitKeyword) == 0 && Unit.isValuelessUnit(prefix + n)) {
                      matches.push(prefix + n);
                    }
                  }
                }
              }
            }
          }
        }
      }

      // TODO: in case of multiple matches, show a drop-down box to select one
      var firstMatch = matches[0];
      if (firstMatch) {
        text = text.substring(0, text.length - keyword.length) + firstMatch;
        dom.input.value = text;
      }
    }
  }

  /**
   * KeyDown event handler to catch global key presses in the window
   * @param {Event} event
   */
  function onWindowKeyDown (event) {
    if (dom.frame.parentNode != container) {
      destroy();
    }

    event = event || window.event;
    var target = event.target || event.srcElement;
    var keynum = event.which || event.keyCode;
    if (keynum == 83) { // s
      if (target.nodeName.toUpperCase() != 'INPUT') {
        dom.input.focus();
        util.preventDefault(event);
        util.stopPropagation(event);
      }
    }
    else if (keynum == 71) { // g
      if (target.nodeName.toUpperCase() != 'INPUT') {
        var search = document.getElementById('gsc-i-id1');
        if (search) search.focus();
        util.preventDefault(event);
        util.stopPropagation(event);
      }
    }
    else if (keynum == 27) { // ESC
      if (fullscreen) {
        exitFullscreen();
        util.preventDefault(event);
        util.stopPropagation(event);
      }
    }
    else if (event.ctrlKey && keynum == 122) { // Ctrl+F11
      toggleFullscreen();
      if (fullscreen) {
        dom.input.focus();
      }
      util.preventDefault(event);
      util.stopPropagation(event);
    }
  }

  /**
   * Resize event handler
   */
  function onWindowResize () {
    if (dom.frame.parentNode != container) {
      destroy();
    }

    resize();
  }

  /**
   * KeyDown handler for the input field
   * @param event
   * @returns {boolean}
   */
  function onKeyDown (event) {
    event = event || window.event;

    var keynum = event.which || event.keyCode;
    switch (keynum) {
      case 9: // Tab
        autoComplete();
        util.preventDefault(event);
        util.stopPropagation(event);
        return false;
        break;

      case 13: // Enter
        evalInput();
        util.preventDefault(event);
        util.stopPropagation(event);
        return false;
        break;

      case 38: // Arrow up
        if (historyIndex > 0) {
          historyIndex--;
          dom.input.value = history[historyIndex] || '';
          util.preventDefault(event);
          util.stopPropagation(event);
        }
        return false;
        break;

      case 40: // Arrow down
        if (historyIndex < history.length) {
          historyIndex++;
          dom.input.value = history[historyIndex] || '';
          util.preventDefault(event);
          util.stopPropagation(event);
        }
        return false;
        break;

      default:
        historyIndex = history.length;
        break;
    }

    return true;
  }

  /**
   * Destroy the editor: cleanup <abbr title="Hypertext Markup Language" >HTML</abbr> DOM and global event listeners
   */
  function create() {
    // create main frame for the editor
    dom.frame = document.createElement('div');
    dom.frame.className = 'cle';
    container.appendChild(dom.frame);

    // create two panels for the layout
    dom.topPanel = document.createElement('div');
    dom.topPanel.className = 'top-panel';
    dom.frame.appendChild(dom.topPanel);
    dom.bottomPanel = document.createElement('div');
    dom.bottomPanel.className = 'bottom-panel';
    dom.frame.appendChild(dom.bottomPanel);

    // create div to hold the results
    dom.results = document.createElement('div');
    dom.results.className = 'results';
    dom.topPanel.appendChild(dom.results);

    // create fullscreen button
    dom.fullscreen = document.createElement('button');
    dom.fullscreen.className = 'fullscreen fa fa-expand-arrows-alt';
    dom.fullscreen.title = 'Toggle full screen display (Ctrl+F11)';
    dom.fullscreen.onclick = toggleFullscreen;
    dom.topPanel.appendChild(dom.fullscreen);

    // panels for the input field and button
    dom.inputLeft = document.createElement('div');
    dom.inputLeft.className = 'input-left';
    dom.bottomPanel.appendChild(dom.inputLeft);
    dom.inputRight = document.createElement('div');
    dom.inputRight.className = 'input-right';
    dom.bottomPanel.appendChild(dom.inputRight);

    dom.input = document.createElement('input');
    dom.input.className = 'input';
    dom.input.title = 'Enter an expression';
    dom.input.onkeydown = onKeyDown;
    dom.inputLeft.appendChild(dom.input);

    // create an eval button
    dom.btnEval = document.createElement('button');
    dom.btnEval.appendChild(document.createTextNode('Evaluate'));
    dom.btnEval.className = 'eval';
    dom.btnEval.title = 'Evaluate the expression (Enter)';
    dom.btnEval.onclick = evalInput;
    dom.inputRight.appendChild(dom.btnEval);

    // create global event listeners
    util.addEventListener(window, 'keydown', onWindowKeyDown);
    util.addEventListener(window, 'resize', onWindowResize);
  }

  /**
   * Destroy the editor: cleanup <abbr title="Hypertext Markup Language" >HTML</abbr> DOM and global event listeners
   */
  function destroy() {
    // destroy DOM
    if (dom.frame.parentNode) {
      dom.frame.parentNode.removeChild(dom.frame);
    }

    // destroy event listeners
    util.removeEventListener(window, 'keydown', onWindowKeyDown);
    util.removeEventListener(window, 'resize', onWindowResize);
  }

  /**
   * Trim a string
   * http://stackoverflow.com/a/498995/1262753
   * @param str
   * @return {*|void}
   */
  function trim(str) {
    return str.replace(/^\s+|\s+$/g, '');
  }

  /**
   * Load saved expressions or example expressions
   */
  function load() {
    var expressions;
    if (localStorage) {
      // load expressions from local storage
      var data = localStorage[id];
      if (data) {
        expressions = JSON.parse(data);
      }
    }
    if (!expressions || !(expressions instanceof Array)) {
      // load some example expressions
      expressions = [
        'a = 5.08 cm + 2 inch',
        'sin(90 deg)',
        'f(x) = 3x^2 + 4x - 5',
        'f(2)'
      ];
    }

    // evaluate all expressions
    expressions.forEach(function (expr) {
      eval(expr);
    });
  }

  /**
   * Save executed expressions
   */
  function save() {
    if (localStorage) {
      localStorage[id] = JSON.stringify(history);
    }
  }

  function clear() {
    history = [];
    historyIndex = -1;
    parser.clear();

    util.clearDOM(dom.results);
    dom.input.value = '';
    resize();
    // save(); // TODO: save expressions (first we need a method to restore the examples)
  }

  function eval (expr) {
    expr = trim(expr);

    if (expr == 'clear') {
      clear();
      return;
    }

    if (expr) {
      history.push(expr);
      historyIndex = history.length;

      var res, resStr, info;
      try {
        res = parser.eval(expr);
        resStr = math.format(res, { precision: 14 });
        var unRoundedStr = math.format(res);
        if (unRoundedStr.length - resStr.length > 4) {
          info = [
            createDiv('This result contains a round-off error which is hidden from the output. The unrounded result is:'),
            createDiv(unRoundedStr),
            createA('read more...', 'docs/datatypes/numbers.html#roundoff-errors', '_blank')
          ];
        }
      }
      catch (err) {
        resStr = err.toString();
      }

      var preExpr = document.createElement('pre');
      preExpr.className = 'expr';
      preExpr.appendChild(document.createTextNode(expr));
      dom.results.appendChild(preExpr);

      var preRes = document.createElement('pre');
      preRes.className = 'res';
      preRes.appendChild(document.createTextNode(resStr));
      if (info) {
        var divInfo = document.createElement('div');
        info.forEach(function (elem) {
          divInfo.appendChild(elem);
        });
        divInfo.style.display = 'none';

        var divInfoIcon = document.createElement('span');
        divInfoIcon.appendChild(document.createTextNode('round-off error'));
        divInfoIcon.className = 'result-info-icon';
        divInfoIcon.title = 'Click to see more info';
        divInfoIcon.onclick = function () {
          // toggle display
          divInfo.style.display = (divInfo.style.display == '') ? 'none' : '';
          resize();
        };

        preRes.appendChild(divInfoIcon);
        preRes.appendChild(divInfo);
      }
      dom.results.appendChild(preRes);

      scrollDown();
      dom.input.value = '';

      resize();
      // save();  // TODO: save expressions (first we need a method to restore the examples)
    }
  }

  function evalInput() {
    eval(dom.input.value);
  }

  create();
  load();
}

var container = document.getElementById('commandline');
if (container) {
  var editor = new CommandLineEditor({
    container: container,
    math: math
  });
}


/**
 * Test whether the child rect fits completely inside the parent rect.
 * @param {ClientRect} parent
 * @param {ClientRect} child
 * @param {number} margin
 */
function insideRect (parent, child, margin) {
  var _margin = margin !== undefined ? margin : 0;
  return child.left   - _margin >= parent.left
      && child.right  + _margin <= parent.right
      && child.top    - _margin >= parent.top
      && child.bottom + _margin <= parent.bottom;
}

function createDiv (text) {
  var div = document.createElement('div');
  div.appendChild(document.createTextNode(text));
  return div;
}

function createA (text, href, target) {
  var a = document.createElement('a');
  a.href = href;
  a.target = target || '';
  a.appendChild(document.createTextNode(text));

  return a;
}
</script>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This is a powerful, client-side <abbr title="JavaScript" >JS</abbr> calculator based on <a href="http://mathjs.org/docs/index.html">mathjs</a>.
</p>
</div>
</div>
</div>
<p>Try it. Full expression syntax on <a href="http://mathjs.org/docs/expressions/syntax.html">mathjs</a>.</p>
<div id="commandline">
loading...
</div>
<p>Shortcuts: <code>s</code>: set focus, <code>Ctrl+F11</code>: toggle fullscreen.</p>
<h2 id="what-you-can-do">What you can do:</h2>
<ul>
<li>Algebraic calculations</li>
<li>Define functions, calculate derivative, simplify</li>
<li>Vector / Matrix calculations (determinant, etc.)</li>
</ul>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl18">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl18' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<strong>Data Types:</strong> Bool <code>true</code>/<code>false</code> , Num <code>7, 1.5e-9</code>, Complex <code>2+3i</code>, Units <code>3.0 cm, 2.7 kg</code></br> <strong>Vector / Matrix:</strong> <code>v = [1, 2, 3]</code>, <code>M = [11, 12; 21, 22]</code></br> <strong>Predefined Functions:</strong> <code>abs()</code>, <code>sqrt()</code>, <code>sin()</code>, <code>log()</code> </br> <strong>Own Functions:</strong> <code>f(x) = x^2 - 5</code>, then call <code>f(3)</code>,
<p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example21">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example21' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<code>f(x) = x^2 + 3x -1</code></br> <code>fdev = derivative(&quot;x^2 + 3x -1&quot;, &quot;x&quot;)</code> // 2x + 3</br> <code>A = [2, 1; 0, 2]</code></br> <code>d = det(A)</code>
<p>
</div>
</div>
</div>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/4.4.2/math.min.js"></script>
<style type="text/css">

.cle .input,
.cle .results .expr,
.cle .results .res {
  font-family: monospace;
  font-size: 1em;
  color: #333333;
}

.cle {
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 3px;
  border: 1px solid #e5e5e5;
  background-color: #f5f5f5;
  border-radius: 2px;

  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

.cle.fullscreen {
  position: fixed;
  left: 0;
  top: 0;
  padding-top: 4em;
  height: 100%;
  z-index: 999;
}

.cle .top-panel {
  width: 100%;
  height: 100%;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0 0 -30px 0;
  padding: 0 0 30px 0;
}

.cle .bottom-panel {
  position: relative;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 100%;
  height: 30px;
}

.cle button.fullscreen {
  position: absolute;
  top: 8px;
  right: 8px;
  padding: 0;
  width: 24px;
  height: 20px;
  z-index: 1;
  border: none;
  cursor: pointer;
}

.cle.fullscreen button.fullscreen {
  top: 5em;  /* +1 em more than normal for navbar */
}


.cle button.fullscreen:hover {
  opacity: 0.5;
  filter: alpha(opacity=50); /* For IE8 and earlier */
}


.cle .results {
  width: 100%;
  height: 100%;
  min-height: 5rem;
  position: relative;
  overflow: auto;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 4px;

  border: 1px solid #e5e5e5;
  background-color: white;
  box-shadow: inset 2px 2px 5px rgba(192, 192, 192, 0.1);
  line-height: 1.5;
}

.cle .results .expr {
  padding: 0;
  margin: 0;
}

.cle .results .res {
  padding: 0;
  margin: 0 0 5px 30px;
  color: #005293;
}

.cle .results .expr,
.cle .results .res {
  background: none;
  border: none;

  /* http://css-tricks.com/snippets/css/make-pre-text-wrap/ */
  white-space: pre-wrap;       /* css-3 */
  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
  white-space: -pre-wrap;      /* Opera 4-6 */
  white-space: -o-pre-wrap;    /* Opera 7 */
  word-wrap: break-word;       /* Internet Explorer 5.5+ */
}

.cle .input-left {
  width: 100%;
  height: 100%;
  margin: 0 -80px 0 0;
  padding: 0 80px 4px 0;
  float: left;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.cle .input-right {
  width: 80px;
  height: 100%;
  margin: 0;
  padding: 0 0 4px 4px;
  float: right;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.cle .input {
  width: 100%;
  height: 100%;
  margin: 4px 0 0 0;
  padding: 2px 4px;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;

  border: 1px solid #e5e5e5;
  background-color: white;
  box-shadow: inset 2px 2px 5px rgba(192, 192, 192, 0.1);
}

.cle button.eval {
  color: #363636;
  width: 100%;
  height: 100%;
  margin: 4px 0;
  padding: 0;
}

.result-info-icon {
  color: white;
  background: lightgray;

  border-radius: 3px;

  display: inline-block;
  text-align: center;
  margin: 0 6px;
  padding: 0 3px;

  cursor: pointer;
  transition: 0.1s all;
}

.result-info-icon:hover {
  background: darkgray;
  transition: 0.3s all;
}


</style>
<script type="text/javascript">
/**
 * A small command line editor to demonstrate the math.js parser.
 * @param {Object} params    Configuration parameter. Available:
 *                           {HTMLElement} container DOM Element to contain
 *                                                   the editor
 *                           {Object} [math]         An instance of math.js
 *                           {String} [id]           Optional id for the editor,
 *                                                   used to persist data.
 *                                                   "default" by default.
 */
function CommandLineEditor (params) {
  // get instance of math.js from params, or create one
  var math = params.math || mathjs();

  // object with utility methods
  var util = {};

  /**
   * Returns the version of Internet Explorer or a -1
   * (indicating the use of another browser).
   * Source: http://msdn.microsoft.com/en-us/library/ms537509(v=vs.85).aspx
   * @return {Number} Internet Explorer version, or -1 in case of an other browser
   */
  util.getInternetExplorerVersion = function getInternetExplorerVersion () {
    var rv = -1; // Return value assumes failure.
    if (navigator.appName == 'Microsoft Internet Explorer')
    {
      var ua = navigator.userAgent;
      var re  = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
      if (re.exec(ua) != null) {
        rv = parseFloat( RegExp.$1 );
      }
    }
    return rv;
  };

  /**
   * Add and event listener
   * @param {Element}  element       An html element
   * @param {string}   action        The action, for example "click",
   *                                 without the prefix "on"
   * @param {function}    listener   The callback function to be executed
   */
  util.addEventListener = function addEventListener(element, action, listener) {
    if (element.addEventListener) {
      element.addEventListener(action, listener, false);
    } else {
      element.attachEvent('on' + action, listener);  // IE browsers
    }
  };

  /**
   * Remove an event listener from an element
   * @param {Element}  element   An html dom element
   * @param {string}   action    The name of the event, for example "mousedown"
   * @param {function} listener  The listener function
   */
  util.removeEventListener = function removeEventListener (element, action, listener) {
    if (element.removeEventListener) {
      element.removeEventListener(action, listener, false);
    } else {
      element.detachEvent('on' + action, listener);  // IE browsers
    }
  };

  /**
   * Stop event propagation
   */
  util.stopPropagation = function stopPropagation (event) {
    if (event.stopPropagation) {
      event.stopPropagation();  // non-IE browsers
    }
    else {
      event.cancelBubble = true;  // IE browsers
    }
  };

  /**
   * Cancels the event if it is cancelable, without stopping further propagation of the event.
   */
  util.preventDefault = function preventDefault (event) {
    if (event.preventDefault) {
      event.preventDefault();  // non-IE browsers
    }
    else {
      event.returnValue = false;  // IE browsers
    }
  };

  /**
   * Clear all DOM childs from an element
   * @param {HTMLElement} element
   */
  util.clearDOM = function clearDOM (element) {
    while (element.firstChild) {
      element.removeChild(element.firstChild);
    }
  };

  // read the parameters
  var container = (params && params.container) ? params.container : undefined;
  if (!container) {
    throw new Error('Required parameter "container" missing in configuration parameters');
  }
  var id = (params && params.id) ? String(params.id) : 'default';

  // clear the container
  util.clearDOM(container);

  // validate if math.js is loaded.
  var error;
  if (typeof math === 'undefined' || !math.parser) {
    error = document.createElement('div');
    error.appendChild(document.createTextNode(
        'Cannot create parser, math.js not loaded.'));
    error.style.color = 'red';
    container.appendChild(error);
    return;
  }

  // validate browser
  // the editor does not work well on IE7
  // TODO: make the demo working on IE7
  var ieVersion = util.getInternetExplorerVersion();
  if (ieVersion == 6 || ieVersion == 7) {
    error = document.createElement('div');
    error.appendChild(document.createTextNode(
        'Sorry, this demo is not available on IE7 and older. The math.js ' +
            'library itself works fine on every version of IE though.'));
    error.style.color = 'red';
    container.appendChild(error);
    return;
  }

  // define parameters
  var dom = {},
      fullscreen = false,
      history = [],
      historyIndex = -1,
      parser = math.parser();

  function resize() {
    // position the full screen button in the top right
    // var top = 8;
    // var right = (dom.topPanel.clientWidth - dom.results.clientWidth) + 6;
    // dom.fullscreen.style.top = top + 'px';
    // dom.fullscreen.style.right = right + 'px';
  }

  function toggleFullscreen() {
    if (fullscreen) {
      exitFullscreen();
    }
    else {
      showFullscreen()
    }
  }

  function showFullscreen() {
    dom.frame.className = 'cle fullscreen';
    document.body.style.overflow = 'hidden'; // (works only if body.style.height is defined)
    fullscreen = true;
    resize();
    scrollDown();
    dom.input.focus();
  }

  function exitFullscreen() {
    dom.frame.className = 'cle';
    document.body.style.overflow = '';
    fullscreen = false;
    resize();
    scrollDown();
  }

  function scrollDown() {
    dom.results.scrollTop = dom.results.scrollHeight;
  }

  // Auto complete current input
  function autoComplete () {
    var name;
    var text = dom.input.value;
    var end = /[a-zA-Z_0-9]+$/.exec(text);
    if (end) {
      var keyword = end[0];
      var matches = [];

      // scope variables
      // TODO: not nice to read the (private) defs inside the scope
      for (var def in parser.scope) {
        if (parser.scope.hasOwnProperty(def)) {
          if (def.indexOf(keyword) == 0) {
            matches.push(def);
          }
        }
      }

      // commandline keywords
      if ('clear'.indexOf(keyword) == 0) {
        matches.push('clear');
      }

      // math functions and constants
      var ignore = ['expr', 'type'];
      for (var func in math) {
        if (math.hasOwnProperty(func)) {
          if (func.indexOf(keyword) == 0 && ignore.indexOf(func) == -1) {
            matches.push(func);
          }
        }
      }

      // units
      var Unit = math.type.Unit;
      for (name in Unit.UNITS) {
        if (Unit.UNITS.hasOwnProperty(name)) {
          if (name.indexOf(keyword) == 0) {
            matches.push(name);
          }
        }
      }
      for (name in Unit.PREFIXES) {
        if (Unit.PREFIXES.hasOwnProperty(name)) {
          var prefixes = Unit.PREFIXES[name];
          for (var prefix in prefixes) {
            if (prefixes.hasOwnProperty(prefix)) {
              if (prefix.indexOf(keyword) == 0) {
                matches.push(prefix);
              }
              else if (keyword.indexOf(prefix) == 0) {
                var unitKeyword = keyword.substring(prefix.length);

                for (var n in Unit.UNITS) {
                  if (Unit.UNITS.hasOwnProperty(n)) {
                    if (n.indexOf(unitKeyword) == 0 && Unit.isValuelessUnit(prefix + n)) {
                      matches.push(prefix + n);
                    }
                  }
                }
              }
            }
          }
        }
      }

      // TODO: in case of multiple matches, show a drop-down box to select one
      var firstMatch = matches[0];
      if (firstMatch) {
        text = text.substring(0, text.length - keyword.length) + firstMatch;
        dom.input.value = text;
      }
    }
  }

  /**
   * KeyDown event handler to catch global key presses in the window
   * @param {Event} event
   */
  function onWindowKeyDown (event) {
    if (dom.frame.parentNode != container) {
      destroy();
    }

    event = event || window.event;
    var target = event.target || event.srcElement;
    var keynum = event.which || event.keyCode;
    if (keynum == 83) { // s
      if (target.nodeName.toUpperCase() != 'INPUT') {
        dom.input.focus();
        util.preventDefault(event);
        util.stopPropagation(event);
      }
    }
    else if (keynum == 71) { // g
      if (target.nodeName.toUpperCase() != 'INPUT') {
        var search = document.getElementById('gsc-i-id1');
        if (search) search.focus();
        util.preventDefault(event);
        util.stopPropagation(event);
      }
    }
    else if (keynum == 27) { // ESC
      if (fullscreen) {
        exitFullscreen();
        util.preventDefault(event);
        util.stopPropagation(event);
      }
    }
    else if (event.ctrlKey && keynum == 122) { // Ctrl+F11
      toggleFullscreen();
      if (fullscreen) {
        dom.input.focus();
      }
      util.preventDefault(event);
      util.stopPropagation(event);
    }
  }

  /**
   * Resize event handler
   */
  function onWindowResize () {
    if (dom.frame.parentNode != container) {
      destroy();
    }

    resize();
  }

  /**
   * KeyDown handler for the input field
   * @param event
   * @returns {boolean}
   */
  function onKeyDown (event) {
    event = event || window.event;

    var keynum = event.which || event.keyCode;
    switch (keynum) {
      case 9: // Tab
        autoComplete();
        util.preventDefault(event);
        util.stopPropagation(event);
        return false;
        break;

      case 13: // Enter
        evalInput();
        util.preventDefault(event);
        util.stopPropagation(event);
        return false;
        break;

      case 38: // Arrow up
        if (historyIndex > 0) {
          historyIndex--;
          dom.input.value = history[historyIndex] || '';
          util.preventDefault(event);
          util.stopPropagation(event);
        }
        return false;
        break;

      case 40: // Arrow down
        if (historyIndex < history.length) {
          historyIndex++;
          dom.input.value = history[historyIndex] || '';
          util.preventDefault(event);
          util.stopPropagation(event);
        }
        return false;
        break;

      default:
        historyIndex = history.length;
        break;
    }

    return true;
  }

  /**
   * Destroy the editor: cleanup <abbr title="Hypertext Markup Language" >HTML</abbr> DOM and global event listeners
   */
  function create() {
    // create main frame for the editor
    dom.frame = document.createElement('div');
    dom.frame.className = 'cle';
    container.appendChild(dom.frame);

    // create two panels for the layout
    dom.topPanel = document.createElement('div');
    dom.topPanel.className = 'top-panel';
    dom.frame.appendChild(dom.topPanel);
    dom.bottomPanel = document.createElement('div');
    dom.bottomPanel.className = 'bottom-panel';
    dom.frame.appendChild(dom.bottomPanel);

    // create div to hold the results
    dom.results = document.createElement('div');
    dom.results.className = 'results';
    dom.topPanel.appendChild(dom.results);

    // create fullscreen button
    dom.fullscreen = document.createElement('button');
    dom.fullscreen.className = 'fullscreen fa fa-expand-arrows-alt';
    dom.fullscreen.title = 'Toggle full screen display (Ctrl+F11)';
    dom.fullscreen.onclick = toggleFullscreen;
    dom.topPanel.appendChild(dom.fullscreen);

    // panels for the input field and button
    dom.inputLeft = document.createElement('div');
    dom.inputLeft.className = 'input-left';
    dom.bottomPanel.appendChild(dom.inputLeft);
    dom.inputRight = document.createElement('div');
    dom.inputRight.className = 'input-right';
    dom.bottomPanel.appendChild(dom.inputRight);

    dom.input = document.createElement('input');
    dom.input.className = 'input';
    dom.input.title = 'Enter an expression';
    dom.input.onkeydown = onKeyDown;
    dom.inputLeft.appendChild(dom.input);

    // create an eval button
    dom.btnEval = document.createElement('button');
    dom.btnEval.appendChild(document.createTextNode('Evaluate'));
    dom.btnEval.className = 'eval';
    dom.btnEval.title = 'Evaluate the expression (Enter)';
    dom.btnEval.onclick = evalInput;
    dom.inputRight.appendChild(dom.btnEval);

    // create global event listeners
    util.addEventListener(window, 'keydown', onWindowKeyDown);
    util.addEventListener(window, 'resize', onWindowResize);
  }

  /**
   * Destroy the editor: cleanup <abbr title="Hypertext Markup Language" >HTML</abbr> DOM and global event listeners
   */
  function destroy() {
    // destroy DOM
    if (dom.frame.parentNode) {
      dom.frame.parentNode.removeChild(dom.frame);
    }

    // destroy event listeners
    util.removeEventListener(window, 'keydown', onWindowKeyDown);
    util.removeEventListener(window, 'resize', onWindowResize);
  }

  /**
   * Trim a string
   * http://stackoverflow.com/a/498995/1262753
   * @param str
   * @return {*|void}
   */
  function trim(str) {
    return str.replace(/^\s+|\s+$/g, '');
  }

  /**
   * Load saved expressions or example expressions
   */
  function load() {
    var expressions;
    if (localStorage) {
      // load expressions from local storage
      var data = localStorage[id];
      if (data) {
        expressions = JSON.parse(data);
      }
    }
    if (!expressions || !(expressions instanceof Array)) {
      // load some example expressions
      expressions = [
        'a = 5.08 cm + 2 inch',
        'sin(90 deg)',
        'f(x) = 3x^2 + 4x - 5',
        'f(2)'
      ];
    }

    // evaluate all expressions
    expressions.forEach(function (expr) {
      eval(expr);
    });
  }

  /**
   * Save executed expressions
   */
  function save() {
    if (localStorage) {
      localStorage[id] = JSON.stringify(history);
    }
  }

  function clear() {
    history = [];
    historyIndex = -1;
    parser.clear();

    util.clearDOM(dom.results);
    dom.input.value = '';
    resize();
    // save(); // TODO: save expressions (first we need a method to restore the examples)
  }

  function eval (expr) {
    expr = trim(expr);

    if (expr == 'clear') {
      clear();
      return;
    }

    if (expr) {
      history.push(expr);
      historyIndex = history.length;

      var res, resStr, info;
      try {
        res = parser.eval(expr);
        resStr = math.format(res, { precision: 14 });
        var unRoundedStr = math.format(res);
        if (unRoundedStr.length - resStr.length > 4) {
          info = [
            createDiv('This result contains a round-off error which is hidden from the output. The unrounded result is:'),
            createDiv(unRoundedStr),
            createA('read more...', 'docs/datatypes/numbers.html#roundoff-errors', '_blank')
          ];
        }
      }
      catch (err) {
        resStr = err.toString();
      }

      var preExpr = document.createElement('pre');
      preExpr.className = 'expr';
      preExpr.appendChild(document.createTextNode(expr));
      dom.results.appendChild(preExpr);

      var preRes = document.createElement('pre');
      preRes.className = 'res';
      preRes.appendChild(document.createTextNode(resStr));
      if (info) {
        var divInfo = document.createElement('div');
        info.forEach(function (elem) {
          divInfo.appendChild(elem);
        });
        divInfo.style.display = 'none';

        var divInfoIcon = document.createElement('span');
        divInfoIcon.appendChild(document.createTextNode('round-off error'));
        divInfoIcon.className = 'result-info-icon';
        divInfoIcon.title = 'Click to see more info';
        divInfoIcon.onclick = function () {
          // toggle display
          divInfo.style.display = (divInfo.style.display == '') ? 'none' : '';
          resize();
        };

        preRes.appendChild(divInfoIcon);
        preRes.appendChild(divInfo);
      }
      dom.results.appendChild(preRes);

      scrollDown();
      dom.input.value = '';

      resize();
      // save();  // TODO: save expressions (first we need a method to restore the examples)
    }
  }

  function evalInput() {
    eval(dom.input.value);
  }

  create();
  load();
}

var container = document.getElementById('commandline');
if (container) {
  var editor = new CommandLineEditor({
    container: container,
    math: math
  });
}


/**
 * Test whether the child rect fits completely inside the parent rect.
 * @param {ClientRect} parent
 * @param {ClientRect} child
 * @param {number} margin
 */
function insideRect (parent, child, margin) {
  var _margin = margin !== undefined ? margin : 0;
  return child.left   - _margin >= parent.left
      && child.right  + _margin <= parent.right
      && child.top    - _margin >= parent.top
      && child.bottom + _margin <= parent.bottom;
}

function createDiv (text) {
  var div = document.createElement('div');
  div.appendChild(document.createTextNode(text));
  return div;
}

function createA (text, href, target) {
  var a = document.createElement('a');
  a.href = href;
  a.target = target || '';
  a.appendChild(document.createTextNode(text));

  return a;
}
</script>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This article describes how you can contribute or edit articles.
</p>
</div>
</div>
</div>
<p>If you want to contribute or edit an article do the following:</p>
<ol type="1">
<li>fork <a href="https://github.com/latex4ei/tex4tum">the repository on github</a> and clone it locally.</li>
<li>edit the corresponding <code>.md</code> file in the folder '<code>_article</code>' or create a new one.</li>
<li>once finished, push the changes to GitHub and create a pull request.</li>
</ol>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#our-format-syntax">Our Format Syntax</a></li>
<li><a href="#jekyll-and-liquid-tags">Jekyll and Liquid Tags</a></li>
<li><a href="#interactivity-htmlsvg--javascript">Interactivity: HTML/SVG + JavaScript</a></li>
<li><a href="#preview-your-article">Preview your article</a></li>
<li><a href="#list-of-todos">List of TODOs</a></li>
</ul>
<h2 id="our-format-syntax">Our Format Syntax</h2>
<p>The good news first: If you write text, it will be displayed as text. If you want to apply some text formatting you can use <a href="/markdown.html">Markdown</a>. Equations can be typset in TeX surrounded by <code>$</code> without spaces.</p>
<h3 id="file-structure">File structure</h3>
<p>Our file structure requires a YAML header (surrounded by <code>---</code>) that states a title and some keywords (tags) that can be used to find the article.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example22">
<i class='fa fa-chart-bar'></i> File example
</h5>
<div id='example22' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<pre><code> ---
 title: Inter-Integrated Circuit I²C
 tags: i2c, bus, SDA, SCK
 ---

 The first paragraph is the definition (hidden by default).

 After the first blank line comes the introduction.

 ## First Heading
 text</code></pre>
<p>
</div>
</div>
</div>
<p>The first paragraph will become the definition, which you should always provide. If you really want to omit a definition, indent the first paragraph by two spaces.</p>
<h3 id="markdown-for-basic-text">Markdown for Basic Text</h3>
<p>We use <a href="https://pandoc.org/MANUAL.html">Pandoc</a> as Markdown interpreter with the extension <code>footnotes</code> and <code>backtick_code_blocks</code>. Thus, the following formatting is possible</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>## Heading</code></td>
<td style="text-align: left;"><strong>Heading</strong></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>**bold**</code></td>
<td style="text-align: left;"><strong>bold</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>**italic**</code></td>
<td style="text-align: left;"><em>italic</em></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>[Link-Text](url)</code></td>
<td style="text-align: left;"><a href="url">Link-Text</a></td>
</tr>
</tbody>
</table>
<h3 id="own-parsers">Own Parsers</h3>
<p>We also use our own backend scripts to parse certain content categories, for example, to detect the definition paragraph of an article. Furthermore, we format examples, explanations, and legends. To format a paragraph as example you just need to write <code>Example:</code> before a paragraph. The paragraph is recognized by blank lines, so make sure that you have a blank line before the the <code>Example:</code> marker.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example23">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example23' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example Text and here is the code that produces it.</br> <code>Example: This is an example Text and here is the code that produces it.</code>
<p>
</div>
</div>
</div>
<p>Besides that you can also mark content using the Liquid Tags described below.</p>
<h3 id="equations-with-tex">Equations with TeX</h3>
<p>We use <a href="https://khan.github.io/KaTeX/">KaTeX</a> as TeX interpreter, such that you can typeset math equations simply using <code>$</code>. For example to display <span class="LaTeX">$\sqrt{x^2 + \alpha}$</span> as inline you write <code>$\sqrt{x^2 + \alpha}$</code>. Please note that there must <em>not</em> be a space between the <code>$</code> and your tex code! For display style equations, leave a blank line and surround your tex code by double <code>$$</code>s. You may optionally explain used symbols by a line starting with <code>with</code> or <code>where</code> that directly follows the equation.</p>
<p>The equation (you can click on it)</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$\oint_{\partial A} {{\mathbf{E}}} \cdot {\,\text{d}}{{\mathbf{s}}}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with electric field <span class="LaTeX">${{\mathbf{E}}}$</span>, surface <span class="LaTeX">$A$</span> and direction <span class="LaTeX">${{\mathbf{s}}}$</span></p>
</div>
</div>
</div>
<p>is written as</p>
<pre><code>$$\oint_{\partial A} \vec E \cdot \diff \vec s$$
with electric field $\vec E$, surface $A$ and direction $\vec s$</code></pre>
<p>Note: To define new LaTeX commands add them to <code>res/parser_util/tex_definition.md</code></p>
<h2 id="jekyll-and-liquid-tags">Jekyll and Liquid Tags</h2>
<p>Our site is generated using <a href="https://jekyllrb.com/">Jekyll</a> that manages every step of the conversion to the final <abbr title="Hypertext Markup Language" >HTML</abbr> files. Thus, Jekyll collects and converts the Markdown files by piping them through Pandoc. However, <strong>before</strong> the conversion, Jekyll allows to substitute dynamic content using Liquid Tags <code>{% include mycontent.md %}</code> and Liquid variables <code>{{ date }}</code>. These tags allow sophisticated generation of content using backend Ruby scripts.</p>
<p>We created some custom templates, liquid tags and plugins to simplify the development process. The following sections describe how to use these during contribution. Also check our <a href="demo.html">Demo Pages</a> for some features.</p>
<h3 id="images">Images</h3>
<p>To include Images use the following commands</p>
<p><strong>Figures</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include figure.html filename=<span class="st">&quot;complex.svg&quot;</span> description=<span class="st">&quot;Description goes here&quot;</span> width=<span class="st">&quot;50%&quot;</span> %}</code></pre></div>
<p>Output: Image in figure environment with image description</p>
<!--<p> Filename="complex.svg", path="/res/img/content-images/math/complex.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 50%;" src="/res/img/content-images/math/complex.svg" alt="Description goes here"/>
<figcaption class="figure-caption">
Description goes here
</figcaption>
</figure>
<p><strong>Inline Image</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> inlineimage capacitor_symbol.svg %}</code></pre></div>
<p>Output: Inline Image #<Jekyll::StaticFile:0x00561c5246e690>#<Jekyll::StaticFile:0x00561c5246df60>#<Jekyll::StaticFile:0x00561c528be240>#<Jekyll::StaticFile:0x00561c528be628>#<Jekyll::StaticFile:0x00561c528beec0>#<Jekyll::StaticFile:0x00561c528bf258>#<Jekyll::StaticFile:0x00561c528beb28>#<Jekyll::StaticFile:0x00561c528903b8>#<Jekyll::StaticFile:0x00561c52890ae8>#<Jekyll::StaticFile:0x00561c52890868>#<Jekyll::StaticFile:0x00561c52890610>#<Jekyll::StaticFile:0x00561c5246d5d8>#<Jekyll::StaticFile:0x00561c52d39e50>#<Jekyll::StaticFile:0x00561c52d3adf0>#<Jekyll::StaticFile:0x00561c52d3a080>#<Jekyll::StaticFile:0x00561c52d3b160>#<Jekyll::StaticFile:0x00561c52d3a328>#<Jekyll::StaticFile:0x00561c52d3a8c8>#<Jekyll::StaticFile:0x00561c52d3a5d0>#<Jekyll::StaticFile:0x00561c52d6ff78>#<Jekyll::StaticFile:0x00561c52d6fcf8>#<Jekyll::StaticFile:0x00561c52d701f8>#<Jekyll::StaticFile:0x00561c52e18bf0>#<Jekyll::StaticFile:0x00561c52e190f0>#<Jekyll::StaticFile:0x00561c52e13e70>#<Jekyll::StaticFile:0x00561c52e18128>#<Jekyll::StaticFile:0x00561c52e13b00>#<Jekyll::StaticFile:0x00561c52e183f8>#<Jekyll::StaticFile:0x00561c52e19938>#<Jekyll::StaticFile:0x00561c52e186c8>#<Jekyll::StaticFile:0x00561c52e13830>#<Jekyll::StaticFile:0x00561c52426de0>#<Jekyll::StaticFile:0x00561c52427420>#<Jekyll::StaticFile:0x00561c52426ae8>#<Jekyll::StaticFile:0x00561c5245f370>#<Jekyll::StaticFile:0x00561c523e6ce0>#<Jekyll::StaticFile:0x00561c523e3810>#<Jekyll::StaticFile:0x00561c52e1a068>#<Jekyll::StaticFile:0x00561c52e1a9c8>#<Jekyll::StaticFile:0x00561c52e19870>#<Jekyll::StaticFile:0x00561c52eec3d8>#<Jekyll::StaticFile:0x00561c52eec158>#<Jekyll::StaticFile:0x00561c52eec6d0>#<Jekyll::StaticFile:0x00561c52ee7e50>#<Jekyll::StaticFile:0x00561c52f84160>#<Jekyll::StaticFile:0x00561c52f7b308>#<Jekyll::StaticFile:0x00561c52f7bc90>#<Jekyll::StaticFile:0x00561c52f7b5b0>#<Jekyll::StaticFile:0x00561c52f7b9c0>#<Jekyll::StaticFile:0x00561c52f7bf10>#<Jekyll::StaticFile:0x00561c52fa5770>#<Jekyll::StaticFile:0x00561c52fa5a40>#<Jekyll::StaticFile:0x00561c52fa54f0>#<Jekyll::StaticFile:0x00561c52fa6440>#<Jekyll::StaticFile:0x00561c52fa51f8>#<Jekyll::StaticFile:0x00561c52fa5db0>#<Jekyll::StaticFile:0x00561c52fa66c0>#<Jekyll::StaticFile:0x00561c52fa60f8>#<Jekyll::StaticFile:0x00561c52fe6e28>#<Jekyll::StaticFile:0x00561c52fe7058>#<Jekyll::StaticFile:0x00561c52fe6ae0>#<Jekyll::StaticFile:0x00561c530160d8>#<Jekyll::StaticFile:0x00561c530166c8>#<Jekyll::StaticFile:0x00561c53014ff8>#<Jekyll::StaticFile:0x00561c53015d90>#<Jekyll::StaticFile:0x00561c53015368>#<Jekyll::StaticFile:0x00561c530163d0>#<Jekyll::StaticFile:0x00561c53014d50>#<Jekyll::StaticFile:0x00561c53015a70>#<Jekyll::StaticFile:0x00561c53015728>#<Jekyll::StaticFile:0x00561c530169e8>#<Jekyll::StaticFile:0x00561c53016d08>#<Jekyll::StaticFile:0x00561c53014120>#<Jekyll::StaticFile:0x00561c53014378>#<Jekyll::StaticFile:0x00561c52f24648>#<Jekyll::StaticFile:0x00561c52f242b0>#<Jekyll::StaticFile:0x00561c52f1afd0>#<Jekyll::StaticFile:0x00561c52f1bf98>#<Jekyll::StaticFile:0x00561c52f1ba98>#<Jekyll::StaticFile:0x00561c52e1a360>#<Jekyll::StaticFile:0x00561c52e1a658>#<Jekyll::StaticFile:0x00561c52e19b40>#<Jekyll::StaticFile:0x00561c52e19dc0>#<Jekyll::StaticFile:0x00561c52e1b328>#<Jekyll::StaticFile:0x00561c52e1be18>#<Jekyll::StaticFile:0x00561c52e1bb70>#<Jekyll::StaticFile:0x00561c52e1b648>#<Jekyll::StaticFile:0x00561c52e1b8c8>#<Jekyll::StaticFile:0x00561c52e22ce0>#<Jekyll::StaticFile:0x00561c52e236b8>#<Jekyll::StaticFile:0x00561c52e230c8>#<Jekyll::StaticFile:0x00561c52e20d50>#<Jekyll::StaticFile:0x00561c52e20ff8>#<Jekyll::StaticFile:0x00561c52e20030>#<Jekyll::StaticFile:0x00561c52e202b0>#<Jekyll::StaticFile:0x00561c52e217c8>#<Jekyll::StaticFile:0x00561c52e22c40>#<Jekyll::StaticFile:0x00561c52e21250>#<Jekyll::StaticFile:0x00561c52e239b0>#<Jekyll::StaticFile:0x00561c52e233e8>#<Jekyll::StaticFile:0x00561c52e20af8>#<Jekyll::StaticFile:0x00561c52e20580>#<Jekyll::StaticFile:0x00561c52e21de0>#<Jekyll::StaticFile:0x00561c52e22290>#<Jekyll::StaticFile:0x00561c52e20828>#<Jekyll::StaticFile:0x00561c52e22768>#<Jekyll::StaticFile:0x00561c52e1ac98>#<Jekyll::StaticFile:0x00561c52e19438>#<Jekyll::StaticFile:0x00561c51ac73a8>#<Jekyll::StaticFile:0x00561c51ac6b60>#<Jekyll::StaticFile:0x00561c51ac6f20>#<Jekyll::StaticFile:0x00561c51ac6700>#<Jekyll::StaticFile:0x00561c51ac7970>#<Jekyll::StaticFile:0x00561c51ad1b00>#<Jekyll::StaticFile:0x00561c51ad0f20>#<Jekyll::StaticFile:0x00561c51ad2ca8>#<Jekyll::StaticFile:0x00561c51ad0958>#<Jekyll::StaticFile:0x00561c51ad30b8>#<Jekyll::StaticFile:0x00561c51ad24d8>#<Jekyll::StaticFile:0x00561c51ad2960>#<Jekyll::StaticFile:0x00561c51ad1df8>#<Jekyll::StaticFile:0x00561c51ad1768>#<Jekyll::StaticFile:0x00561c51ad20f0>#<Jekyll::StaticFile:0x00561c51ad3518>#<Jekyll::StaticFile:0x00561c51ad13f8>#<Jekyll::StaticFile:0x00561c51ad6a10>#<Jekyll::StaticFile:0x00561c51ad73e8>#<Jekyll::StaticFile:0x00561c51ad4530>#<Jekyll::StaticFile:0x00561c51ad3dd8>#<Jekyll::StaticFile:0x00561c51ad39f0>#<Jekyll::StaticFile:0x00561c51ad5958>#<Jekyll::StaticFile:0x00561c51ad5480>#<Jekyll::StaticFile:0x00561c51ad5db8>#<Jekyll::StaticFile:0x00561c51ad49e0>#<Jekyll::StaticFile:0x00561c51ad63f8>#<Jekyll::StaticFile:0x00561c52e18920>#<Jekyll::StaticFile:0x00561c52160728>#<Jekyll::StaticFile:0x00561c52161330>#<Jekyll::StaticFile:0x00561c5217ee58>#<Jekyll::StaticFile:0x00561c521801e0>#<Jekyll::StaticFile:0x00561c52182828>#<Jekyll::StaticFile:0x00561c5217f5b0>#<Jekyll::StaticFile:0x00561c5217f240>#<Jekyll::StaticFile:0x00561c5217ea48>#<Jekyll::StaticFile:0x00561c521817c0>#<Jekyll::StaticFile:0x00561c52182d00>#<Jekyll::StaticFile:0x00561c52182918>#<Jekyll::StaticFile:0x00561c52182378>#<Jekyll::StaticFile:0x00561c5217f8f8>#<Jekyll::StaticFile:0x00561c5217fd08>#<Jekyll::StaticFile:0x00561c52181c48>#<Jekyll::StaticFile:0x00561c52183098>#<Jekyll::StaticFile:0x00561c52180578>#<Jekyll::StaticFile:0x00561c52180e88>#<Jekyll::StaticFile:0x00561c52160318>#<Jekyll::StaticFile:0x00561c52161f10>#<Jekyll::StaticFile:0x00561c521619c0>#<Jekyll::StaticFile:0x00561c52162b68>#<Jekyll::StaticFile:0x00561c52162500>#<Jekyll::StaticFile:0x00561c52162fa0>#<Jekyll::StaticFile:0x00561c52e13510>#<Jekyll::StaticFile:0x00561c52e131c8>#<Jekyll::StaticFile:0x00561c52e18e48>#<Jekyll::StaticFile:0x00561c523f74c8>#<Jekyll::StaticFile:0x00561c523fb500>#<Jekyll::StaticFile:0x00561c52d72c50>#<Jekyll::StaticFile:0x00561c52d72f70>#<Jekyll::StaticFile:0x00561c52d729d0>#<Jekyll::StaticFile:0x00561c52d70ce8>#<Jekyll::StaticFile:0x00561c52d71328>#<Jekyll::StaticFile:0x00561c52d718f0>#<Jekyll::StaticFile:0x00561c52d709f0>#<Jekyll::StaticFile:0x00561c52d72110>#<Jekyll::StaticFile:0x00561c52d71620>#<Jekyll::StaticFile:0x00561c52d70630>#<Jekyll::StaticFile:0x00561c52d70fe0>#<Jekyll::StaticFile:0x00561c52d71cd8>#<Jekyll::StaticFile:0x00561c52d724d0>#<Jekyll::StaticFile:0x00561c52d2b170>#<Jekyll::StaticFile:0x00561c52d2af18>#<Jekyll::StaticFile:0x00561c52d2ac20>#<Jekyll::StaticFile:0x00561c5293e148>#<Jekyll::StaticFile:0x00561c52934d50>#<Jekyll::StaticFile:0x00561c5293d9c8>#<Jekyll::StaticFile:0x00561c52932e60>#<Jekyll::StaticFile:0x00561c52937b18>#<Jekyll::StaticFile:0x00561c52935e30>#<Jekyll::StaticFile:0x00561c529416b8>#<Jekyll::StaticFile:0x00561c5293d108>#<Jekyll::StaticFile:0x00561c5293ea58>#<Jekyll::StaticFile:0x00561c52932be0>#<Jekyll::StaticFile:0x00561c5293c0f0>#<Jekyll::StaticFile:0x00561c5293fb60>#<Jekyll::StaticFile:0x00561c52933158>#<Jekyll::StaticFile:0x00561c52941b90>#<Jekyll::StaticFile:0x00561c52930bb0>#<Jekyll::StaticFile:0x00561c5293f2f0>#<Jekyll::StaticFile:0x00561c52932690>#<Jekyll::StaticFile:0x00561c5293c3e8>#<Jekyll::StaticFile:0x00561c52937438>#<Jekyll::StaticFile:0x00561c5293f8b8>#<Jekyll::StaticFile:0x00561c52931588>#<Jekyll::StaticFile:0x00561c529320f0>#<Jekyll::StaticFile:0x00561c529318f8>#<Jekyll::StaticFile:0x00561c52940510>#<Jekyll::StaticFile:0x00561c5293ed78>#<Jekyll::StaticFile:0x00561c529402b8>#<Jekyll::StaticFile:0x00561c52934f80>#<Jekyll::StaticFile:0x00561c52931e98>#<Jekyll::StaticFile:0x00561c52936588>#<Jekyll::StaticFile:0x00561c529420b8>#<Jekyll::StaticFile:0x00561c52932960>#<Jekyll::StaticFile:0x00561c52934850>#<Jekyll::StaticFile:0x00561c52936a60>#<Jekyll::StaticFile:0x00561c52935bb0>#<Jekyll::StaticFile:0x00561c5293e738>#<Jekyll::StaticFile:0x00561c52935728>#<Jekyll::StaticFile:0x00561c52933680>#<Jekyll::StaticFile:0x00561c5293eff8>#<Jekyll::StaticFile:0x00561c52936088>#<Jekyll::StaticFile:0x00561c529339c8>#<Jekyll::StaticFile:0x00561c52936808>#<Jekyll::StaticFile:0x00561c52931268>#<Jekyll::StaticFile:0x00561c52933c98>#<Jekyll::StaticFile:0x00561c52941e60>#<Jekyll::StaticFile:0x00561c52935980>#<Jekyll::StaticFile:0x00561c52932438>#<Jekyll::StaticFile:0x00561c5293de50>#<Jekyll::StaticFile:0x00561c529422e8>#<Jekyll::StaticFile:0x00561c529418e8>#<Jekyll::StaticFile:0x00561c52941438>#<Jekyll::StaticFile:0x00561c529333b0>#<Jekyll::StaticFile:0x00561c5293fef8>#<Jekyll::StaticFile:0x00561c52937668>#<Jekyll::StaticFile:0x00561c5293cc08>#<Jekyll::StaticFile:0x00561c5293e3c8>#<Jekyll::StaticFile:0x00561c52936ce0>#<Jekyll::StaticFile:0x00561c529345f8>#<Jekyll::StaticFile:0x00561c529378c0>#<Jekyll::StaticFile:0x00561c529371b8>#<Jekyll::StaticFile:0x00561c52941190>#<Jekyll::StaticFile:0x00561c52936330>#<Jekyll::StaticFile:0x00561c52937d98>#<Jekyll::StaticFile:0x00561c52934350>#<Jekyll::StaticFile:0x00561c52936f60>#<Jekyll::StaticFile:0x00561c52933ef0>#<Jekyll::StaticFile:0x00561c52945ad8>#<Jekyll::StaticFile:0x00561c52943df0>#<Jekyll::StaticFile:0x00561c52945d08>#<Jekyll::StaticFile:0x00561c52943710>#<Jekyll::StaticFile:0x00561c529451f0>#<Jekyll::StaticFile:0x00561c529434e0>#<Jekyll::StaticFile:0x00561c52942630>#<Jekyll::StaticFile:0x00561c52944b60>#<Jekyll::StaticFile:0x00561c52942ab8>#<Jekyll::StaticFile:0x00561c52944fe8>#<Jekyll::StaticFile:0x00561c529456a0>#<Jekyll::StaticFile:0x00561c52944db8>#<Jekyll::StaticFile:0x00561c529445c0>#<Jekyll::StaticFile:0x00561c52944890>#<Jekyll::StaticFile:0x00561c529458a8>#<Jekyll::StaticFile:0x00561c52945fb0>#<Jekyll::StaticFile:0x00561c529428b0>#<Jekyll::StaticFile:0x00561c52945470>#<Jekyll::StaticFile:0x00561c52944098>#<Jekyll::StaticFile:0x00561c52942d10>#<Jekyll::StaticFile:0x00561c529431e8>#<Jekyll::StaticFile:0x00561c529407e0>#<Jekyll::StaticFile:0x00561c5293f5c0>#<Jekyll::StaticFile:0x00561c52930f20>#<Jekyll::StaticFile:0x00561c52934af8>#<Jekyll::StaticFile:0x00561c52940e70>#<Jekyll::StaticFile:0x00561c52935250>#<Jekyll::StaticFile:0x00561c5293d590>#<Jekyll::StaticFile:0x00561c52931c68>#<Jekyll::StaticFile:0x00561c52940a38>#<Jekyll::StaticFile:0x00561c52935480>#<Jekyll::StaticFile:0x00561c52cfa3e0>#<Jekyll::StaticFile:0x00561c52cfa020></p>
<p><strong>SVG Objects</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include svg-object.html width=<span class="st">&quot;18em&quot;</span> id=<span class="st">&quot;RC_obj&quot;</span> filename=<span class="st">&quot;rc.svg&quot;</span> description=<span class="st">&quot;Circuit of low-pass filter&quot;</span> %}</code></pre></div>
Output: SVG Object
<figure>
<object class="img-fluid" id="RC_obj" data="res/img/dynamic-images/rc.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="code-listings">Code Listings</h3>
<p>Verbatime code can be placed inside backticks, e.g. `code` is displayed as <code>code</code>. If you want to highlight code put it in a block of three backticks. Directly after the backticks you can specify the language.</p>
<figure class="highlight">
<pre><code class="language-c" data-lang="c"><span></span><span class="lineno">1 </span><span class="err">```</span><span class="n">c</span>
<span class="lineno">2 </span><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
<span class="lineno">3 </span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World&quot;</span><span class="p">);</span>
<span class="lineno">4 </span><span class="p">}</span>
<span class="lineno">5 </span><span class="err">```</span></code></pre>
</figure>
<p>As an alternative we also support advanced syntax highlighting using the following liquid tag</p>
<pre><code>{% highlight c linenos %}
int main() {
    if (a &lt; 3){
        printf(&quot;Hello World&quot;);
    }
}
{% endhighlight %}
</code></pre>
<h3 id="acronyms">Acronyms</h3>
<p>Acronyms, such as AES, are parsed and linked automatically. If you want to add a new abbreviation just add it to <code>res/parser_util/abbreviations.md</code>. The structure should look like this</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">*</span>[AES]: Advanced Encryption Standard</code></pre></div>
<h3 id="content-categories">Content Categories</h3>
<p>We currently support four special categories of content, which visibility is influenced via interactions or the options (see <a href="demo.html">Demo Page</a>)</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> definition %}<span class="ex">text</span>{% enddefinition %}
{<span class="ex">%</span> example %}<span class="ex">text</span>{% endexample %}
{<span class="ex">%</span> explanation %}<span class="ex">text</span>{% endexplanation %}
{<span class="ex">%</span> legend %}<span class="ex">text</span>{% endlegend %}</code></pre></div>
<h3 id="emphbox">Emphbox</h3>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> emphbox %}<span class="ex">Content</span> in box{% endemphbox %}</code></pre></div>
Output:
<div class='card border-danger'>
<div class='card-body'>
<p class='card-text text-center'>
Content in box
<p>
</div>
</div>
<h2 id="interactivity-htmlsvg-javascript">Interactivity: HTML/SVG + JavaScript</h2>
<p>To create interactive content you can directly embedd <abbr title="Hypertext Markup Language" >HTML</abbr> tags and JavaScript code. An easy to use framework is under development.</p>
<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html">Resistance R = <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;R_val&quot;</span><span class="ot"> onclick=</span><span class="st">&quot;askValue(this.id)&quot;</span><span class="kw">&gt;</span>10k<span class="kw">&lt;/span&gt;</span>Ω

<span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;text/javascript&quot;</span><span class="kw">&gt;</span>
 <span class="kw">var</span> R1 <span class="op">=</span> <span class="at">getValue</span>( <span class="va">document</span>.<span class="at">getElementById</span>(<span class="st">&quot;R_val&quot;</span>).<span class="at">textContent</span> )<span class="op">;</span>
<span class="kw">&lt;/script&gt;</span></code></pre></div>
<p>Please ensure that you only have one <code>&lt;script&gt;</code> section <em>at the end</em> of the article! Otherwise our generator scripts might destroy your code.</p>
<h2 id="preview-your-article">Preview your article</h2>
<p>When you are done editing, you can preview your article. Follow the instruction of the <a href="https://github.com/latex4ei/tex4tum/blob/master/README.md#contribution">README</a> to install all dependencies</p>
<p>Run the local server and browse to http://localhost:4000/ with</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">make</span> run</code></pre></div>
<h2 id="list-of-todos">List of TODOs</h2>
<p>All lines starting with TODO will be added to the following TODO list.</p>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of RAM modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust JS library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This article describes how you can contribute or edit articles.
</p>
</div>
</div>
</div>
<p>If you want to contribute or edit an article do the following:</p>
<ol type="1">
<li>fork <a href="https://github.com/latex4ei/tex4tum">the repository on github</a> and clone it locally.</li>
<li>edit the corresponding <code>.md</code> file in the folder '<code>_article</code>' or create a new one.</li>
<li>once finished, push the changes to GitHub and create a pull request.</li>
</ol>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#our-format-syntax">Our Format Syntax</a></li>
<li><a href="#jekyll-and-liquid-tags">Jekyll and Liquid Tags</a></li>
<li><a href="#interactivity-htmlsvg--javascript">Interactivity: HTML/SVG + JavaScript</a></li>
<li><a href="#preview-your-article">Preview your article</a></li>
<li><a href="#list-of-todos">List of TODOs</a></li>
</ul>
<h2 id="our-format-syntax">Our Format Syntax</h2>
<p>The good news first: If you write text, it will be displayed as text. If you want to apply some text formatting you can use <a href="/markdown.html">Markdown</a>. Equations can be typset in TeX surrounded by <code>$</code> without spaces.</p>
<h3 id="file-structure">File structure</h3>
<p>Our file structure requires a YAML header (surrounded by <code>---</code>) that states a title and some keywords (tags) that can be used to find the article.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example22">
<i class='fa fa-chart-bar'></i> File example
</h5>
<div id='example22' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<pre><code> ---
 title: Inter-Integrated Circuit I²C
 tags: i2c, bus, SDA, SCK
 ---

 The first paragraph is the definition (hidden by default).

 After the first blank line comes the introduction.

 ## First Heading
 text</code></pre>
<p>
</div>
</div>
</div>
<p>The first paragraph will become the definition, which you should always provide. If you really want to omit a definition, indent the first paragraph by two spaces.</p>
<h3 id="markdown-for-basic-text">Markdown for Basic Text</h3>
<p>We use <a href="https://pandoc.org/MANUAL.html">Pandoc</a> as Markdown interpreter with the extension <code>footnotes</code> and <code>backtick_code_blocks</code>. Thus, the following formatting is possible</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>## Heading</code></td>
<td style="text-align: left;"><strong>Heading</strong></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>**bold**</code></td>
<td style="text-align: left;"><strong>bold</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>**italic**</code></td>
<td style="text-align: left;"><em>italic</em></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>[Link-Text](url)</code></td>
<td style="text-align: left;"><a href="url">Link-Text</a></td>
</tr>
</tbody>
</table>
<h3 id="own-parsers">Own Parsers</h3>
<p>We also use our own backend scripts to parse certain content categories, for example, to detect the definition paragraph of an article. Furthermore, we format examples, explanations, and legends. To format a paragraph as example you just need to write <code>Example:</code> before a paragraph. The paragraph is recognized by blank lines, so make sure that you have a blank line before the the <code>Example:</code> marker.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example23">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example23' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example Text and here is the code that produces it.</br> <code>Example: This is an example Text and here is the code that produces it.</code>
<p>
</div>
</div>
</div>
<p>Besides that you can also mark content using the Liquid Tags described below.</p>
<h3 id="equations-with-tex">Equations with TeX</h3>
<p>We use <a href="https://khan.github.io/KaTeX/">KaTeX</a> as TeX interpreter, such that you can typeset math equations simply using <code>$</code>. For example to display <span class="LaTeX">$\sqrt{x^2 + \alpha}$</span> as inline you write <code>$\sqrt{x^2 + \alpha}$</code>. Please note that there must <em>not</em> be a space between the <code>$</code> and your tex code! For display style equations, leave a blank line and surround your tex code by double <code>$$</code>s. You may optionally explain used symbols by a line starting with <code>with</code> or <code>where</code> that directly follows the equation.</p>
<p>The equation (you can click on it)</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$\oint_{\partial A} {{\mathbf{E}}} \cdot {\,\text{d}}{{\mathbf{s}}}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with electric field <span class="LaTeX">${{\mathbf{E}}}$</span>, surface <span class="LaTeX">$A$</span> and direction <span class="LaTeX">${{\mathbf{s}}}$</span></p>
</div>
</div>
</div>
<p>is written as</p>
<pre><code>$$\oint_{\partial A} \vec E \cdot \diff \vec s$$
with electric field $\vec E$, surface $A$ and direction $\vec s$</code></pre>
<p>Note: To define new LaTeX commands add them to <code>res/parser_util/tex_definition.md</code></p>
<h2 id="jekyll-and-liquid-tags">Jekyll and Liquid Tags</h2>
<p>Our site is generated using <a href="https://jekyllrb.com/">Jekyll</a> that manages every step of the conversion to the final <abbr title="Hypertext Markup Language" >HTML</abbr> files. Thus, Jekyll collects and converts the Markdown files by piping them through Pandoc. However, <strong>before</strong> the conversion, Jekyll allows to substitute dynamic content using Liquid Tags <code>{% include mycontent.md %}</code> and Liquid variables <code>{{ date }}</code>. These tags allow sophisticated generation of content using backend Ruby scripts.</p>
<p>We created some custom templates, liquid tags and plugins to simplify the development process. The following sections describe how to use these during contribution. Also check our <a href="demo.html">Demo Pages</a> for some features.</p>
<h3 id="images">Images</h3>
<p>To include Images use the following commands</p>
<p><strong>Figures</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include figure.html filename=<span class="st">&quot;complex.svg&quot;</span> description=<span class="st">&quot;Description goes here&quot;</span> width=<span class="st">&quot;50%&quot;</span> %}</code></pre></div>
<p>Output: Image in figure environment with image description</p>
<!--<p> Filename="complex.svg", path="/res/img/content-images/math/complex.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 50%;" src="/res/img/content-images/math/complex.svg" alt="Description goes here"/>
<figcaption class="figure-caption">
Description goes here
</figcaption>
</figure>
<p><strong>Inline Image</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> inlineimage capacitor_symbol.svg %}</code></pre></div>
<p>Output: Inline Image #<Jekyll::StaticFile:0x00561c5246e690>#<Jekyll::StaticFile:0x00561c5246df60>#<Jekyll::StaticFile:0x00561c528be240>#<Jekyll::StaticFile:0x00561c528be628>#<Jekyll::StaticFile:0x00561c528beec0>#<Jekyll::StaticFile:0x00561c528bf258>#<Jekyll::StaticFile:0x00561c528beb28>#<Jekyll::StaticFile:0x00561c528903b8>#<Jekyll::StaticFile:0x00561c52890ae8>#<Jekyll::StaticFile:0x00561c52890868>#<Jekyll::StaticFile:0x00561c52890610>#<Jekyll::StaticFile:0x00561c5246d5d8>#<Jekyll::StaticFile:0x00561c52d39e50>#<Jekyll::StaticFile:0x00561c52d3adf0>#<Jekyll::StaticFile:0x00561c52d3a080>#<Jekyll::StaticFile:0x00561c52d3b160>#<Jekyll::StaticFile:0x00561c52d3a328>#<Jekyll::StaticFile:0x00561c52d3a8c8>#<Jekyll::StaticFile:0x00561c52d3a5d0>#<Jekyll::StaticFile:0x00561c52d6ff78>#<Jekyll::StaticFile:0x00561c52d6fcf8>#<Jekyll::StaticFile:0x00561c52d701f8>#<Jekyll::StaticFile:0x00561c52e18bf0>#<Jekyll::StaticFile:0x00561c52e190f0>#<Jekyll::StaticFile:0x00561c52e13e70>#<Jekyll::StaticFile:0x00561c52e18128>#<Jekyll::StaticFile:0x00561c52e13b00>#<Jekyll::StaticFile:0x00561c52e183f8>#<Jekyll::StaticFile:0x00561c52e19938>#<Jekyll::StaticFile:0x00561c52e186c8>#<Jekyll::StaticFile:0x00561c52e13830>#<Jekyll::StaticFile:0x00561c52426de0>#<Jekyll::StaticFile:0x00561c52427420>#<Jekyll::StaticFile:0x00561c52426ae8>#<Jekyll::StaticFile:0x00561c5245f370>#<Jekyll::StaticFile:0x00561c523e6ce0>#<Jekyll::StaticFile:0x00561c523e3810>#<Jekyll::StaticFile:0x00561c52e1a068>#<Jekyll::StaticFile:0x00561c52e1a9c8>#<Jekyll::StaticFile:0x00561c52e19870>#<Jekyll::StaticFile:0x00561c52eec3d8>#<Jekyll::StaticFile:0x00561c52eec158>#<Jekyll::StaticFile:0x00561c52eec6d0>#<Jekyll::StaticFile:0x00561c52ee7e50>#<Jekyll::StaticFile:0x00561c52f84160>#<Jekyll::StaticFile:0x00561c52f7b308>#<Jekyll::StaticFile:0x00561c52f7bc90>#<Jekyll::StaticFile:0x00561c52f7b5b0>#<Jekyll::StaticFile:0x00561c52f7b9c0>#<Jekyll::StaticFile:0x00561c52f7bf10>#<Jekyll::StaticFile:0x00561c52fa5770>#<Jekyll::StaticFile:0x00561c52fa5a40>#<Jekyll::StaticFile:0x00561c52fa54f0>#<Jekyll::StaticFile:0x00561c52fa6440>#<Jekyll::StaticFile:0x00561c52fa51f8>#<Jekyll::StaticFile:0x00561c52fa5db0>#<Jekyll::StaticFile:0x00561c52fa66c0>#<Jekyll::StaticFile:0x00561c52fa60f8>#<Jekyll::StaticFile:0x00561c52fe6e28>#<Jekyll::StaticFile:0x00561c52fe7058>#<Jekyll::StaticFile:0x00561c52fe6ae0>#<Jekyll::StaticFile:0x00561c530160d8>#<Jekyll::StaticFile:0x00561c530166c8>#<Jekyll::StaticFile:0x00561c53014ff8>#<Jekyll::StaticFile:0x00561c53015d90>#<Jekyll::StaticFile:0x00561c53015368>#<Jekyll::StaticFile:0x00561c530163d0>#<Jekyll::StaticFile:0x00561c53014d50>#<Jekyll::StaticFile:0x00561c53015a70>#<Jekyll::StaticFile:0x00561c53015728>#<Jekyll::StaticFile:0x00561c530169e8>#<Jekyll::StaticFile:0x00561c53016d08>#<Jekyll::StaticFile:0x00561c53014120>#<Jekyll::StaticFile:0x00561c53014378>#<Jekyll::StaticFile:0x00561c52f24648>#<Jekyll::StaticFile:0x00561c52f242b0>#<Jekyll::StaticFile:0x00561c52f1afd0>#<Jekyll::StaticFile:0x00561c52f1bf98>#<Jekyll::StaticFile:0x00561c52f1ba98>#<Jekyll::StaticFile:0x00561c52e1a360>#<Jekyll::StaticFile:0x00561c52e1a658>#<Jekyll::StaticFile:0x00561c52e19b40>#<Jekyll::StaticFile:0x00561c52e19dc0>#<Jekyll::StaticFile:0x00561c52e1b328>#<Jekyll::StaticFile:0x00561c52e1be18>#<Jekyll::StaticFile:0x00561c52e1bb70>#<Jekyll::StaticFile:0x00561c52e1b648>#<Jekyll::StaticFile:0x00561c52e1b8c8>#<Jekyll::StaticFile:0x00561c52e22ce0>#<Jekyll::StaticFile:0x00561c52e236b8>#<Jekyll::StaticFile:0x00561c52e230c8>#<Jekyll::StaticFile:0x00561c52e20d50>#<Jekyll::StaticFile:0x00561c52e20ff8>#<Jekyll::StaticFile:0x00561c52e20030>#<Jekyll::StaticFile:0x00561c52e202b0>#<Jekyll::StaticFile:0x00561c52e217c8>#<Jekyll::StaticFile:0x00561c52e22c40>#<Jekyll::StaticFile:0x00561c52e21250>#<Jekyll::StaticFile:0x00561c52e239b0>#<Jekyll::StaticFile:0x00561c52e233e8>#<Jekyll::StaticFile:0x00561c52e20af8>#<Jekyll::StaticFile:0x00561c52e20580>#<Jekyll::StaticFile:0x00561c52e21de0>#<Jekyll::StaticFile:0x00561c52e22290>#<Jekyll::StaticFile:0x00561c52e20828>#<Jekyll::StaticFile:0x00561c52e22768>#<Jekyll::StaticFile:0x00561c52e1ac98>#<Jekyll::StaticFile:0x00561c52e19438>#<Jekyll::StaticFile:0x00561c51ac73a8>#<Jekyll::StaticFile:0x00561c51ac6b60>#<Jekyll::StaticFile:0x00561c51ac6f20>#<Jekyll::StaticFile:0x00561c51ac6700>#<Jekyll::StaticFile:0x00561c51ac7970>#<Jekyll::StaticFile:0x00561c51ad1b00>#<Jekyll::StaticFile:0x00561c51ad0f20>#<Jekyll::StaticFile:0x00561c51ad2ca8>#<Jekyll::StaticFile:0x00561c51ad0958>#<Jekyll::StaticFile:0x00561c51ad30b8>#<Jekyll::StaticFile:0x00561c51ad24d8>#<Jekyll::StaticFile:0x00561c51ad2960>#<Jekyll::StaticFile:0x00561c51ad1df8>#<Jekyll::StaticFile:0x00561c51ad1768>#<Jekyll::StaticFile:0x00561c51ad20f0>#<Jekyll::StaticFile:0x00561c51ad3518>#<Jekyll::StaticFile:0x00561c51ad13f8>#<Jekyll::StaticFile:0x00561c51ad6a10>#<Jekyll::StaticFile:0x00561c51ad73e8>#<Jekyll::StaticFile:0x00561c51ad4530>#<Jekyll::StaticFile:0x00561c51ad3dd8>#<Jekyll::StaticFile:0x00561c51ad39f0>#<Jekyll::StaticFile:0x00561c51ad5958>#<Jekyll::StaticFile:0x00561c51ad5480>#<Jekyll::StaticFile:0x00561c51ad5db8>#<Jekyll::StaticFile:0x00561c51ad49e0>#<Jekyll::StaticFile:0x00561c51ad63f8>#<Jekyll::StaticFile:0x00561c52e18920>#<Jekyll::StaticFile:0x00561c52160728>#<Jekyll::StaticFile:0x00561c52161330>#<Jekyll::StaticFile:0x00561c5217ee58>#<Jekyll::StaticFile:0x00561c521801e0>#<Jekyll::StaticFile:0x00561c52182828>#<Jekyll::StaticFile:0x00561c5217f5b0>#<Jekyll::StaticFile:0x00561c5217f240>#<Jekyll::StaticFile:0x00561c5217ea48>#<Jekyll::StaticFile:0x00561c521817c0>#<Jekyll::StaticFile:0x00561c52182d00>#<Jekyll::StaticFile:0x00561c52182918>#<Jekyll::StaticFile:0x00561c52182378>#<Jekyll::StaticFile:0x00561c5217f8f8>#<Jekyll::StaticFile:0x00561c5217fd08>#<Jekyll::StaticFile:0x00561c52181c48>#<Jekyll::StaticFile:0x00561c52183098>#<Jekyll::StaticFile:0x00561c52180578>#<Jekyll::StaticFile:0x00561c52180e88>#<Jekyll::StaticFile:0x00561c52160318>#<Jekyll::StaticFile:0x00561c52161f10>#<Jekyll::StaticFile:0x00561c521619c0>#<Jekyll::StaticFile:0x00561c52162b68>#<Jekyll::StaticFile:0x00561c52162500>#<Jekyll::StaticFile:0x00561c52162fa0>#<Jekyll::StaticFile:0x00561c52e13510>#<Jekyll::StaticFile:0x00561c52e131c8>#<Jekyll::StaticFile:0x00561c52e18e48>#<Jekyll::StaticFile:0x00561c523f74c8>#<Jekyll::StaticFile:0x00561c523fb500>#<Jekyll::StaticFile:0x00561c52d72c50>#<Jekyll::StaticFile:0x00561c52d72f70>#<Jekyll::StaticFile:0x00561c52d729d0>#<Jekyll::StaticFile:0x00561c52d70ce8>#<Jekyll::StaticFile:0x00561c52d71328>#<Jekyll::StaticFile:0x00561c52d718f0>#<Jekyll::StaticFile:0x00561c52d709f0>#<Jekyll::StaticFile:0x00561c52d72110>#<Jekyll::StaticFile:0x00561c52d71620>#<Jekyll::StaticFile:0x00561c52d70630>#<Jekyll::StaticFile:0x00561c52d70fe0>#<Jekyll::StaticFile:0x00561c52d71cd8>#<Jekyll::StaticFile:0x00561c52d724d0>#<Jekyll::StaticFile:0x00561c52d2b170>#<Jekyll::StaticFile:0x00561c52d2af18>#<Jekyll::StaticFile:0x00561c52d2ac20>#<Jekyll::StaticFile:0x00561c5293e148>#<Jekyll::StaticFile:0x00561c52934d50>#<Jekyll::StaticFile:0x00561c5293d9c8>#<Jekyll::StaticFile:0x00561c52932e60>#<Jekyll::StaticFile:0x00561c52937b18>#<Jekyll::StaticFile:0x00561c52935e30>#<Jekyll::StaticFile:0x00561c529416b8>#<Jekyll::StaticFile:0x00561c5293d108>#<Jekyll::StaticFile:0x00561c5293ea58>#<Jekyll::StaticFile:0x00561c52932be0>#<Jekyll::StaticFile:0x00561c5293c0f0>#<Jekyll::StaticFile:0x00561c5293fb60>#<Jekyll::StaticFile:0x00561c52933158>#<Jekyll::StaticFile:0x00561c52941b90>#<Jekyll::StaticFile:0x00561c52930bb0>#<Jekyll::StaticFile:0x00561c5293f2f0>#<Jekyll::StaticFile:0x00561c52932690>#<Jekyll::StaticFile:0x00561c5293c3e8>#<Jekyll::StaticFile:0x00561c52937438>#<Jekyll::StaticFile:0x00561c5293f8b8>#<Jekyll::StaticFile:0x00561c52931588>#<Jekyll::StaticFile:0x00561c529320f0>#<Jekyll::StaticFile:0x00561c529318f8>#<Jekyll::StaticFile:0x00561c52940510>#<Jekyll::StaticFile:0x00561c5293ed78>#<Jekyll::StaticFile:0x00561c529402b8>#<Jekyll::StaticFile:0x00561c52934f80>#<Jekyll::StaticFile:0x00561c52931e98>#<Jekyll::StaticFile:0x00561c52936588>#<Jekyll::StaticFile:0x00561c529420b8>#<Jekyll::StaticFile:0x00561c52932960>#<Jekyll::StaticFile:0x00561c52934850>#<Jekyll::StaticFile:0x00561c52936a60>#<Jekyll::StaticFile:0x00561c52935bb0>#<Jekyll::StaticFile:0x00561c5293e738>#<Jekyll::StaticFile:0x00561c52935728>#<Jekyll::StaticFile:0x00561c52933680>#<Jekyll::StaticFile:0x00561c5293eff8>#<Jekyll::StaticFile:0x00561c52936088>#<Jekyll::StaticFile:0x00561c529339c8>#<Jekyll::StaticFile:0x00561c52936808>#<Jekyll::StaticFile:0x00561c52931268>#<Jekyll::StaticFile:0x00561c52933c98>#<Jekyll::StaticFile:0x00561c52941e60>#<Jekyll::StaticFile:0x00561c52935980>#<Jekyll::StaticFile:0x00561c52932438>#<Jekyll::StaticFile:0x00561c5293de50>#<Jekyll::StaticFile:0x00561c529422e8>#<Jekyll::StaticFile:0x00561c529418e8>#<Jekyll::StaticFile:0x00561c52941438>#<Jekyll::StaticFile:0x00561c529333b0>#<Jekyll::StaticFile:0x00561c5293fef8>#<Jekyll::StaticFile:0x00561c52937668>#<Jekyll::StaticFile:0x00561c5293cc08>#<Jekyll::StaticFile:0x00561c5293e3c8>#<Jekyll::StaticFile:0x00561c52936ce0>#<Jekyll::StaticFile:0x00561c529345f8>#<Jekyll::StaticFile:0x00561c529378c0>#<Jekyll::StaticFile:0x00561c529371b8>#<Jekyll::StaticFile:0x00561c52941190>#<Jekyll::StaticFile:0x00561c52936330>#<Jekyll::StaticFile:0x00561c52937d98>#<Jekyll::StaticFile:0x00561c52934350>#<Jekyll::StaticFile:0x00561c52936f60>#<Jekyll::StaticFile:0x00561c52933ef0>#<Jekyll::StaticFile:0x00561c52945ad8>#<Jekyll::StaticFile:0x00561c52943df0>#<Jekyll::StaticFile:0x00561c52945d08>#<Jekyll::StaticFile:0x00561c52943710>#<Jekyll::StaticFile:0x00561c529451f0>#<Jekyll::StaticFile:0x00561c529434e0>#<Jekyll::StaticFile:0x00561c52942630>#<Jekyll::StaticFile:0x00561c52944b60>#<Jekyll::StaticFile:0x00561c52942ab8>#<Jekyll::StaticFile:0x00561c52944fe8>#<Jekyll::StaticFile:0x00561c529456a0>#<Jekyll::StaticFile:0x00561c52944db8>#<Jekyll::StaticFile:0x00561c529445c0>#<Jekyll::StaticFile:0x00561c52944890>#<Jekyll::StaticFile:0x00561c529458a8>#<Jekyll::StaticFile:0x00561c52945fb0>#<Jekyll::StaticFile:0x00561c529428b0>#<Jekyll::StaticFile:0x00561c52945470>#<Jekyll::StaticFile:0x00561c52944098>#<Jekyll::StaticFile:0x00561c52942d10>#<Jekyll::StaticFile:0x00561c529431e8>#<Jekyll::StaticFile:0x00561c529407e0>#<Jekyll::StaticFile:0x00561c5293f5c0>#<Jekyll::StaticFile:0x00561c52930f20>#<Jekyll::StaticFile:0x00561c52934af8>#<Jekyll::StaticFile:0x00561c52940e70>#<Jekyll::StaticFile:0x00561c52935250>#<Jekyll::StaticFile:0x00561c5293d590>#<Jekyll::StaticFile:0x00561c52931c68>#<Jekyll::StaticFile:0x00561c52940a38>#<Jekyll::StaticFile:0x00561c52935480>#<Jekyll::StaticFile:0x00561c52cfa3e0>#<Jekyll::StaticFile:0x00561c52cfa020></p>
<p><strong>SVG Objects</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include svg-object.html width=<span class="st">&quot;18em&quot;</span> id=<span class="st">&quot;RC_obj&quot;</span> filename=<span class="st">&quot;rc.svg&quot;</span> description=<span class="st">&quot;Circuit of low-pass filter&quot;</span> %}</code></pre></div>
Output: SVG Object
<figure>
<object class="img-fluid" id="RC_obj" data="res/img/dynamic-images/rc.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="code-listings">Code Listings</h3>
<p>Verbatime code can be placed inside backticks, e.g. `code` is displayed as <code>code</code>. If you want to highlight code put it in a block of three backticks. Directly after the backticks you can specify the language.</p>
<figure class="highlight">
<pre><code class="language-c" data-lang="c"><span></span><span class="lineno">1 </span><span class="err">```</span><span class="n">c</span>
<span class="lineno">2 </span><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
<span class="lineno">3 </span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World&quot;</span><span class="p">);</span>
<span class="lineno">4 </span><span class="p">}</span>
<span class="lineno">5 </span><span class="err">```</span></code></pre>
</figure>
<p>As an alternative we also support advanced syntax highlighting using the following liquid tag</p>
<pre><code>{% highlight c linenos %}
int main() {
    if (a &lt; 3){
        printf(&quot;Hello World&quot;);
    }
}
{% endhighlight %}
</code></pre>
<h3 id="acronyms">Acronyms</h3>
<p>Acronyms, such as AES, are parsed and linked automatically. If you want to add a new abbreviation just add it to <code>res/parser_util/abbreviations.md</code>. The structure should look like this</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">*</span>[AES]: Advanced Encryption Standard</code></pre></div>
<h3 id="content-categories">Content Categories</h3>
<p>We currently support four special categories of content, which visibility is influenced via interactions or the options (see <a href="demo.html">Demo Page</a>)</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> definition %}<span class="ex">text</span>{% enddefinition %}
{<span class="ex">%</span> example %}<span class="ex">text</span>{% endexample %}
{<span class="ex">%</span> explanation %}<span class="ex">text</span>{% endexplanation %}
{<span class="ex">%</span> legend %}<span class="ex">text</span>{% endlegend %}</code></pre></div>
<h3 id="emphbox">Emphbox</h3>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> emphbox %}<span class="ex">Content</span> in box{% endemphbox %}</code></pre></div>
Output:
<div class='card border-danger'>
<div class='card-body'>
<p class='card-text text-center'>
Content in box
<p>
</div>
</div>
<h2 id="interactivity-htmlsvg-javascript">Interactivity: HTML/SVG + JavaScript</h2>
<p>To create interactive content you can directly embedd <abbr title="Hypertext Markup Language" >HTML</abbr> tags and JavaScript code. An easy to use framework is under development.</p>
<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html">Resistance R = <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;R_val&quot;</span><span class="ot"> onclick=</span><span class="st">&quot;askValue(this.id)&quot;</span><span class="kw">&gt;</span>10k<span class="kw">&lt;/span&gt;</span>Ω

<span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;text/javascript&quot;</span><span class="kw">&gt;</span>
 <span class="kw">var</span> R1 <span class="op">=</span> <span class="at">getValue</span>( <span class="va">document</span>.<span class="at">getElementById</span>(<span class="st">&quot;R_val&quot;</span>).<span class="at">textContent</span> )<span class="op">;</span>
<span class="kw">&lt;/script&gt;</span></code></pre></div>
<p>Please ensure that you only have one <code>&lt;script&gt;</code> section <em>at the end</em> of the article! Otherwise our generator scripts might destroy your code.</p>
<h2 id="preview-your-article">Preview your article</h2>
<p>When you are done editing, you can preview your article. Follow the instruction of the <a href="https://github.com/latex4ei/tex4tum/blob/master/README.md#contribution">README</a> to install all dependencies</p>
<p>Run the local server and browse to http://localhost:4000/ with</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">make</span> run</code></pre></div>
<h2 id="list-of-todos">List of TODOs</h2>
<p>All lines starting with TODO will be added to the following TODO list.</p>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of RAM modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust <abbr title="JavaScript" >JS</abbr> library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This article describes how you can contribute or edit articles.
</p>
</div>
</div>
</div>
<p>If you want to contribute or edit an article do the following:</p>
<ol type="1">
<li>fork <a href="https://github.com/latex4ei/tex4tum">the repository on github</a> and clone it locally.</li>
<li>edit the corresponding <code>.md</code> file in the folder '<code>_article</code>' or create a new one.</li>
<li>once finished, push the changes to GitHub and create a pull request.</li>
</ol>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#our-format-syntax">Our Format Syntax</a></li>
<li><a href="#jekyll-and-liquid-tags">Jekyll and Liquid Tags</a></li>
<li><a href="#interactivity-htmlsvg--javascript">Interactivity: HTML/SVG + JavaScript</a></li>
<li><a href="#preview-your-article">Preview your article</a></li>
<li><a href="#list-of-todos">List of TODOs</a></li>
</ul>
<h2 id="our-format-syntax">Our Format Syntax</h2>
<p>The good news first: If you write text, it will be displayed as text. If you want to apply some text formatting you can use <a href="/markdown.html">Markdown</a>. Equations can be typset in TeX surrounded by <code>$</code> without spaces.</p>
<h3 id="file-structure">File structure</h3>
<p>Our file structure requires a YAML header (surrounded by <code>---</code>) that states a title and some keywords (tags) that can be used to find the article.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example22">
<i class='fa fa-chart-bar'></i> File example
</h5>
<div id='example22' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<pre><code> ---
 title: Inter-Integrated Circuit I²C
 tags: i2c, bus, SDA, SCK
 ---

 The first paragraph is the definition (hidden by default).

 After the first blank line comes the introduction.

 ## First Heading
 text</code></pre>
<p>
</div>
</div>
</div>
<p>The first paragraph will become the definition, which you should always provide. If you really want to omit a definition, indent the first paragraph by two spaces.</p>
<h3 id="markdown-for-basic-text">Markdown for Basic Text</h3>
<p>We use <a href="https://pandoc.org/MANUAL.html">Pandoc</a> as Markdown interpreter with the extension <code>footnotes</code> and <code>backtick_code_blocks</code>. Thus, the following formatting is possible</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>## Heading</code></td>
<td style="text-align: left;"><strong>Heading</strong></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>**bold**</code></td>
<td style="text-align: left;"><strong>bold</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>**italic**</code></td>
<td style="text-align: left;"><em>italic</em></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>[Link-Text](url)</code></td>
<td style="text-align: left;"><a href="url">Link-Text</a></td>
</tr>
</tbody>
</table>
<h3 id="own-parsers">Own Parsers</h3>
<p>We also use our own backend scripts to parse certain content categories, for example, to detect the definition paragraph of an article. Furthermore, we format examples, explanations, and legends. To format a paragraph as example you just need to write <code>Example:</code> before a paragraph. The paragraph is recognized by blank lines, so make sure that you have a blank line before the the <code>Example:</code> marker.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example23">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example23' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example Text and here is the code that produces it.</br> <code>Example: This is an example Text and here is the code that produces it.</code>
<p>
</div>
</div>
</div>
<p>Besides that you can also mark content using the Liquid Tags described below.</p>
<h3 id="equations-with-tex">Equations with TeX</h3>
<p>We use <a href="https://khan.github.io/KaTeX/">KaTeX</a> as TeX interpreter, such that you can typeset math equations simply using <code>$</code>. For example to display <span class="LaTeX">$\sqrt{x^2 + \alpha}$</span> as inline you write <code>$\sqrt{x^2 + \alpha}$</code>. Please note that there must <em>not</em> be a space between the <code>$</code> and your tex code! For display style equations, leave a blank line and surround your tex code by double <code>$$</code>s. You may optionally explain used symbols by a line starting with <code>with</code> or <code>where</code> that directly follows the equation.</p>
<p>The equation (you can click on it)</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$\oint_{\partial A} {{\mathbf{E}}} \cdot {\,\text{d}}{{\mathbf{s}}}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with electric field <span class="LaTeX">${{\mathbf{E}}}$</span>, surface <span class="LaTeX">$A$</span> and direction <span class="LaTeX">${{\mathbf{s}}}$</span></p>
</div>
</div>
</div>
<p>is written as</p>
<pre><code>$$\oint_{\partial A} \vec E \cdot \diff \vec s$$
with electric field $\vec E$, surface $A$ and direction $\vec s$</code></pre>
<p>Note: To define new LaTeX commands add them to <code>res/parser_util/tex_definition.md</code></p>
<h2 id="jekyll-and-liquid-tags">Jekyll and Liquid Tags</h2>
<p>Our site is generated using <a href="https://jekyllrb.com/">Jekyll</a> that manages every step of the conversion to the final <abbr title="Hypertext Markup Language" >HTML</abbr> files. Thus, Jekyll collects and converts the Markdown files by piping them through Pandoc. However, <strong>before</strong> the conversion, Jekyll allows to substitute dynamic content using Liquid Tags <code>{% include mycontent.md %}</code> and Liquid variables <code>{{ date }}</code>. These tags allow sophisticated generation of content using backend Ruby scripts.</p>
<p>We created some custom templates, liquid tags and plugins to simplify the development process. The following sections describe how to use these during contribution. Also check our <a href="demo.html">Demo Pages</a> for some features.</p>
<h3 id="images">Images</h3>
<p>To include Images use the following commands</p>
<p><strong>Figures</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include figure.html filename=<span class="st">&quot;complex.svg&quot;</span> description=<span class="st">&quot;Description goes here&quot;</span> width=<span class="st">&quot;50%&quot;</span> %}</code></pre></div>
<p>Output: Image in figure environment with image description</p>
<!--<p> Filename="complex.svg", path="/res/img/content-images/math/complex.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 50%;" src="/res/img/content-images/math/complex.svg" alt="Description goes here"/>
<figcaption class="figure-caption">
Description goes here
</figcaption>
</figure>
<p><strong>Inline Image</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> inlineimage capacitor_symbol.svg %}</code></pre></div>
<p>Output: Inline Image #<Jekyll::StaticFile:0x00561c5246e690>#<Jekyll::StaticFile:0x00561c5246df60>#<Jekyll::StaticFile:0x00561c528be240>#<Jekyll::StaticFile:0x00561c528be628>#<Jekyll::StaticFile:0x00561c528beec0>#<Jekyll::StaticFile:0x00561c528bf258>#<Jekyll::StaticFile:0x00561c528beb28>#<Jekyll::StaticFile:0x00561c528903b8>#<Jekyll::StaticFile:0x00561c52890ae8>#<Jekyll::StaticFile:0x00561c52890868>#<Jekyll::StaticFile:0x00561c52890610>#<Jekyll::StaticFile:0x00561c5246d5d8>#<Jekyll::StaticFile:0x00561c52d39e50>#<Jekyll::StaticFile:0x00561c52d3adf0>#<Jekyll::StaticFile:0x00561c52d3a080>#<Jekyll::StaticFile:0x00561c52d3b160>#<Jekyll::StaticFile:0x00561c52d3a328>#<Jekyll::StaticFile:0x00561c52d3a8c8>#<Jekyll::StaticFile:0x00561c52d3a5d0>#<Jekyll::StaticFile:0x00561c52d6ff78>#<Jekyll::StaticFile:0x00561c52d6fcf8>#<Jekyll::StaticFile:0x00561c52d701f8>#<Jekyll::StaticFile:0x00561c52e18bf0>#<Jekyll::StaticFile:0x00561c52e190f0>#<Jekyll::StaticFile:0x00561c52e13e70>#<Jekyll::StaticFile:0x00561c52e18128>#<Jekyll::StaticFile:0x00561c52e13b00>#<Jekyll::StaticFile:0x00561c52e183f8>#<Jekyll::StaticFile:0x00561c52e19938>#<Jekyll::StaticFile:0x00561c52e186c8>#<Jekyll::StaticFile:0x00561c52e13830>#<Jekyll::StaticFile:0x00561c52426de0>#<Jekyll::StaticFile:0x00561c52427420>#<Jekyll::StaticFile:0x00561c52426ae8>#<Jekyll::StaticFile:0x00561c5245f370>#<Jekyll::StaticFile:0x00561c523e6ce0>#<Jekyll::StaticFile:0x00561c523e3810>#<Jekyll::StaticFile:0x00561c52e1a068>#<Jekyll::StaticFile:0x00561c52e1a9c8>#<Jekyll::StaticFile:0x00561c52e19870>#<Jekyll::StaticFile:0x00561c52eec3d8>#<Jekyll::StaticFile:0x00561c52eec158>#<Jekyll::StaticFile:0x00561c52eec6d0>#<Jekyll::StaticFile:0x00561c52ee7e50>#<Jekyll::StaticFile:0x00561c52f84160>#<Jekyll::StaticFile:0x00561c52f7b308>#<Jekyll::StaticFile:0x00561c52f7bc90>#<Jekyll::StaticFile:0x00561c52f7b5b0>#<Jekyll::StaticFile:0x00561c52f7b9c0>#<Jekyll::StaticFile:0x00561c52f7bf10>#<Jekyll::StaticFile:0x00561c52fa5770>#<Jekyll::StaticFile:0x00561c52fa5a40>#<Jekyll::StaticFile:0x00561c52fa54f0>#<Jekyll::StaticFile:0x00561c52fa6440>#<Jekyll::StaticFile:0x00561c52fa51f8>#<Jekyll::StaticFile:0x00561c52fa5db0>#<Jekyll::StaticFile:0x00561c52fa66c0>#<Jekyll::StaticFile:0x00561c52fa60f8>#<Jekyll::StaticFile:0x00561c52fe6e28>#<Jekyll::StaticFile:0x00561c52fe7058>#<Jekyll::StaticFile:0x00561c52fe6ae0>#<Jekyll::StaticFile:0x00561c530160d8>#<Jekyll::StaticFile:0x00561c530166c8>#<Jekyll::StaticFile:0x00561c53014ff8>#<Jekyll::StaticFile:0x00561c53015d90>#<Jekyll::StaticFile:0x00561c53015368>#<Jekyll::StaticFile:0x00561c530163d0>#<Jekyll::StaticFile:0x00561c53014d50>#<Jekyll::StaticFile:0x00561c53015a70>#<Jekyll::StaticFile:0x00561c53015728>#<Jekyll::StaticFile:0x00561c530169e8>#<Jekyll::StaticFile:0x00561c53016d08>#<Jekyll::StaticFile:0x00561c53014120>#<Jekyll::StaticFile:0x00561c53014378>#<Jekyll::StaticFile:0x00561c52f24648>#<Jekyll::StaticFile:0x00561c52f242b0>#<Jekyll::StaticFile:0x00561c52f1afd0>#<Jekyll::StaticFile:0x00561c52f1bf98>#<Jekyll::StaticFile:0x00561c52f1ba98>#<Jekyll::StaticFile:0x00561c52e1a360>#<Jekyll::StaticFile:0x00561c52e1a658>#<Jekyll::StaticFile:0x00561c52e19b40>#<Jekyll::StaticFile:0x00561c52e19dc0>#<Jekyll::StaticFile:0x00561c52e1b328>#<Jekyll::StaticFile:0x00561c52e1be18>#<Jekyll::StaticFile:0x00561c52e1bb70>#<Jekyll::StaticFile:0x00561c52e1b648>#<Jekyll::StaticFile:0x00561c52e1b8c8>#<Jekyll::StaticFile:0x00561c52e22ce0>#<Jekyll::StaticFile:0x00561c52e236b8>#<Jekyll::StaticFile:0x00561c52e230c8>#<Jekyll::StaticFile:0x00561c52e20d50>#<Jekyll::StaticFile:0x00561c52e20ff8>#<Jekyll::StaticFile:0x00561c52e20030>#<Jekyll::StaticFile:0x00561c52e202b0>#<Jekyll::StaticFile:0x00561c52e217c8>#<Jekyll::StaticFile:0x00561c52e22c40>#<Jekyll::StaticFile:0x00561c52e21250>#<Jekyll::StaticFile:0x00561c52e239b0>#<Jekyll::StaticFile:0x00561c52e233e8>#<Jekyll::StaticFile:0x00561c52e20af8>#<Jekyll::StaticFile:0x00561c52e20580>#<Jekyll::StaticFile:0x00561c52e21de0>#<Jekyll::StaticFile:0x00561c52e22290>#<Jekyll::StaticFile:0x00561c52e20828>#<Jekyll::StaticFile:0x00561c52e22768>#<Jekyll::StaticFile:0x00561c52e1ac98>#<Jekyll::StaticFile:0x00561c52e19438>#<Jekyll::StaticFile:0x00561c51ac73a8>#<Jekyll::StaticFile:0x00561c51ac6b60>#<Jekyll::StaticFile:0x00561c51ac6f20>#<Jekyll::StaticFile:0x00561c51ac6700>#<Jekyll::StaticFile:0x00561c51ac7970>#<Jekyll::StaticFile:0x00561c51ad1b00>#<Jekyll::StaticFile:0x00561c51ad0f20>#<Jekyll::StaticFile:0x00561c51ad2ca8>#<Jekyll::StaticFile:0x00561c51ad0958>#<Jekyll::StaticFile:0x00561c51ad30b8>#<Jekyll::StaticFile:0x00561c51ad24d8>#<Jekyll::StaticFile:0x00561c51ad2960>#<Jekyll::StaticFile:0x00561c51ad1df8>#<Jekyll::StaticFile:0x00561c51ad1768>#<Jekyll::StaticFile:0x00561c51ad20f0>#<Jekyll::StaticFile:0x00561c51ad3518>#<Jekyll::StaticFile:0x00561c51ad13f8>#<Jekyll::StaticFile:0x00561c51ad6a10>#<Jekyll::StaticFile:0x00561c51ad73e8>#<Jekyll::StaticFile:0x00561c51ad4530>#<Jekyll::StaticFile:0x00561c51ad3dd8>#<Jekyll::StaticFile:0x00561c51ad39f0>#<Jekyll::StaticFile:0x00561c51ad5958>#<Jekyll::StaticFile:0x00561c51ad5480>#<Jekyll::StaticFile:0x00561c51ad5db8>#<Jekyll::StaticFile:0x00561c51ad49e0>#<Jekyll::StaticFile:0x00561c51ad63f8>#<Jekyll::StaticFile:0x00561c52e18920>#<Jekyll::StaticFile:0x00561c52160728>#<Jekyll::StaticFile:0x00561c52161330>#<Jekyll::StaticFile:0x00561c5217ee58>#<Jekyll::StaticFile:0x00561c521801e0>#<Jekyll::StaticFile:0x00561c52182828>#<Jekyll::StaticFile:0x00561c5217f5b0>#<Jekyll::StaticFile:0x00561c5217f240>#<Jekyll::StaticFile:0x00561c5217ea48>#<Jekyll::StaticFile:0x00561c521817c0>#<Jekyll::StaticFile:0x00561c52182d00>#<Jekyll::StaticFile:0x00561c52182918>#<Jekyll::StaticFile:0x00561c52182378>#<Jekyll::StaticFile:0x00561c5217f8f8>#<Jekyll::StaticFile:0x00561c5217fd08>#<Jekyll::StaticFile:0x00561c52181c48>#<Jekyll::StaticFile:0x00561c52183098>#<Jekyll::StaticFile:0x00561c52180578>#<Jekyll::StaticFile:0x00561c52180e88>#<Jekyll::StaticFile:0x00561c52160318>#<Jekyll::StaticFile:0x00561c52161f10>#<Jekyll::StaticFile:0x00561c521619c0>#<Jekyll::StaticFile:0x00561c52162b68>#<Jekyll::StaticFile:0x00561c52162500>#<Jekyll::StaticFile:0x00561c52162fa0>#<Jekyll::StaticFile:0x00561c52e13510>#<Jekyll::StaticFile:0x00561c52e131c8>#<Jekyll::StaticFile:0x00561c52e18e48>#<Jekyll::StaticFile:0x00561c523f74c8>#<Jekyll::StaticFile:0x00561c523fb500>#<Jekyll::StaticFile:0x00561c52d72c50>#<Jekyll::StaticFile:0x00561c52d72f70>#<Jekyll::StaticFile:0x00561c52d729d0>#<Jekyll::StaticFile:0x00561c52d70ce8>#<Jekyll::StaticFile:0x00561c52d71328>#<Jekyll::StaticFile:0x00561c52d718f0>#<Jekyll::StaticFile:0x00561c52d709f0>#<Jekyll::StaticFile:0x00561c52d72110>#<Jekyll::StaticFile:0x00561c52d71620>#<Jekyll::StaticFile:0x00561c52d70630>#<Jekyll::StaticFile:0x00561c52d70fe0>#<Jekyll::StaticFile:0x00561c52d71cd8>#<Jekyll::StaticFile:0x00561c52d724d0>#<Jekyll::StaticFile:0x00561c52d2b170>#<Jekyll::StaticFile:0x00561c52d2af18>#<Jekyll::StaticFile:0x00561c52d2ac20>#<Jekyll::StaticFile:0x00561c5293e148>#<Jekyll::StaticFile:0x00561c52934d50>#<Jekyll::StaticFile:0x00561c5293d9c8>#<Jekyll::StaticFile:0x00561c52932e60>#<Jekyll::StaticFile:0x00561c52937b18>#<Jekyll::StaticFile:0x00561c52935e30>#<Jekyll::StaticFile:0x00561c529416b8>#<Jekyll::StaticFile:0x00561c5293d108>#<Jekyll::StaticFile:0x00561c5293ea58>#<Jekyll::StaticFile:0x00561c52932be0>#<Jekyll::StaticFile:0x00561c5293c0f0>#<Jekyll::StaticFile:0x00561c5293fb60>#<Jekyll::StaticFile:0x00561c52933158>#<Jekyll::StaticFile:0x00561c52941b90>#<Jekyll::StaticFile:0x00561c52930bb0>#<Jekyll::StaticFile:0x00561c5293f2f0>#<Jekyll::StaticFile:0x00561c52932690>#<Jekyll::StaticFile:0x00561c5293c3e8>#<Jekyll::StaticFile:0x00561c52937438>#<Jekyll::StaticFile:0x00561c5293f8b8>#<Jekyll::StaticFile:0x00561c52931588>#<Jekyll::StaticFile:0x00561c529320f0>#<Jekyll::StaticFile:0x00561c529318f8>#<Jekyll::StaticFile:0x00561c52940510>#<Jekyll::StaticFile:0x00561c5293ed78>#<Jekyll::StaticFile:0x00561c529402b8>#<Jekyll::StaticFile:0x00561c52934f80>#<Jekyll::StaticFile:0x00561c52931e98>#<Jekyll::StaticFile:0x00561c52936588>#<Jekyll::StaticFile:0x00561c529420b8>#<Jekyll::StaticFile:0x00561c52932960>#<Jekyll::StaticFile:0x00561c52934850>#<Jekyll::StaticFile:0x00561c52936a60>#<Jekyll::StaticFile:0x00561c52935bb0>#<Jekyll::StaticFile:0x00561c5293e738>#<Jekyll::StaticFile:0x00561c52935728>#<Jekyll::StaticFile:0x00561c52933680>#<Jekyll::StaticFile:0x00561c5293eff8>#<Jekyll::StaticFile:0x00561c52936088>#<Jekyll::StaticFile:0x00561c529339c8>#<Jekyll::StaticFile:0x00561c52936808>#<Jekyll::StaticFile:0x00561c52931268>#<Jekyll::StaticFile:0x00561c52933c98>#<Jekyll::StaticFile:0x00561c52941e60>#<Jekyll::StaticFile:0x00561c52935980>#<Jekyll::StaticFile:0x00561c52932438>#<Jekyll::StaticFile:0x00561c5293de50>#<Jekyll::StaticFile:0x00561c529422e8>#<Jekyll::StaticFile:0x00561c529418e8>#<Jekyll::StaticFile:0x00561c52941438>#<Jekyll::StaticFile:0x00561c529333b0>#<Jekyll::StaticFile:0x00561c5293fef8>#<Jekyll::StaticFile:0x00561c52937668>#<Jekyll::StaticFile:0x00561c5293cc08>#<Jekyll::StaticFile:0x00561c5293e3c8>#<Jekyll::StaticFile:0x00561c52936ce0>#<Jekyll::StaticFile:0x00561c529345f8>#<Jekyll::StaticFile:0x00561c529378c0>#<Jekyll::StaticFile:0x00561c529371b8>#<Jekyll::StaticFile:0x00561c52941190>#<Jekyll::StaticFile:0x00561c52936330>#<Jekyll::StaticFile:0x00561c52937d98>#<Jekyll::StaticFile:0x00561c52934350>#<Jekyll::StaticFile:0x00561c52936f60>#<Jekyll::StaticFile:0x00561c52933ef0>#<Jekyll::StaticFile:0x00561c52945ad8>#<Jekyll::StaticFile:0x00561c52943df0>#<Jekyll::StaticFile:0x00561c52945d08>#<Jekyll::StaticFile:0x00561c52943710>#<Jekyll::StaticFile:0x00561c529451f0>#<Jekyll::StaticFile:0x00561c529434e0>#<Jekyll::StaticFile:0x00561c52942630>#<Jekyll::StaticFile:0x00561c52944b60>#<Jekyll::StaticFile:0x00561c52942ab8>#<Jekyll::StaticFile:0x00561c52944fe8>#<Jekyll::StaticFile:0x00561c529456a0>#<Jekyll::StaticFile:0x00561c52944db8>#<Jekyll::StaticFile:0x00561c529445c0>#<Jekyll::StaticFile:0x00561c52944890>#<Jekyll::StaticFile:0x00561c529458a8>#<Jekyll::StaticFile:0x00561c52945fb0>#<Jekyll::StaticFile:0x00561c529428b0>#<Jekyll::StaticFile:0x00561c52945470>#<Jekyll::StaticFile:0x00561c52944098>#<Jekyll::StaticFile:0x00561c52942d10>#<Jekyll::StaticFile:0x00561c529431e8>#<Jekyll::StaticFile:0x00561c529407e0>#<Jekyll::StaticFile:0x00561c5293f5c0>#<Jekyll::StaticFile:0x00561c52930f20>#<Jekyll::StaticFile:0x00561c52934af8>#<Jekyll::StaticFile:0x00561c52940e70>#<Jekyll::StaticFile:0x00561c52935250>#<Jekyll::StaticFile:0x00561c5293d590>#<Jekyll::StaticFile:0x00561c52931c68>#<Jekyll::StaticFile:0x00561c52940a38>#<Jekyll::StaticFile:0x00561c52935480>#<Jekyll::StaticFile:0x00561c52cfa3e0>#<Jekyll::StaticFile:0x00561c52cfa020></p>
<p><strong>SVG Objects</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include svg-object.html width=<span class="st">&quot;18em&quot;</span> id=<span class="st">&quot;RC_obj&quot;</span> filename=<span class="st">&quot;rc.svg&quot;</span> description=<span class="st">&quot;Circuit of low-pass filter&quot;</span> %}</code></pre></div>
Output: SVG Object
<figure>
<object class="img-fluid" id="RC_obj" data="res/img/dynamic-images/rc.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="code-listings">Code Listings</h3>
<p>Verbatime code can be placed inside backticks, e.g. `code` is displayed as <code>code</code>. If you want to highlight code put it in a block of three backticks. Directly after the backticks you can specify the language.</p>
<figure class="highlight">
<pre><code class="language-c" data-lang="c"><span></span><span class="lineno">1 </span><span class="err">```</span><span class="n">c</span>
<span class="lineno">2 </span><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
<span class="lineno">3 </span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World&quot;</span><span class="p">);</span>
<span class="lineno">4 </span><span class="p">}</span>
<span class="lineno">5 </span><span class="err">```</span></code></pre>
</figure>
<p>As an alternative we also support advanced syntax highlighting using the following liquid tag</p>
<pre><code>{% highlight c linenos %}
int main() {
    if (a &lt; 3){
        printf(&quot;Hello World&quot;);
    }
}
{% endhighlight %}
</code></pre>
<h3 id="acronyms">Acronyms</h3>
<p>Acronyms, such as AES, are parsed and linked automatically. If you want to add a new abbreviation just add it to <code>res/parser_util/abbreviations.md</code>. The structure should look like this</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">*</span>[AES]: Advanced Encryption Standard</code></pre></div>
<h3 id="content-categories">Content Categories</h3>
<p>We currently support four special categories of content, which visibility is influenced via interactions or the options (see <a href="demo.html">Demo Page</a>)</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> definition %}<span class="ex">text</span>{% enddefinition %}
{<span class="ex">%</span> example %}<span class="ex">text</span>{% endexample %}
{<span class="ex">%</span> explanation %}<span class="ex">text</span>{% endexplanation %}
{<span class="ex">%</span> legend %}<span class="ex">text</span>{% endlegend %}</code></pre></div>
<h3 id="emphbox">Emphbox</h3>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> emphbox %}<span class="ex">Content</span> in box{% endemphbox %}</code></pre></div>
Output:
<div class='card border-danger'>
<div class='card-body'>
<p class='card-text text-center'>
Content in box
<p>
</div>
</div>
<h2 id="interactivity-htmlsvg-javascript">Interactivity: HTML/SVG + JavaScript</h2>
<p>To create interactive content you can directly embedd <abbr title="Hypertext Markup Language" >HTML</abbr> tags and JavaScript code. An easy to use framework is under development.</p>
<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html">Resistance R = <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;R_val&quot;</span><span class="ot"> onclick=</span><span class="st">&quot;askValue(this.id)&quot;</span><span class="kw">&gt;</span>10k<span class="kw">&lt;/span&gt;</span>Ω

<span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;text/javascript&quot;</span><span class="kw">&gt;</span>
 <span class="kw">var</span> R1 <span class="op">=</span> <span class="at">getValue</span>( <span class="va">document</span>.<span class="at">getElementById</span>(<span class="st">&quot;R_val&quot;</span>).<span class="at">textContent</span> )<span class="op">;</span>
<span class="kw">&lt;/script&gt;</span></code></pre></div>
<p>Please ensure that you only have one <code>&lt;script&gt;</code> section <em>at the end</em> of the article! Otherwise our generator scripts might destroy your code.</p>
<h2 id="preview-your-article">Preview your article</h2>
<p>When you are done editing, you can preview your article. Follow the instruction of the <a href="https://github.com/latex4ei/tex4tum/blob/master/README.md#contribution">README</a> to install all dependencies</p>
<p>Run the local server and browse to http://localhost:4000/ with</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">make</span> run</code></pre></div>
<h2 id="list-of-todos">List of TODOs</h2>
<p>All lines starting with TODO will be added to the following TODO list.</p>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of <abbr title="Random Access Memory" >RAM</abbr> modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust <abbr title="JavaScript" >JS</abbr> library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This article describes how you can contribute or edit articles.
</p>
</div>
</div>
</div>
<p>If you want to contribute or edit an article do the following:</p>
<ol type="1">
<li>fork <a href="https://github.com/latex4ei/tex4tum">the repository on github</a> and clone it locally.</li>
<li>edit the corresponding <code>.md</code> file in the folder '<code>_article</code>' or create a new one.</li>
<li>once finished, push the changes to GitHub and create a pull request.</li>
</ol>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#our-format-syntax">Our Format Syntax</a></li>
<li><a href="#jekyll-and-liquid-tags">Jekyll and Liquid Tags</a></li>
<li><a href="#interactivity-htmlsvg--javascript">Interactivity: HTML/SVG + JavaScript</a></li>
<li><a href="#preview-your-article">Preview your article</a></li>
<li><a href="#list-of-todos">List of TODOs</a></li>
</ul>
<h2 id="our-format-syntax">Our Format Syntax</h2>
<p>The good news first: If you write text, it will be displayed as text. If you want to apply some text formatting you can use <a href="/markdown.html">Markdown</a>. Equations can be typset in TeX surrounded by <code>$</code> without spaces.</p>
<h3 id="file-structure">File structure</h3>
<p>Our file structure requires a YAML header (surrounded by <code>---</code>) that states a title and some keywords (tags) that can be used to find the article.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example22">
<i class='fa fa-chart-bar'></i> File example
</h5>
<div id='example22' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<pre><code> ---
 title: Inter-Integrated Circuit I²C
 tags: i2c, bus, SDA, SCK
 ---

 The first paragraph is the definition (hidden by default).

 After the first blank line comes the introduction.

 ## First Heading
 text</code></pre>
<p>
</div>
</div>
</div>
<p>The first paragraph will become the definition, which you should always provide. If you really want to omit a definition, indent the first paragraph by two spaces.</p>
<h3 id="markdown-for-basic-text">Markdown for Basic Text</h3>
<p>We use <a href="https://pandoc.org/MANUAL.html">Pandoc</a> as Markdown interpreter with the extension <code>footnotes</code> and <code>backtick_code_blocks</code>. Thus, the following formatting is possible</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>## Heading</code></td>
<td style="text-align: left;"><strong>Heading</strong></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>**bold**</code></td>
<td style="text-align: left;"><strong>bold</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>**italic**</code></td>
<td style="text-align: left;"><em>italic</em></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>[Link-Text](url)</code></td>
<td style="text-align: left;"><a href="url">Link-Text</a></td>
</tr>
</tbody>
</table>
<h3 id="own-parsers">Own Parsers</h3>
<p>We also use our own backend scripts to parse certain content categories, for example, to detect the definition paragraph of an article. Furthermore, we format examples, explanations, and legends. To format a paragraph as example you just need to write <code>Example:</code> before a paragraph. The paragraph is recognized by blank lines, so make sure that you have a blank line before the the <code>Example:</code> marker.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example23">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example23' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example Text and here is the code that produces it.</br> <code>Example: This is an example Text and here is the code that produces it.</code>
<p>
</div>
</div>
</div>
<p>Besides that you can also mark content using the Liquid Tags described below.</p>
<h3 id="equations-with-tex">Equations with TeX</h3>
<p>We use <a href="https://khan.github.io/KaTeX/">KaTeX</a> as TeX interpreter, such that you can typeset math equations simply using <code>$</code>. For example to display <span class="LaTeX">$\sqrt{x^2 + \alpha}$</span> as inline you write <code>$\sqrt{x^2 + \alpha}$</code>. Please note that there must <em>not</em> be a space between the <code>$</code> and your tex code! For display style equations, leave a blank line and surround your tex code by double <code>$$</code>s. You may optionally explain used symbols by a line starting with <code>with</code> or <code>where</code> that directly follows the equation.</p>
<p>The equation (you can click on it)</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$\oint_{\partial A} {{\mathbf{E}}} \cdot {\,\text{d}}{{\mathbf{s}}}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with electric field <span class="LaTeX">${{\mathbf{E}}}$</span>, surface <span class="LaTeX">$A$</span> and direction <span class="LaTeX">${{\mathbf{s}}}$</span></p>
</div>
</div>
</div>
<p>is written as</p>
<pre><code>$$\oint_{\partial A} \vec E \cdot \diff \vec s$$
with electric field $\vec E$, surface $A$ and direction $\vec s$</code></pre>
<p>Note: To define new LaTeX commands add them to <code>res/parser_util/tex_definition.md</code></p>
<h2 id="jekyll-and-liquid-tags">Jekyll and Liquid Tags</h2>
<p>Our site is generated using <a href="https://jekyllrb.com/">Jekyll</a> that manages every step of the conversion to the final <abbr title="Hypertext Markup Language" >HTML</abbr> files. Thus, Jekyll collects and converts the Markdown files by piping them through Pandoc. However, <strong>before</strong> the conversion, Jekyll allows to substitute dynamic content using Liquid Tags <code>{% include mycontent.md %}</code> and Liquid variables <code>{{ date }}</code>. These tags allow sophisticated generation of content using backend Ruby scripts.</p>
<p>We created some custom templates, liquid tags and plugins to simplify the development process. The following sections describe how to use these during contribution. Also check our <a href="demo.html">Demo Pages</a> for some features.</p>
<h3 id="images">Images</h3>
<p>To include Images use the following commands</p>
<p><strong>Figures</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include figure.html filename=<span class="st">&quot;complex.svg&quot;</span> description=<span class="st">&quot;Description goes here&quot;</span> width=<span class="st">&quot;50%&quot;</span> %}</code></pre></div>
<p>Output: Image in figure environment with image description</p>
<!--<p> Filename="complex.svg", path="/res/img/content-images/math/complex.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 50%;" src="/res/img/content-images/math/complex.svg" alt="Description goes here"/>
<figcaption class="figure-caption">
Description goes here
</figcaption>
</figure>
<p><strong>Inline Image</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> inlineimage capacitor_symbol.svg %}</code></pre></div>
<p>Output: Inline Image #<Jekyll::StaticFile:0x00561c5246e690>#<Jekyll::StaticFile:0x00561c5246df60>#<Jekyll::StaticFile:0x00561c528be240>#<Jekyll::StaticFile:0x00561c528be628>#<Jekyll::StaticFile:0x00561c528beec0>#<Jekyll::StaticFile:0x00561c528bf258>#<Jekyll::StaticFile:0x00561c528beb28>#<Jekyll::StaticFile:0x00561c528903b8>#<Jekyll::StaticFile:0x00561c52890ae8>#<Jekyll::StaticFile:0x00561c52890868>#<Jekyll::StaticFile:0x00561c52890610>#<Jekyll::StaticFile:0x00561c5246d5d8>#<Jekyll::StaticFile:0x00561c52d39e50>#<Jekyll::StaticFile:0x00561c52d3adf0>#<Jekyll::StaticFile:0x00561c52d3a080>#<Jekyll::StaticFile:0x00561c52d3b160>#<Jekyll::StaticFile:0x00561c52d3a328>#<Jekyll::StaticFile:0x00561c52d3a8c8>#<Jekyll::StaticFile:0x00561c52d3a5d0>#<Jekyll::StaticFile:0x00561c52d6ff78>#<Jekyll::StaticFile:0x00561c52d6fcf8>#<Jekyll::StaticFile:0x00561c52d701f8>#<Jekyll::StaticFile:0x00561c52e18bf0>#<Jekyll::StaticFile:0x00561c52e190f0>#<Jekyll::StaticFile:0x00561c52e13e70>#<Jekyll::StaticFile:0x00561c52e18128>#<Jekyll::StaticFile:0x00561c52e13b00>#<Jekyll::StaticFile:0x00561c52e183f8>#<Jekyll::StaticFile:0x00561c52e19938>#<Jekyll::StaticFile:0x00561c52e186c8>#<Jekyll::StaticFile:0x00561c52e13830>#<Jekyll::StaticFile:0x00561c52426de0>#<Jekyll::StaticFile:0x00561c52427420>#<Jekyll::StaticFile:0x00561c52426ae8>#<Jekyll::StaticFile:0x00561c5245f370>#<Jekyll::StaticFile:0x00561c523e6ce0>#<Jekyll::StaticFile:0x00561c523e3810>#<Jekyll::StaticFile:0x00561c52e1a068>#<Jekyll::StaticFile:0x00561c52e1a9c8>#<Jekyll::StaticFile:0x00561c52e19870>#<Jekyll::StaticFile:0x00561c52eec3d8>#<Jekyll::StaticFile:0x00561c52eec158>#<Jekyll::StaticFile:0x00561c52eec6d0>#<Jekyll::StaticFile:0x00561c52ee7e50>#<Jekyll::StaticFile:0x00561c52f84160>#<Jekyll::StaticFile:0x00561c52f7b308>#<Jekyll::StaticFile:0x00561c52f7bc90>#<Jekyll::StaticFile:0x00561c52f7b5b0>#<Jekyll::StaticFile:0x00561c52f7b9c0>#<Jekyll::StaticFile:0x00561c52f7bf10>#<Jekyll::StaticFile:0x00561c52fa5770>#<Jekyll::StaticFile:0x00561c52fa5a40>#<Jekyll::StaticFile:0x00561c52fa54f0>#<Jekyll::StaticFile:0x00561c52fa6440>#<Jekyll::StaticFile:0x00561c52fa51f8>#<Jekyll::StaticFile:0x00561c52fa5db0>#<Jekyll::StaticFile:0x00561c52fa66c0>#<Jekyll::StaticFile:0x00561c52fa60f8>#<Jekyll::StaticFile:0x00561c52fe6e28>#<Jekyll::StaticFile:0x00561c52fe7058>#<Jekyll::StaticFile:0x00561c52fe6ae0>#<Jekyll::StaticFile:0x00561c530160d8>#<Jekyll::StaticFile:0x00561c530166c8>#<Jekyll::StaticFile:0x00561c53014ff8>#<Jekyll::StaticFile:0x00561c53015d90>#<Jekyll::StaticFile:0x00561c53015368>#<Jekyll::StaticFile:0x00561c530163d0>#<Jekyll::StaticFile:0x00561c53014d50>#<Jekyll::StaticFile:0x00561c53015a70>#<Jekyll::StaticFile:0x00561c53015728>#<Jekyll::StaticFile:0x00561c530169e8>#<Jekyll::StaticFile:0x00561c53016d08>#<Jekyll::StaticFile:0x00561c53014120>#<Jekyll::StaticFile:0x00561c53014378>#<Jekyll::StaticFile:0x00561c52f24648>#<Jekyll::StaticFile:0x00561c52f242b0>#<Jekyll::StaticFile:0x00561c52f1afd0>#<Jekyll::StaticFile:0x00561c52f1bf98>#<Jekyll::StaticFile:0x00561c52f1ba98>#<Jekyll::StaticFile:0x00561c52e1a360>#<Jekyll::StaticFile:0x00561c52e1a658>#<Jekyll::StaticFile:0x00561c52e19b40>#<Jekyll::StaticFile:0x00561c52e19dc0>#<Jekyll::StaticFile:0x00561c52e1b328>#<Jekyll::StaticFile:0x00561c52e1be18>#<Jekyll::StaticFile:0x00561c52e1bb70>#<Jekyll::StaticFile:0x00561c52e1b648>#<Jekyll::StaticFile:0x00561c52e1b8c8>#<Jekyll::StaticFile:0x00561c52e22ce0>#<Jekyll::StaticFile:0x00561c52e236b8>#<Jekyll::StaticFile:0x00561c52e230c8>#<Jekyll::StaticFile:0x00561c52e20d50>#<Jekyll::StaticFile:0x00561c52e20ff8>#<Jekyll::StaticFile:0x00561c52e20030>#<Jekyll::StaticFile:0x00561c52e202b0>#<Jekyll::StaticFile:0x00561c52e217c8>#<Jekyll::StaticFile:0x00561c52e22c40>#<Jekyll::StaticFile:0x00561c52e21250>#<Jekyll::StaticFile:0x00561c52e239b0>#<Jekyll::StaticFile:0x00561c52e233e8>#<Jekyll::StaticFile:0x00561c52e20af8>#<Jekyll::StaticFile:0x00561c52e20580>#<Jekyll::StaticFile:0x00561c52e21de0>#<Jekyll::StaticFile:0x00561c52e22290>#<Jekyll::StaticFile:0x00561c52e20828>#<Jekyll::StaticFile:0x00561c52e22768>#<Jekyll::StaticFile:0x00561c52e1ac98>#<Jekyll::StaticFile:0x00561c52e19438>#<Jekyll::StaticFile:0x00561c51ac73a8>#<Jekyll::StaticFile:0x00561c51ac6b60>#<Jekyll::StaticFile:0x00561c51ac6f20>#<Jekyll::StaticFile:0x00561c51ac6700>#<Jekyll::StaticFile:0x00561c51ac7970>#<Jekyll::StaticFile:0x00561c51ad1b00>#<Jekyll::StaticFile:0x00561c51ad0f20>#<Jekyll::StaticFile:0x00561c51ad2ca8>#<Jekyll::StaticFile:0x00561c51ad0958>#<Jekyll::StaticFile:0x00561c51ad30b8>#<Jekyll::StaticFile:0x00561c51ad24d8>#<Jekyll::StaticFile:0x00561c51ad2960>#<Jekyll::StaticFile:0x00561c51ad1df8>#<Jekyll::StaticFile:0x00561c51ad1768>#<Jekyll::StaticFile:0x00561c51ad20f0>#<Jekyll::StaticFile:0x00561c51ad3518>#<Jekyll::StaticFile:0x00561c51ad13f8>#<Jekyll::StaticFile:0x00561c51ad6a10>#<Jekyll::StaticFile:0x00561c51ad73e8>#<Jekyll::StaticFile:0x00561c51ad4530>#<Jekyll::StaticFile:0x00561c51ad3dd8>#<Jekyll::StaticFile:0x00561c51ad39f0>#<Jekyll::StaticFile:0x00561c51ad5958>#<Jekyll::StaticFile:0x00561c51ad5480>#<Jekyll::StaticFile:0x00561c51ad5db8>#<Jekyll::StaticFile:0x00561c51ad49e0>#<Jekyll::StaticFile:0x00561c51ad63f8>#<Jekyll::StaticFile:0x00561c52e18920>#<Jekyll::StaticFile:0x00561c52160728>#<Jekyll::StaticFile:0x00561c52161330>#<Jekyll::StaticFile:0x00561c5217ee58>#<Jekyll::StaticFile:0x00561c521801e0>#<Jekyll::StaticFile:0x00561c52182828>#<Jekyll::StaticFile:0x00561c5217f5b0>#<Jekyll::StaticFile:0x00561c5217f240>#<Jekyll::StaticFile:0x00561c5217ea48>#<Jekyll::StaticFile:0x00561c521817c0>#<Jekyll::StaticFile:0x00561c52182d00>#<Jekyll::StaticFile:0x00561c52182918>#<Jekyll::StaticFile:0x00561c52182378>#<Jekyll::StaticFile:0x00561c5217f8f8>#<Jekyll::StaticFile:0x00561c5217fd08>#<Jekyll::StaticFile:0x00561c52181c48>#<Jekyll::StaticFile:0x00561c52183098>#<Jekyll::StaticFile:0x00561c52180578>#<Jekyll::StaticFile:0x00561c52180e88>#<Jekyll::StaticFile:0x00561c52160318>#<Jekyll::StaticFile:0x00561c52161f10>#<Jekyll::StaticFile:0x00561c521619c0>#<Jekyll::StaticFile:0x00561c52162b68>#<Jekyll::StaticFile:0x00561c52162500>#<Jekyll::StaticFile:0x00561c52162fa0>#<Jekyll::StaticFile:0x00561c52e13510>#<Jekyll::StaticFile:0x00561c52e131c8>#<Jekyll::StaticFile:0x00561c52e18e48>#<Jekyll::StaticFile:0x00561c523f74c8>#<Jekyll::StaticFile:0x00561c523fb500>#<Jekyll::StaticFile:0x00561c52d72c50>#<Jekyll::StaticFile:0x00561c52d72f70>#<Jekyll::StaticFile:0x00561c52d729d0>#<Jekyll::StaticFile:0x00561c52d70ce8>#<Jekyll::StaticFile:0x00561c52d71328>#<Jekyll::StaticFile:0x00561c52d718f0>#<Jekyll::StaticFile:0x00561c52d709f0>#<Jekyll::StaticFile:0x00561c52d72110>#<Jekyll::StaticFile:0x00561c52d71620>#<Jekyll::StaticFile:0x00561c52d70630>#<Jekyll::StaticFile:0x00561c52d70fe0>#<Jekyll::StaticFile:0x00561c52d71cd8>#<Jekyll::StaticFile:0x00561c52d724d0>#<Jekyll::StaticFile:0x00561c52d2b170>#<Jekyll::StaticFile:0x00561c52d2af18>#<Jekyll::StaticFile:0x00561c52d2ac20>#<Jekyll::StaticFile:0x00561c5293e148>#<Jekyll::StaticFile:0x00561c52934d50>#<Jekyll::StaticFile:0x00561c5293d9c8>#<Jekyll::StaticFile:0x00561c52932e60>#<Jekyll::StaticFile:0x00561c52937b18>#<Jekyll::StaticFile:0x00561c52935e30>#<Jekyll::StaticFile:0x00561c529416b8>#<Jekyll::StaticFile:0x00561c5293d108>#<Jekyll::StaticFile:0x00561c5293ea58>#<Jekyll::StaticFile:0x00561c52932be0>#<Jekyll::StaticFile:0x00561c5293c0f0>#<Jekyll::StaticFile:0x00561c5293fb60>#<Jekyll::StaticFile:0x00561c52933158>#<Jekyll::StaticFile:0x00561c52941b90>#<Jekyll::StaticFile:0x00561c52930bb0>#<Jekyll::StaticFile:0x00561c5293f2f0>#<Jekyll::StaticFile:0x00561c52932690>#<Jekyll::StaticFile:0x00561c5293c3e8>#<Jekyll::StaticFile:0x00561c52937438>#<Jekyll::StaticFile:0x00561c5293f8b8>#<Jekyll::StaticFile:0x00561c52931588>#<Jekyll::StaticFile:0x00561c529320f0>#<Jekyll::StaticFile:0x00561c529318f8>#<Jekyll::StaticFile:0x00561c52940510>#<Jekyll::StaticFile:0x00561c5293ed78>#<Jekyll::StaticFile:0x00561c529402b8>#<Jekyll::StaticFile:0x00561c52934f80>#<Jekyll::StaticFile:0x00561c52931e98>#<Jekyll::StaticFile:0x00561c52936588>#<Jekyll::StaticFile:0x00561c529420b8>#<Jekyll::StaticFile:0x00561c52932960>#<Jekyll::StaticFile:0x00561c52934850>#<Jekyll::StaticFile:0x00561c52936a60>#<Jekyll::StaticFile:0x00561c52935bb0>#<Jekyll::StaticFile:0x00561c5293e738>#<Jekyll::StaticFile:0x00561c52935728>#<Jekyll::StaticFile:0x00561c52933680>#<Jekyll::StaticFile:0x00561c5293eff8>#<Jekyll::StaticFile:0x00561c52936088>#<Jekyll::StaticFile:0x00561c529339c8>#<Jekyll::StaticFile:0x00561c52936808>#<Jekyll::StaticFile:0x00561c52931268>#<Jekyll::StaticFile:0x00561c52933c98>#<Jekyll::StaticFile:0x00561c52941e60>#<Jekyll::StaticFile:0x00561c52935980>#<Jekyll::StaticFile:0x00561c52932438>#<Jekyll::StaticFile:0x00561c5293de50>#<Jekyll::StaticFile:0x00561c529422e8>#<Jekyll::StaticFile:0x00561c529418e8>#<Jekyll::StaticFile:0x00561c52941438>#<Jekyll::StaticFile:0x00561c529333b0>#<Jekyll::StaticFile:0x00561c5293fef8>#<Jekyll::StaticFile:0x00561c52937668>#<Jekyll::StaticFile:0x00561c5293cc08>#<Jekyll::StaticFile:0x00561c5293e3c8>#<Jekyll::StaticFile:0x00561c52936ce0>#<Jekyll::StaticFile:0x00561c529345f8>#<Jekyll::StaticFile:0x00561c529378c0>#<Jekyll::StaticFile:0x00561c529371b8>#<Jekyll::StaticFile:0x00561c52941190>#<Jekyll::StaticFile:0x00561c52936330>#<Jekyll::StaticFile:0x00561c52937d98>#<Jekyll::StaticFile:0x00561c52934350>#<Jekyll::StaticFile:0x00561c52936f60>#<Jekyll::StaticFile:0x00561c52933ef0>#<Jekyll::StaticFile:0x00561c52945ad8>#<Jekyll::StaticFile:0x00561c52943df0>#<Jekyll::StaticFile:0x00561c52945d08>#<Jekyll::StaticFile:0x00561c52943710>#<Jekyll::StaticFile:0x00561c529451f0>#<Jekyll::StaticFile:0x00561c529434e0>#<Jekyll::StaticFile:0x00561c52942630>#<Jekyll::StaticFile:0x00561c52944b60>#<Jekyll::StaticFile:0x00561c52942ab8>#<Jekyll::StaticFile:0x00561c52944fe8>#<Jekyll::StaticFile:0x00561c529456a0>#<Jekyll::StaticFile:0x00561c52944db8>#<Jekyll::StaticFile:0x00561c529445c0>#<Jekyll::StaticFile:0x00561c52944890>#<Jekyll::StaticFile:0x00561c529458a8>#<Jekyll::StaticFile:0x00561c52945fb0>#<Jekyll::StaticFile:0x00561c529428b0>#<Jekyll::StaticFile:0x00561c52945470>#<Jekyll::StaticFile:0x00561c52944098>#<Jekyll::StaticFile:0x00561c52942d10>#<Jekyll::StaticFile:0x00561c529431e8>#<Jekyll::StaticFile:0x00561c529407e0>#<Jekyll::StaticFile:0x00561c5293f5c0>#<Jekyll::StaticFile:0x00561c52930f20>#<Jekyll::StaticFile:0x00561c52934af8>#<Jekyll::StaticFile:0x00561c52940e70>#<Jekyll::StaticFile:0x00561c52935250>#<Jekyll::StaticFile:0x00561c5293d590>#<Jekyll::StaticFile:0x00561c52931c68>#<Jekyll::StaticFile:0x00561c52940a38>#<Jekyll::StaticFile:0x00561c52935480>#<Jekyll::StaticFile:0x00561c52cfa3e0>#<Jekyll::StaticFile:0x00561c52cfa020></p>
<p><strong>SVG Objects</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include svg-object.html width=<span class="st">&quot;18em&quot;</span> id=<span class="st">&quot;RC_obj&quot;</span> filename=<span class="st">&quot;rc.svg&quot;</span> description=<span class="st">&quot;Circuit of low-pass filter&quot;</span> %}</code></pre></div>
Output: <abbr title="Scalable Vector Graphics" >SVG</abbr> Object
<figure>
<object class="img-fluid" id="RC_obj" data="res/img/dynamic-images/rc.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="code-listings">Code Listings</h3>
<p>Verbatime code can be placed inside backticks, e.g. `code` is displayed as <code>code</code>. If you want to highlight code put it in a block of three backticks. Directly after the backticks you can specify the language.</p>
<figure class="highlight">
<pre><code class="language-c" data-lang="c"><span></span><span class="lineno">1 </span><span class="err">```</span><span class="n">c</span>
<span class="lineno">2 </span><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
<span class="lineno">3 </span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World&quot;</span><span class="p">);</span>
<span class="lineno">4 </span><span class="p">}</span>
<span class="lineno">5 </span><span class="err">```</span></code></pre>
</figure>
<p>As an alternative we also support advanced syntax highlighting using the following liquid tag</p>
<pre><code>{% highlight c linenos %}
int main() {
    if (a &lt; 3){
        printf(&quot;Hello World&quot;);
    }
}
{% endhighlight %}
</code></pre>
<h3 id="acronyms">Acronyms</h3>
<p>Acronyms, such as AES, are parsed and linked automatically. If you want to add a new abbreviation just add it to <code>res/parser_util/abbreviations.md</code>. The structure should look like this</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">*</span>[AES]: Advanced Encryption Standard</code></pre></div>
<h3 id="content-categories">Content Categories</h3>
<p>We currently support four special categories of content, which visibility is influenced via interactions or the options (see <a href="demo.html">Demo Page</a>)</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> definition %}<span class="ex">text</span>{% enddefinition %}
{<span class="ex">%</span> example %}<span class="ex">text</span>{% endexample %}
{<span class="ex">%</span> explanation %}<span class="ex">text</span>{% endexplanation %}
{<span class="ex">%</span> legend %}<span class="ex">text</span>{% endlegend %}</code></pre></div>
<h3 id="emphbox">Emphbox</h3>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> emphbox %}<span class="ex">Content</span> in box{% endemphbox %}</code></pre></div>
Output:
<div class='card border-danger'>
<div class='card-body'>
<p class='card-text text-center'>
Content in box
<p>
</div>
</div>
<h2 id="interactivity-htmlsvg-javascript">Interactivity: HTML/SVG + JavaScript</h2>
<p>To create interactive content you can directly embedd <abbr title="Hypertext Markup Language" >HTML</abbr> tags and JavaScript code. An easy to use framework is under development.</p>
<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html">Resistance R = <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;R_val&quot;</span><span class="ot"> onclick=</span><span class="st">&quot;askValue(this.id)&quot;</span><span class="kw">&gt;</span>10k<span class="kw">&lt;/span&gt;</span>Ω

<span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;text/javascript&quot;</span><span class="kw">&gt;</span>
 <span class="kw">var</span> R1 <span class="op">=</span> <span class="at">getValue</span>( <span class="va">document</span>.<span class="at">getElementById</span>(<span class="st">&quot;R_val&quot;</span>).<span class="at">textContent</span> )<span class="op">;</span>
<span class="kw">&lt;/script&gt;</span></code></pre></div>
<p>Please ensure that you only have one <code>&lt;script&gt;</code> section <em>at the end</em> of the article! Otherwise our generator scripts might destroy your code.</p>
<h2 id="preview-your-article">Preview your article</h2>
<p>When you are done editing, you can preview your article. Follow the instruction of the <a href="https://github.com/latex4ei/tex4tum/blob/master/README.md#contribution">README</a> to install all dependencies</p>
<p>Run the local server and browse to http://localhost:4000/ with</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">make</span> run</code></pre></div>
<h2 id="list-of-todos">List of TODOs</h2>
<p>All lines starting with TODO will be added to the following TODO list.</p>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of <abbr title="Random Access Memory" >RAM</abbr> modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust <abbr title="JavaScript" >JS</abbr> library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This article describes how you can contribute or edit articles.
</p>
</div>
</div>
</div>
<p>If you want to contribute or edit an article do the following:</p>
<ol type="1">
<li>fork <a href="https://github.com/latex4ei/tex4tum">the repository on github</a> and clone it locally.</li>
<li>edit the corresponding <code>.md</code> file in the folder '<code>_article</code>' or create a new one.</li>
<li>once finished, push the changes to GitHub and create a pull request.</li>
</ol>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#our-format-syntax">Our Format Syntax</a></li>
<li><a href="#jekyll-and-liquid-tags">Jekyll and Liquid Tags</a></li>
<li><a href="#interactivity-htmlsvg--javascript">Interactivity: HTML/SVG + JavaScript</a></li>
<li><a href="#preview-your-article">Preview your article</a></li>
<li><a href="#list-of-todos">List of TODOs</a></li>
</ul>
<h2 id="our-format-syntax">Our Format Syntax</h2>
<p>The good news first: If you write text, it will be displayed as text. If you want to apply some text formatting you can use <a href="/markdown.html">Markdown</a>. Equations can be typset in TeX surrounded by <code>$</code> without spaces.</p>
<h3 id="file-structure">File structure</h3>
<p>Our file structure requires a <abbr title="YAML Ain't Markup Language" >YAML</abbr> header (surrounded by <code>---</code>) that states a title and some keywords (tags) that can be used to find the article.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example22">
<i class='fa fa-chart-bar'></i> File example
</h5>
<div id='example22' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<pre><code> ---
 title: Inter-Integrated Circuit I²C
 tags: i2c, bus, SDA, SCK
 ---

 The first paragraph is the definition (hidden by default).

 After the first blank line comes the introduction.

 ## First Heading
 text</code></pre>
<p>
</div>
</div>
</div>
<p>The first paragraph will become the definition, which you should always provide. If you really want to omit a definition, indent the first paragraph by two spaces.</p>
<h3 id="markdown-for-basic-text">Markdown for Basic Text</h3>
<p>We use <a href="https://pandoc.org/MANUAL.html">Pandoc</a> as Markdown interpreter with the extension <code>footnotes</code> and <code>backtick_code_blocks</code>. Thus, the following formatting is possible</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>## Heading</code></td>
<td style="text-align: left;"><strong>Heading</strong></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>**bold**</code></td>
<td style="text-align: left;"><strong>bold</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>**italic**</code></td>
<td style="text-align: left;"><em>italic</em></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>[Link-Text](url)</code></td>
<td style="text-align: left;"><a href="url">Link-Text</a></td>
</tr>
</tbody>
</table>
<h3 id="own-parsers">Own Parsers</h3>
<p>We also use our own backend scripts to parse certain content categories, for example, to detect the definition paragraph of an article. Furthermore, we format examples, explanations, and legends. To format a paragraph as example you just need to write <code>Example:</code> before a paragraph. The paragraph is recognized by blank lines, so make sure that you have a blank line before the the <code>Example:</code> marker.</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example23">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example23' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example Text and here is the code that produces it.</br> <code>Example: This is an example Text and here is the code that produces it.</code>
<p>
</div>
</div>
</div>
<p>Besides that you can also mark content using the Liquid Tags described below.</p>
<h3 id="equations-with-tex">Equations with TeX</h3>
<p>We use <a href="https://khan.github.io/KaTeX/">KaTeX</a> as TeX interpreter, such that you can typeset math equations simply using <code>$</code>. For example to display <span class="LaTeX">$\sqrt{x^2 + \alpha}$</span> as inline you write <code>$\sqrt{x^2 + \alpha}$</code>. Please note that there must <em>not</em> be a space between the <code>$</code> and your tex code! For display style equations, leave a blank line and surround your tex code by double <code>$$</code>s. You may optionally explain used symbols by a line starting with <code>with</code> or <code>where</code> that directly follows the equation.</p>
<p>The equation (you can click on it)</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$\oint_{\partial A} {{\mathbf{E}}} \cdot {\,\text{d}}{{\mathbf{s}}}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with electric field <span class="LaTeX">${{\mathbf{E}}}$</span>, surface <span class="LaTeX">$A$</span> and direction <span class="LaTeX">${{\mathbf{s}}}$</span></p>
</div>
</div>
</div>
<p>is written as</p>
<pre><code>$$\oint_{\partial A} \vec E \cdot \diff \vec s$$
with electric field $\vec E$, surface $A$ and direction $\vec s$</code></pre>
<p>Note: To define new LaTeX commands add them to <code>res/parser_util/tex_definition.md</code></p>
<h2 id="jekyll-and-liquid-tags">Jekyll and Liquid Tags</h2>
<p>Our site is generated using <a href="https://jekyllrb.com/">Jekyll</a> that manages every step of the conversion to the final <abbr title="Hypertext Markup Language" >HTML</abbr> files. Thus, Jekyll collects and converts the Markdown files by piping them through Pandoc. However, <strong>before</strong> the conversion, Jekyll allows to substitute dynamic content using Liquid Tags <code>{% include mycontent.md %}</code> and Liquid variables <code>{{ date }}</code>. These tags allow sophisticated generation of content using backend Ruby scripts.</p>
<p>We created some custom templates, liquid tags and plugins to simplify the development process. The following sections describe how to use these during contribution. Also check our <a href="demo.html">Demo Pages</a> for some features.</p>
<h3 id="images">Images</h3>
<p>To include Images use the following commands</p>
<p><strong>Figures</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include figure.html filename=<span class="st">&quot;complex.svg&quot;</span> description=<span class="st">&quot;Description goes here&quot;</span> width=<span class="st">&quot;50%&quot;</span> %}</code></pre></div>
<p>Output: Image in figure environment with image description</p>
<!--<p> Filename="complex.svg", path="/res/img/content-images/math/complex.svg" </p>-->
<figure class="figure">
<img class="figure-img img-fluid" style="width: 50%;" src="/res/img/content-images/math/complex.svg" alt="Description goes here"/>
<figcaption class="figure-caption">
Description goes here
</figcaption>
</figure>
<p><strong>Inline Image</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> inlineimage capacitor_symbol.svg %}</code></pre></div>
<p>Output: Inline Image #<Jekyll::StaticFile:0x00561c5246e690>#<Jekyll::StaticFile:0x00561c5246df60>#<Jekyll::StaticFile:0x00561c528be240>#<Jekyll::StaticFile:0x00561c528be628>#<Jekyll::StaticFile:0x00561c528beec0>#<Jekyll::StaticFile:0x00561c528bf258>#<Jekyll::StaticFile:0x00561c528beb28>#<Jekyll::StaticFile:0x00561c528903b8>#<Jekyll::StaticFile:0x00561c52890ae8>#<Jekyll::StaticFile:0x00561c52890868>#<Jekyll::StaticFile:0x00561c52890610>#<Jekyll::StaticFile:0x00561c5246d5d8>#<Jekyll::StaticFile:0x00561c52d39e50>#<Jekyll::StaticFile:0x00561c52d3adf0>#<Jekyll::StaticFile:0x00561c52d3a080>#<Jekyll::StaticFile:0x00561c52d3b160>#<Jekyll::StaticFile:0x00561c52d3a328>#<Jekyll::StaticFile:0x00561c52d3a8c8>#<Jekyll::StaticFile:0x00561c52d3a5d0>#<Jekyll::StaticFile:0x00561c52d6ff78>#<Jekyll::StaticFile:0x00561c52d6fcf8>#<Jekyll::StaticFile:0x00561c52d701f8>#<Jekyll::StaticFile:0x00561c52e18bf0>#<Jekyll::StaticFile:0x00561c52e190f0>#<Jekyll::StaticFile:0x00561c52e13e70>#<Jekyll::StaticFile:0x00561c52e18128>#<Jekyll::StaticFile:0x00561c52e13b00>#<Jekyll::StaticFile:0x00561c52e183f8>#<Jekyll::StaticFile:0x00561c52e19938>#<Jekyll::StaticFile:0x00561c52e186c8>#<Jekyll::StaticFile:0x00561c52e13830>#<Jekyll::StaticFile:0x00561c52426de0>#<Jekyll::StaticFile:0x00561c52427420>#<Jekyll::StaticFile:0x00561c52426ae8>#<Jekyll::StaticFile:0x00561c5245f370>#<Jekyll::StaticFile:0x00561c523e6ce0>#<Jekyll::StaticFile:0x00561c523e3810>#<Jekyll::StaticFile:0x00561c52e1a068>#<Jekyll::StaticFile:0x00561c52e1a9c8>#<Jekyll::StaticFile:0x00561c52e19870>#<Jekyll::StaticFile:0x00561c52eec3d8>#<Jekyll::StaticFile:0x00561c52eec158>#<Jekyll::StaticFile:0x00561c52eec6d0>#<Jekyll::StaticFile:0x00561c52ee7e50>#<Jekyll::StaticFile:0x00561c52f84160>#<Jekyll::StaticFile:0x00561c52f7b308>#<Jekyll::StaticFile:0x00561c52f7bc90>#<Jekyll::StaticFile:0x00561c52f7b5b0>#<Jekyll::StaticFile:0x00561c52f7b9c0>#<Jekyll::StaticFile:0x00561c52f7bf10>#<Jekyll::StaticFile:0x00561c52fa5770>#<Jekyll::StaticFile:0x00561c52fa5a40>#<Jekyll::StaticFile:0x00561c52fa54f0>#<Jekyll::StaticFile:0x00561c52fa6440>#<Jekyll::StaticFile:0x00561c52fa51f8>#<Jekyll::StaticFile:0x00561c52fa5db0>#<Jekyll::StaticFile:0x00561c52fa66c0>#<Jekyll::StaticFile:0x00561c52fa60f8>#<Jekyll::StaticFile:0x00561c52fe6e28>#<Jekyll::StaticFile:0x00561c52fe7058>#<Jekyll::StaticFile:0x00561c52fe6ae0>#<Jekyll::StaticFile:0x00561c530160d8>#<Jekyll::StaticFile:0x00561c530166c8>#<Jekyll::StaticFile:0x00561c53014ff8>#<Jekyll::StaticFile:0x00561c53015d90>#<Jekyll::StaticFile:0x00561c53015368>#<Jekyll::StaticFile:0x00561c530163d0>#<Jekyll::StaticFile:0x00561c53014d50>#<Jekyll::StaticFile:0x00561c53015a70>#<Jekyll::StaticFile:0x00561c53015728>#<Jekyll::StaticFile:0x00561c530169e8>#<Jekyll::StaticFile:0x00561c53016d08>#<Jekyll::StaticFile:0x00561c53014120>#<Jekyll::StaticFile:0x00561c53014378>#<Jekyll::StaticFile:0x00561c52f24648>#<Jekyll::StaticFile:0x00561c52f242b0>#<Jekyll::StaticFile:0x00561c52f1afd0>#<Jekyll::StaticFile:0x00561c52f1bf98>#<Jekyll::StaticFile:0x00561c52f1ba98>#<Jekyll::StaticFile:0x00561c52e1a360>#<Jekyll::StaticFile:0x00561c52e1a658>#<Jekyll::StaticFile:0x00561c52e19b40>#<Jekyll::StaticFile:0x00561c52e19dc0>#<Jekyll::StaticFile:0x00561c52e1b328>#<Jekyll::StaticFile:0x00561c52e1be18>#<Jekyll::StaticFile:0x00561c52e1bb70>#<Jekyll::StaticFile:0x00561c52e1b648>#<Jekyll::StaticFile:0x00561c52e1b8c8>#<Jekyll::StaticFile:0x00561c52e22ce0>#<Jekyll::StaticFile:0x00561c52e236b8>#<Jekyll::StaticFile:0x00561c52e230c8>#<Jekyll::StaticFile:0x00561c52e20d50>#<Jekyll::StaticFile:0x00561c52e20ff8>#<Jekyll::StaticFile:0x00561c52e20030>#<Jekyll::StaticFile:0x00561c52e202b0>#<Jekyll::StaticFile:0x00561c52e217c8>#<Jekyll::StaticFile:0x00561c52e22c40>#<Jekyll::StaticFile:0x00561c52e21250>#<Jekyll::StaticFile:0x00561c52e239b0>#<Jekyll::StaticFile:0x00561c52e233e8>#<Jekyll::StaticFile:0x00561c52e20af8>#<Jekyll::StaticFile:0x00561c52e20580>#<Jekyll::StaticFile:0x00561c52e21de0>#<Jekyll::StaticFile:0x00561c52e22290>#<Jekyll::StaticFile:0x00561c52e20828>#<Jekyll::StaticFile:0x00561c52e22768>#<Jekyll::StaticFile:0x00561c52e1ac98>#<Jekyll::StaticFile:0x00561c52e19438>#<Jekyll::StaticFile:0x00561c51ac73a8>#<Jekyll::StaticFile:0x00561c51ac6b60>#<Jekyll::StaticFile:0x00561c51ac6f20>#<Jekyll::StaticFile:0x00561c51ac6700>#<Jekyll::StaticFile:0x00561c51ac7970>#<Jekyll::StaticFile:0x00561c51ad1b00>#<Jekyll::StaticFile:0x00561c51ad0f20>#<Jekyll::StaticFile:0x00561c51ad2ca8>#<Jekyll::StaticFile:0x00561c51ad0958>#<Jekyll::StaticFile:0x00561c51ad30b8>#<Jekyll::StaticFile:0x00561c51ad24d8>#<Jekyll::StaticFile:0x00561c51ad2960>#<Jekyll::StaticFile:0x00561c51ad1df8>#<Jekyll::StaticFile:0x00561c51ad1768>#<Jekyll::StaticFile:0x00561c51ad20f0>#<Jekyll::StaticFile:0x00561c51ad3518>#<Jekyll::StaticFile:0x00561c51ad13f8>#<Jekyll::StaticFile:0x00561c51ad6a10>#<Jekyll::StaticFile:0x00561c51ad73e8>#<Jekyll::StaticFile:0x00561c51ad4530>#<Jekyll::StaticFile:0x00561c51ad3dd8>#<Jekyll::StaticFile:0x00561c51ad39f0>#<Jekyll::StaticFile:0x00561c51ad5958>#<Jekyll::StaticFile:0x00561c51ad5480>#<Jekyll::StaticFile:0x00561c51ad5db8>#<Jekyll::StaticFile:0x00561c51ad49e0>#<Jekyll::StaticFile:0x00561c51ad63f8>#<Jekyll::StaticFile:0x00561c52e18920>#<Jekyll::StaticFile:0x00561c52160728>#<Jekyll::StaticFile:0x00561c52161330>#<Jekyll::StaticFile:0x00561c5217ee58>#<Jekyll::StaticFile:0x00561c521801e0>#<Jekyll::StaticFile:0x00561c52182828>#<Jekyll::StaticFile:0x00561c5217f5b0>#<Jekyll::StaticFile:0x00561c5217f240>#<Jekyll::StaticFile:0x00561c5217ea48>#<Jekyll::StaticFile:0x00561c521817c0>#<Jekyll::StaticFile:0x00561c52182d00>#<Jekyll::StaticFile:0x00561c52182918>#<Jekyll::StaticFile:0x00561c52182378>#<Jekyll::StaticFile:0x00561c5217f8f8>#<Jekyll::StaticFile:0x00561c5217fd08>#<Jekyll::StaticFile:0x00561c52181c48>#<Jekyll::StaticFile:0x00561c52183098>#<Jekyll::StaticFile:0x00561c52180578>#<Jekyll::StaticFile:0x00561c52180e88>#<Jekyll::StaticFile:0x00561c52160318>#<Jekyll::StaticFile:0x00561c52161f10>#<Jekyll::StaticFile:0x00561c521619c0>#<Jekyll::StaticFile:0x00561c52162b68>#<Jekyll::StaticFile:0x00561c52162500>#<Jekyll::StaticFile:0x00561c52162fa0>#<Jekyll::StaticFile:0x00561c52e13510>#<Jekyll::StaticFile:0x00561c52e131c8>#<Jekyll::StaticFile:0x00561c52e18e48>#<Jekyll::StaticFile:0x00561c523f74c8>#<Jekyll::StaticFile:0x00561c523fb500>#<Jekyll::StaticFile:0x00561c52d72c50>#<Jekyll::StaticFile:0x00561c52d72f70>#<Jekyll::StaticFile:0x00561c52d729d0>#<Jekyll::StaticFile:0x00561c52d70ce8>#<Jekyll::StaticFile:0x00561c52d71328>#<Jekyll::StaticFile:0x00561c52d718f0>#<Jekyll::StaticFile:0x00561c52d709f0>#<Jekyll::StaticFile:0x00561c52d72110>#<Jekyll::StaticFile:0x00561c52d71620>#<Jekyll::StaticFile:0x00561c52d70630>#<Jekyll::StaticFile:0x00561c52d70fe0>#<Jekyll::StaticFile:0x00561c52d71cd8>#<Jekyll::StaticFile:0x00561c52d724d0>#<Jekyll::StaticFile:0x00561c52d2b170>#<Jekyll::StaticFile:0x00561c52d2af18>#<Jekyll::StaticFile:0x00561c52d2ac20>#<Jekyll::StaticFile:0x00561c5293e148>#<Jekyll::StaticFile:0x00561c52934d50>#<Jekyll::StaticFile:0x00561c5293d9c8>#<Jekyll::StaticFile:0x00561c52932e60>#<Jekyll::StaticFile:0x00561c52937b18>#<Jekyll::StaticFile:0x00561c52935e30>#<Jekyll::StaticFile:0x00561c529416b8>#<Jekyll::StaticFile:0x00561c5293d108>#<Jekyll::StaticFile:0x00561c5293ea58>#<Jekyll::StaticFile:0x00561c52932be0>#<Jekyll::StaticFile:0x00561c5293c0f0>#<Jekyll::StaticFile:0x00561c5293fb60>#<Jekyll::StaticFile:0x00561c52933158>#<Jekyll::StaticFile:0x00561c52941b90>#<Jekyll::StaticFile:0x00561c52930bb0>#<Jekyll::StaticFile:0x00561c5293f2f0>#<Jekyll::StaticFile:0x00561c52932690>#<Jekyll::StaticFile:0x00561c5293c3e8>#<Jekyll::StaticFile:0x00561c52937438>#<Jekyll::StaticFile:0x00561c5293f8b8>#<Jekyll::StaticFile:0x00561c52931588>#<Jekyll::StaticFile:0x00561c529320f0>#<Jekyll::StaticFile:0x00561c529318f8>#<Jekyll::StaticFile:0x00561c52940510>#<Jekyll::StaticFile:0x00561c5293ed78>#<Jekyll::StaticFile:0x00561c529402b8>#<Jekyll::StaticFile:0x00561c52934f80>#<Jekyll::StaticFile:0x00561c52931e98>#<Jekyll::StaticFile:0x00561c52936588>#<Jekyll::StaticFile:0x00561c529420b8>#<Jekyll::StaticFile:0x00561c52932960>#<Jekyll::StaticFile:0x00561c52934850>#<Jekyll::StaticFile:0x00561c52936a60>#<Jekyll::StaticFile:0x00561c52935bb0>#<Jekyll::StaticFile:0x00561c5293e738>#<Jekyll::StaticFile:0x00561c52935728>#<Jekyll::StaticFile:0x00561c52933680>#<Jekyll::StaticFile:0x00561c5293eff8>#<Jekyll::StaticFile:0x00561c52936088>#<Jekyll::StaticFile:0x00561c529339c8>#<Jekyll::StaticFile:0x00561c52936808>#<Jekyll::StaticFile:0x00561c52931268>#<Jekyll::StaticFile:0x00561c52933c98>#<Jekyll::StaticFile:0x00561c52941e60>#<Jekyll::StaticFile:0x00561c52935980>#<Jekyll::StaticFile:0x00561c52932438>#<Jekyll::StaticFile:0x00561c5293de50>#<Jekyll::StaticFile:0x00561c529422e8>#<Jekyll::StaticFile:0x00561c529418e8>#<Jekyll::StaticFile:0x00561c52941438>#<Jekyll::StaticFile:0x00561c529333b0>#<Jekyll::StaticFile:0x00561c5293fef8>#<Jekyll::StaticFile:0x00561c52937668>#<Jekyll::StaticFile:0x00561c5293cc08>#<Jekyll::StaticFile:0x00561c5293e3c8>#<Jekyll::StaticFile:0x00561c52936ce0>#<Jekyll::StaticFile:0x00561c529345f8>#<Jekyll::StaticFile:0x00561c529378c0>#<Jekyll::StaticFile:0x00561c529371b8>#<Jekyll::StaticFile:0x00561c52941190>#<Jekyll::StaticFile:0x00561c52936330>#<Jekyll::StaticFile:0x00561c52937d98>#<Jekyll::StaticFile:0x00561c52934350>#<Jekyll::StaticFile:0x00561c52936f60>#<Jekyll::StaticFile:0x00561c52933ef0>#<Jekyll::StaticFile:0x00561c52945ad8>#<Jekyll::StaticFile:0x00561c52943df0>#<Jekyll::StaticFile:0x00561c52945d08>#<Jekyll::StaticFile:0x00561c52943710>#<Jekyll::StaticFile:0x00561c529451f0>#<Jekyll::StaticFile:0x00561c529434e0>#<Jekyll::StaticFile:0x00561c52942630>#<Jekyll::StaticFile:0x00561c52944b60>#<Jekyll::StaticFile:0x00561c52942ab8>#<Jekyll::StaticFile:0x00561c52944fe8>#<Jekyll::StaticFile:0x00561c529456a0>#<Jekyll::StaticFile:0x00561c52944db8>#<Jekyll::StaticFile:0x00561c529445c0>#<Jekyll::StaticFile:0x00561c52944890>#<Jekyll::StaticFile:0x00561c529458a8>#<Jekyll::StaticFile:0x00561c52945fb0>#<Jekyll::StaticFile:0x00561c529428b0>#<Jekyll::StaticFile:0x00561c52945470>#<Jekyll::StaticFile:0x00561c52944098>#<Jekyll::StaticFile:0x00561c52942d10>#<Jekyll::StaticFile:0x00561c529431e8>#<Jekyll::StaticFile:0x00561c529407e0>#<Jekyll::StaticFile:0x00561c5293f5c0>#<Jekyll::StaticFile:0x00561c52930f20>#<Jekyll::StaticFile:0x00561c52934af8>#<Jekyll::StaticFile:0x00561c52940e70>#<Jekyll::StaticFile:0x00561c52935250>#<Jekyll::StaticFile:0x00561c5293d590>#<Jekyll::StaticFile:0x00561c52931c68>#<Jekyll::StaticFile:0x00561c52940a38>#<Jekyll::StaticFile:0x00561c52935480>#<Jekyll::StaticFile:0x00561c52cfa3e0>#<Jekyll::StaticFile:0x00561c52cfa020></p>
<p><strong>SVG Objects</strong></p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> include svg-object.html width=<span class="st">&quot;18em&quot;</span> id=<span class="st">&quot;RC_obj&quot;</span> filename=<span class="st">&quot;rc.svg&quot;</span> description=<span class="st">&quot;Circuit of low-pass filter&quot;</span> %}</code></pre></div>
Output: <abbr title="Scalable Vector Graphics" >SVG</abbr> Object
<figure>
<object class="img-fluid" id="RC_obj" data="res/img/dynamic-images/rc.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="code-listings">Code Listings</h3>
<p>Verbatime code can be placed inside backticks, e.g. `code` is displayed as <code>code</code>. If you want to highlight code put it in a block of three backticks. Directly after the backticks you can specify the language.</p>
<figure class="highlight">
<pre><code class="language-c" data-lang="c"><span></span><span class="lineno">1 </span><span class="err">```</span><span class="n">c</span>
<span class="lineno">2 </span><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
<span class="lineno">3 </span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World&quot;</span><span class="p">);</span>
<span class="lineno">4 </span><span class="p">}</span>
<span class="lineno">5 </span><span class="err">```</span></code></pre>
</figure>
<p>As an alternative we also support advanced syntax highlighting using the following liquid tag</p>
<pre><code>{% highlight c linenos %}
int main() {
    if (a &lt; 3){
        printf(&quot;Hello World&quot;);
    }
}
{% endhighlight %}
</code></pre>
<h3 id="acronyms">Acronyms</h3>
<p>Acronyms, such as AES, are parsed and linked automatically. If you want to add a new abbreviation just add it to <code>res/parser_util/abbreviations.md</code>. The structure should look like this</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">*</span>[AES]: Advanced Encryption Standard</code></pre></div>
<h3 id="content-categories">Content Categories</h3>
<p>We currently support four special categories of content, which visibility is influenced via interactions or the options (see <a href="demo.html">Demo Page</a>)</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> definition %}<span class="ex">text</span>{% enddefinition %}
{<span class="ex">%</span> example %}<span class="ex">text</span>{% endexample %}
{<span class="ex">%</span> explanation %}<span class="ex">text</span>{% endexplanation %}
{<span class="ex">%</span> legend %}<span class="ex">text</span>{% endlegend %}</code></pre></div>
<h3 id="emphbox">Emphbox</h3>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash">{<span class="ex">%</span> emphbox %}<span class="ex">Content</span> in box{% endemphbox %}</code></pre></div>
Output:
<div class='card border-danger'>
<div class='card-body'>
<p class='card-text text-center'>
Content in box
<p>
</div>
</div>
<h2 id="interactivity-htmlsvg-javascript">Interactivity: HTML/SVG + JavaScript</h2>
<p>To create interactive content you can directly embedd <abbr title="Hypertext Markup Language" >HTML</abbr> tags and JavaScript code. An easy to use framework is under development.</p>
<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html">Resistance R = <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;R_val&quot;</span><span class="ot"> onclick=</span><span class="st">&quot;askValue(this.id)&quot;</span><span class="kw">&gt;</span>10k<span class="kw">&lt;/span&gt;</span>Ω

<span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;text/javascript&quot;</span><span class="kw">&gt;</span>
 <span class="kw">var</span> R1 <span class="op">=</span> <span class="at">getValue</span>( <span class="va">document</span>.<span class="at">getElementById</span>(<span class="st">&quot;R_val&quot;</span>).<span class="at">textContent</span> )<span class="op">;</span>
<span class="kw">&lt;/script&gt;</span></code></pre></div>
<p>Please ensure that you only have one <code>&lt;script&gt;</code> section <em>at the end</em> of the article! Otherwise our generator scripts might destroy your code.</p>
<h2 id="preview-your-article">Preview your article</h2>
<p>When you are done editing, you can preview your article. Follow the instruction of the <a href="https://github.com/latex4ei/tex4tum/blob/master/README.md#contribution">README</a> to install all dependencies</p>
<p>Run the local server and browse to http://localhost:4000/ with</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">make</span> run</code></pre></div>
<h2 id="list-of-todos">List of TODOs</h2>
<p>All lines starting with TODO will be added to the following TODO list.</p>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of <abbr title="Random Access Memory" >RAM</abbr> modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust <abbr title="JavaScript" >JS</abbr> library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This page is a showcase of the features that TeX4TUM provides and demonstrates how learning materials could be made interactive, fast accessible, and neat.
</p>
</div>
</div>
</div>
<p>Click on the heading to unfold the definition box.</p>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#interactive-features">Interactive Features</a></li>
<li><a href="#basic-fomartting">Basic Fomartting</a></li>
<li><a href="#todo">ToDo</a></li>
<li><a href="#feature-tests">Feature Tests</a></li>
</ul>
<h2 id="interactive-features">Interactive Features</h2>
<h3 id="content-categories">Content Categories</h3>
<p>Read only the content you really need. Use the options in the top right corner to change the visibility of the following content:<br></p>
<p>Using Liquid Tags:</p>
<div class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The square root is the math function <span class="LaTeX">$\sqrt{\cdot}$</span>.
</p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example24">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example24' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
Example <span class="LaTeX">$\sqrt{ x^4 } = x^2$</span>
<p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl19">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl19' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an explanation.
<p>
</div>
</div>
</div>
<h3 id="interactive-equations">Interactive Equations</h3>
<p>For a low-pass filter, the Cut-Off Frequency is</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$f_c = \frac{1}{2\pi R C}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with the resistance <span class="LaTeX">$R$</span> and capacity <span class="LaTeX">$C$</span></p>
</div>
</div>
</div>
<p>Click on the equation to expand the legend. For resistance <span class="LaTeX">$R$</span> = <span id="R_val" onclick="askValue(this.id)">10k</span>Ω and capacity <span class="LaTeX">$C$</span> = <span id="C_val" onclick="askValue(this.id)">100n</span>F the Cut-Off Frequency is <span class="LaTeX">$f_c$</span> = <tspan id="F_val">159 Hz</tspan>. Click on the values of R and C in the text to change them!</p>
<!-- Even more complex equations such as $\int \sqrt{x^2} \diff x = \frac{1}{3} x^3$ are rendered beautifully with [KaTex](https://khan.github.io/KaTeX/)). -->
<h3 id="interactive-diagrams">Interactive Diagrams</h3>
<p>Play with diagrams for better understanding. Click and drag the black ray with the mouse or change any value in the diagram.</p>
<figure>
<object class="img-fluid" id="fraction" data="res/img/dynamic-images/fraction.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="fast-fuzzy-search">Fast Fuzzy Search</h3>
<p>Find an answer blazingly fast. The fuzzy search in the top bar displays results immediately without slow sever communication. Just hit <code>tab</code> to focus the search, then type e.g. &quot;did&quot; to search for &quot;Diode&quot;.</p>
<h2 id="basic-fomartting">Basic Fomartting</h2>
<h3 id="tables">Tables</h3>
<p>Tables are easily generated.</p>
<table>
<thead>
<tr class="header">
<th>Feature</th>
<th>Works</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Tables</td>
<td>yes</td>
</tr>
<tr class="even">
<td>MOSI</td>
<td>Master Out, Slave In</td>
</tr>
<tr class="odd">
<td>MISO</td>
<td>Master In, Slave Out</td>
</tr>
</tbody>
</table>
<h3 id="abreviations">Abreviations</h3>
<p>Furthermore, abbreviations such as USB, BIOS, SVG, or <abbr title="Joint Photographic Experts Group" >JPEG</abbr> do not need explanations anymore. If you do not know it just move the mouse over it.</p>
<h3 id="tab-boxes">Tab Boxes</h3>
<p>You can use boxes with tabs for content that exists in similiar variations.</p>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-0" role="tab">Tab 1</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-1" role="tab">Tab 2</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-2" role="tab">Tab 3</a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">
<div id="checkboxid-0" class="tab-pane active" role="tabpanel">
<p>This should by displayed in tab 1</p>
</div>
<div id="checkboxid-1" class="tab-pane" role="tabpanel">
<p>tabs are simply created by the headers</p>
</div>
<div id="checkboxid-2" class="tab-pane" role="tabpanel">
<p>and this is tab 3. Markdown <em>elements</em> and tex <span class="LaTeX">$\sqrt{3}$</span> are supported.</p>
</div>
</div>
</div>
</div>
<p></br></p>
<p>Also content after the tabbox is displayed normally.</p>
<h2 id="todo">ToDo</h2>
<ul>
<li>Full responsive design</li>
<li>remember options with cookies</li>
<li>consistent JS framework for interactive content</li>
<li>Improved search: Sorting results, reaction to no results</li>
<li>More content</li>
</ul>
<h2 id="feature-tests">Feature Tests</h2>
<h3 id="content-categories-1">Content Categories</h3>
<p><strong>Using Liquid Tags:</strong></p>
<div class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The square root is the math function <span class="LaTeX">$\sqrt{\cdot}$</span>.
</p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example25">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example25' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
Example <span class="LaTeX">$\sqrt{ x^4 } = x^2$</span>
<p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl20">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl20' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<span class="LaTeX">$x^4 = x^{2+2} = x^2 \cdot x^2$</span>
<p>
</div>
</div>
</div>
<div class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
where <span class="LaTeX">$x$</span> is an arbitrary number
</div>
</div>
</div>
<p><strong>Using Own Parser:</strong></p>
<p>Definition: The square root is the math function</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example26">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example26' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<span class="LaTeX">$\sqrt{ x^4 } = x^2$</span>
<p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl21">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl21' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
The answer is <span class="LaTeX">$x^2$</span> because <span class="LaTeX">$x^4 = x^{2+2} = x^2 \cdot x^2$</span>
<p>
</div>
</div>
</div>
<p>Legend: where <span class="LaTeX">$x$</span> is an arbitrary number</p>
<p><strong>Using Headings</strong></p>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl22">
<i class='fa fa-comment-dots'></i> Explanation of This
</h5>
<div id='expl22' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<p>This is an explanation to demonstrate the auto detection of an explanation</p>
even over several lines
<p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example27">
<i class='fa fa-chart-bar'></i> Example Subsection
</h5>
<div id='example27' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example to demonstrate the auto detection of an example even over several lines
<p>
</div>
</div>
</div>
<script type="text/javascript">
function RC_calcFrequency() {
 var C1 = getValue( document.getElementById("C_val").textContent );
 var R1 = getValue( document.getElementById("R_val").textContent );
 var F1 = document.getElementById("F_val");
 var freq = 1/(2 * Math.PI * C1 * R1);
 F1.textContent=freq.toPrecision(3)+" Hz";
 tau.textContent=(R1 * C1 * 1000).toPrecision(3)+" ms";
}

function syncValues(id, value){
    RC_calcFrequency();
}
</script>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This page is a showcase of the features that TeX4TUM provides and demonstrates how learning materials could be made interactive, fast accessible, and neat.
</p>
</div>
</div>
</div>
<p>Click on the heading to unfold the definition box.</p>
<h2 id="table-of-contents"><i class="fa fa-list-ul"></i> Table of Contents</h2>
<ul>
<li><a href="#interactive-features">Interactive Features</a></li>
<li><a href="#basic-fomartting">Basic Fomartting</a></li>
<li><a href="#todo">ToDo</a></li>
<li><a href="#feature-tests">Feature Tests</a></li>
</ul>
<h2 id="interactive-features">Interactive Features</h2>
<h3 id="content-categories">Content Categories</h3>
<p>Read only the content you really need. Use the options in the top right corner to change the visibility of the following content:<br></p>
<p>Using Liquid Tags:</p>
<div class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The square root is the math function <span class="LaTeX">$\sqrt{\cdot}$</span>.
</p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example24">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example24' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
Example <span class="LaTeX">$\sqrt{ x^4 } = x^2$</span>
<p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl19">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl19' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an explanation.
<p>
</div>
</div>
</div>
<h3 id="interactive-equations">Interactive Equations</h3>
<p>For a low-pass filter, the Cut-Off Frequency is</p>
<div data-toggle="collapse" href="#eq_0">
<p><span class="LaTeX">$$f_c = \frac{1}{2\pi R C}$$</span></p>
</div>
<div id="eq_0" class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
<p>with the resistance <span class="LaTeX">$R$</span> and capacity <span class="LaTeX">$C$</span></p>
</div>
</div>
</div>
<p>Click on the equation to expand the legend. For resistance <span class="LaTeX">$R$</span> = <span id="R_val" onclick="askValue(this.id)">10k</span>Ω and capacity <span class="LaTeX">$C$</span> = <span id="C_val" onclick="askValue(this.id)">100n</span>F the Cut-Off Frequency is <span class="LaTeX">$f_c$</span> = <tspan id="F_val">159 Hz</tspan>. Click on the values of R and C in the text to change them!</p>
<!-- Even more complex equations such as $\int \sqrt{x^2} \diff x = \frac{1}{3} x^3$ are rendered beautifully with [KaTex](https://khan.github.io/KaTeX/)). -->
<h3 id="interactive-diagrams">Interactive Diagrams</h3>
<p>Play with diagrams for better understanding. Click and drag the black ray with the mouse or change any value in the diagram.</p>
<figure>
<object class="img-fluid" id="fraction" data="res/img/dynamic-images/fraction.svg" type="image/svg+xml">
</object>
<figcaption>
</figcaption>
</figure>
<h3 id="fast-fuzzy-search">Fast Fuzzy Search</h3>
<p>Find an answer blazingly fast. The fuzzy search in the top bar displays results immediately without slow sever communication. Just hit <code>tab</code> to focus the search, then type e.g. &quot;did&quot; to search for &quot;Diode&quot;.</p>
<h2 id="basic-fomartting">Basic Fomartting</h2>
<h3 id="tables">Tables</h3>
<p>Tables are easily generated.</p>
<table>
<thead>
<tr class="header">
<th>Feature</th>
<th>Works</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Tables</td>
<td>yes</td>
</tr>
<tr class="even">
<td>MOSI</td>
<td>Master Out, Slave In</td>
</tr>
<tr class="odd">
<td>MISO</td>
<td>Master In, Slave Out</td>
</tr>
</tbody>
</table>
<h3 id="abreviations">Abreviations</h3>
<p>Furthermore, abbreviations such as USB, BIOS, SVG, or <abbr title="Joint Photographic Experts Group" >JPEG</abbr> do not need explanations anymore. If you do not know it just move the mouse over it.</p>
<h3 id="tab-boxes">Tab Boxes</h3>
<p>You can use boxes with tabs for content that exists in similiar variations.</p>
<div class="card tabbox">
<div class="card-header">
<ul class="nav nav-tabs card-header-tabs ml-0" role="tablist">
<li class="nav-item">
<a class="nav-link active" data-toggle="tab" href="#checkboxid-0" role="tab">Tab 1</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-1" role="tab">Tab 2</a>
</li>
<li class="nav-item">
<a class="nav-link" data-toggle="tab" href="#checkboxid-2" role="tab">Tab 3</a>
</li>
</ul>
</div>
<div class="card-body">
<div class="tab-content">
<div id="checkboxid-0" class="tab-pane active" role="tabpanel">
<p>This should by displayed in tab 1</p>
</div>
<div id="checkboxid-1" class="tab-pane" role="tabpanel">
<p>tabs are simply created by the headers</p>
</div>
<div id="checkboxid-2" class="tab-pane" role="tabpanel">
<p>and this is tab 3. Markdown <em>elements</em> and tex <span class="LaTeX">$\sqrt{3}$</span> are supported.</p>
</div>
</div>
</div>
</div>
<p></br></p>
<p>Also content after the tabbox is displayed normally.</p>
<h2 id="todo">ToDo</h2>
<ul>
<li>Full responsive design</li>
<li>remember options with cookies</li>
<li>consistent <abbr title="JavaScript" >JS</abbr> framework for interactive content</li>
<li>Improved search: Sorting results, reaction to no results</li>
<li>More content</li>
</ul>
<h2 id="feature-tests">Feature Tests</h2>
<h3 id="content-categories-1">Content Categories</h3>
<p><strong>Using Liquid Tags:</strong></p>
<div class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
The square root is the math function <span class="LaTeX">$\sqrt{\cdot}$</span>.
</p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example25">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example25' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
Example <span class="LaTeX">$\sqrt{ x^4 } = x^2$</span>
<p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl20">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl20' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<span class="LaTeX">$x^4 = x^{2+2} = x^2 \cdot x^2$</span>
<p>
</div>
</div>
</div>
<div class="legend collapse">
<div class="card border-info w-75 mx-auto">
<div class="p-1 small">
where <span class="LaTeX">$x$</span> is an arbitrary number
</div>
</div>
</div>
<p><strong>Using Own Parser:</strong></p>
<p>Definition: The square root is the math function</p>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example26">
<i class='fa fa-chart-bar'></i> Example
</h5>
<div id='example26' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
<span class="LaTeX">$\sqrt{ x^4 } = x^2$</span>
<p>
</div>
</div>
</div>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl21">
<i class='fa fa-comment-dots'></i> Explanation
</h5>
<div id='expl21' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
The answer is <span class="LaTeX">$x^2$</span> because <span class="LaTeX">$x^4 = x^{2+2} = x^2 \cdot x^2$</span>
<p>
</div>
</div>
</div>
<p>Legend: where <span class="LaTeX">$x$</span> is an arbitrary number</p>
<p><strong>Using Headings</strong></p>
<h5 class="clp_title text-warning" data-toggle="collapse" href="#expl22">
<i class='fa fa-comment-dots'></i> Explanation of This
</h5>
<div id='expl22' class='explanation collapse'>
<div class='card border-warning mb-1'>
<div class='card-body'>
<p class='card-text'>
<p>This is an explanation to demonstrate the auto detection of an explanation</p>
even over several lines
<p>
</div>
</div>
</div>
<h5 class="clp_title text-success" data-toggle="collapse" href="#example27">
<i class='fa fa-chart-bar'></i> Example Subsection
</h5>
<div id='example27' class='example collapse'>
<div class='card border-success mb-1'>
<div class='card-body'>
<p class='card-text'>
This is an example to demonstrate the auto detection of an example even over several lines
<p>
</div>
</div>
</div>
<script type="text/javascript">
function RC_calcFrequency() {
 var C1 = getValue( document.getElementById("C_val").textContent );
 var R1 = getValue( document.getElementById("R_val").textContent );
 var F1 = document.getElementById("F_val");
 var freq = 1/(2 * Math.PI * C1 * R1);
 F1.textContent=freq.toPrecision(3)+" Hz";
 tau.textContent=(R1 * C1 * 1000).toPrecision(3)+" ms";
}

function syncValues(id, value){
    RC_calcFrequency();
}
</script>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This pages displays articles that needs improvement.
</p>
</div>
</div>
</div>
<p>In order to generate a todo place the word <code>TODO</code> inside an article at the beginning of a line.</p>
<h2 id="list-of-todos">List of TODOs</h2>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of RAM modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust <abbr title="JavaScript" >JS</abbr> library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
<!-- Basics -->
<!--    -->
<!-- \newcommand{\diff}{\mathop{}\!\mathrm{\vphantom( d}} -->
<!-- SI Units -->
<!--=============================================================== -->
<!-- KaTeX Tweaks -->
<div id="title_def" class="definition collapse">
<div class="card border-primary mb-1">
<div class="card-body">
<h5 class="card-title text-primary">
Definition
</h5>
<p class="card-text">
This pages displays articles that needs improvement.
</p>
</div>
</div>
</div>
<p>In order to generate a todo place the word <code>TODO</code> inside an article at the beginning of a line.</p>
<h2 id="list-of-todos">List of TODOs</h2>
<table class="table table-striped">
<thead>
<tr>
<th>
ToDo
</th>
<th>
Source File
</th>
<th>
Page Reference
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MOS,
</td>
<td>
bus.md
</td>
<td>
<a href="/bus.html">Bus</a>
</td>
</tr>
<tr>
<td>
explain how values are read / written
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
typical values of <abbr title="Random Access Memory" >RAM</abbr> modules
</td>
<td>
ram.md
</td>
<td>
<a href="/ram.html">Random Access Memory (RAM)</a>
</td>
</tr>
<tr>
<td>
adjust <abbr title="JavaScript" >JS</abbr> library for blake2b
</td>
<td>
blake2.md
</td>
<td>
<a href="/blake2.html">Blake 2</a>
</td>
</tr>
<tr>
<td>
Javascript to escape strings
</td>
<td>
uri.md
</td>
<td>
<a href="/uri.html">Uniform Resource Identifier (URI)</a>
</td>
</tr>
<tr>
<td>
jvascript that displays different encodings
</td>
<td>
utf8.md
</td>
<td>
<a href="/utf8.html">UTF-8</a>
</td>
</tr>
<tr>
<td>
diagram explaining the GNU tool chain: linker
</td>
<td>
c.md
</td>
<td>
<a href="/c.html">C</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
http.md
</td>
<td>
<a href="/http.html">HTTP</a>
</td>
</tr>
<tr>
<td>
write article
</td>
<td>
mac.md
</td>
<td>
<a href="/mac.html">Media Access Control</a>
</td>
</tr>
<tr>
<td>
fill list
</td>
<td>
tcp.md
</td>
<td>
<a href="/tcp.html">TCP</a>
</td>
</tr>
<tr>
<td>
Float umwandlung mit precision fehler
</td>
<td>
numbers.md
</td>
<td>
<a href="/numbers.html">Number Converter</a>
</td>
</tr>
<tr>
<td>
explanation
</td>
<td>
matrix.md
</td>
<td>
<a href="/matrix.html">Matrix</a>
</td>
</tr>
<tr>
<td>
adjust svg like this: https://www.thinkcalculator.com/algebra/convolution-calculator.php
</td>
<td>
convolution.md
</td>
<td>
<a href="/convolution.html">Convolution</a>
</td>
</tr>
<tr>
<td>
explain alpha, beta, and P
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
precision, recall, sensitivity
</td>
<td>
testing.md
</td>
<td>
<a href="/testing.html">Hypothesis Testing</a>
</td>
</tr>
<tr>
<td>
draw image of the process github .md --&gt; jekyll --&gt; scripts --&gt; pandoc --&gt; .html + head.html = webpage
</td>
<td>
about.md
</td>
<td>
<a href="/about.html">About TeX4TUM</a>
</td>
</tr>
<tr>
<td>
should we use mermaid?
</td>
<td>
contribution.md
</td>
<td>
<a href="/contribution.html">Contribution</a>
</td>
</tr>
<tr>
<td>
This will be written into the todo-list
</td>
<td>
demo.md
</td>
<td>
<a href="/demo.html">Demo of Interactive Features</a>
</td>
</tr>
<tr>
<td>
place as cards with logo (bootstrap)
</td>
<td>
links.md
</td>
<td>
<a href="/links.html">Links</a>
</td>
</tr>
</tbody>
</table>
Generating Search Index...
                    done in 6.536 seconds.
 Auto-regeneration: enabled for '/home/emareg/Dropbox/Projekte/LearningPlatform/tex4tum'
    Server address: http://127.0.0.1:4000/
  Server running... press ctrl-c to stop.
